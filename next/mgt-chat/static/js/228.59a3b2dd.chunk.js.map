{"version":3,"file":"static/js/228.59a3b2dd.chunk.js","mappings":"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","sources":["components/PageHeader.tsx","../../../packages/mgt-react/src/generated/todo.ts","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbar.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/ToolbarContext.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarStyles.styles.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/Toolbar.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/useToolbarContextValues.js","../../../node_modules/@fluentui/react-toolbar/lib/components/Toolbar/renderToolbar.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroup.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/useToolbarGroupStyles.styles.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/ToolbarGroup.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarGroup/renderToolbarGroup.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButtonStyles.styles.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/ToolbarButton.js","../../../node_modules/@fluentui/react-toolbar/lib/components/ToolbarButton/useToolbarButton.js","components/DirectReports.tsx","pages/DashboardPage.tsx","../../../node_modules/@fluentui/react-button/lib/components/Button/renderButton.js","../../../packages/mgt-react/src/generated/get.ts"],"sourcesContent":["import * as React from 'react';\nimport { Divider, makeStyles } from '@fluentui/react-components';\n\nexport interface IPageHeaderProps {\n  title: string;\n  description: string;\n}\n\nconst useStyles = makeStyles({\n  divider: {\n    alignItems: 'self-start',\n    paddingTop: '20px',\n    marginBottom: '20px'\n  }\n});\n\nexport const PageHeader: React.FunctionComponent<IPageHeaderProps> = props => {\n  const styles = useStyles();\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      <div>{props.description}</div>\n      <Divider className={styles.divider} />\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { TodoFilter } from '@microsoft/mgt-components';\nimport { registerMgtTodoComponent } from '@microsoft/mgt-components';\nimport { TemplateContext,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type TodoProps = {\n\ttaskFilter?: TodoFilter;\n\treadOnly?: boolean;\n\thideHeader?: boolean;\n\thideOptions?: boolean;\n\ttargetId?: string;\n\tinitialId?: string;\n\ttemplateContext?: TemplateContext;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Todo = wrapMgt<TodoProps>('todo', registerMgtTodoComponent);\n\n","import * as React from 'react';\nimport { useEventCallback, useControllableState, getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\n/**\n * Create the state required to render Toolbar.\n *\n * The returned state can be modified with hooks such as useToolbarStyles_unstable,\n * before being passed to renderToolbar_unstable.\n *\n * @param props - props from this instance of Toolbar\n * @param ref - reference to root HTMLElement of Toolbar\n */ export const useToolbar_unstable = (props, ref)=>{\n    const { size = 'medium', vertical = false } = props;\n    const arrowNavigationProps = useArrowNavigationGroup({\n        circular: true,\n        axis: 'both'\n    });\n    const initialState = {\n        size,\n        vertical,\n        // TODO add appropriate props/defaults\n        components: {\n            // TODO add each slot's element type or component\n            root: 'div'\n        },\n        // TODO add appropriate slots, for example:\n        // mySlot: resolveShorthand(props.mySlot),\n        root: slot.always(getIntrinsicElementProps('div', {\n            role: 'toolbar',\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref,\n            ...vertical && {\n                'aria-orientation': 'vertical'\n            },\n            ...arrowNavigationProps,\n            ...props\n        }), {\n            elementType: 'div'\n        })\n    };\n    const [checkedValues, onCheckedValueChange] = useToolbarSelectableState({\n        checkedValues: props.checkedValues,\n        defaultCheckedValues: props.defaultCheckedValues,\n        onCheckedValueChange: props.onCheckedValueChange\n    });\n    const handleToggleButton = useEventCallback((e, name, value, checked)=>{\n        if (name && value) {\n            const checkedItems = (checkedValues === null || checkedValues === void 0 ? void 0 : checkedValues[name]) || [];\n            const newCheckedItems = [\n                ...checkedItems\n            ];\n            if (checked) {\n                newCheckedItems.splice(newCheckedItems.indexOf(value), 1);\n            } else {\n                newCheckedItems.push(value);\n            }\n            onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {\n                name,\n                checkedItems: newCheckedItems\n            });\n        }\n    });\n    const handleRadio = useEventCallback((e, name, value, checked)=>{\n        if (name && value) {\n            onCheckedValueChange === null || onCheckedValueChange === void 0 ? void 0 : onCheckedValueChange(e, {\n                name,\n                checkedItems: [\n                    value\n                ]\n            });\n        }\n    });\n    return {\n        ...initialState,\n        handleToggleButton,\n        handleRadio,\n        checkedValues: checkedValues !== null && checkedValues !== void 0 ? checkedValues : {}\n    };\n};\n/**\n * Adds appropriate state values and handlers for selectable items\n * i.e checkboxes and radios\n */ const useToolbarSelectableState = (state)=>{\n    const [checkedValues, setCheckedValues] = useControllableState({\n        state: state.checkedValues,\n        defaultState: state.defaultCheckedValues,\n        initialState: {}\n    });\n    const { onCheckedValueChange: onCheckedValueChangeOriginal } = state;\n    const onCheckedValueChange = useEventCallback((e, { name, checkedItems })=>{\n        if (onCheckedValueChangeOriginal) {\n            onCheckedValueChangeOriginal(e, {\n                name,\n                checkedItems\n            });\n        }\n        setCheckedValues((s)=>{\n            return s ? {\n                ...s,\n                [name]: checkedItems\n            } : {\n                [name]: checkedItems\n            };\n        });\n    });\n    return [\n        checkedValues,\n        onCheckedValueChange\n    ];\n};\n","import { createContext, useContextSelector } from '@fluentui/react-context-selector';\nexport const ToolbarContext = createContext(undefined);\nconst toolbarContextDefaultValue = {\n    size: 'medium',\n    handleToggleButton: ()=>null,\n    handleRadio: ()=>null,\n    vertical: false,\n    checkedValues: {}\n};\nexport const useToolbarContext_unstable = (selector)=>useContextSelector(ToolbarContext, (ctx = toolbarContextDefaultValue)=>selector(ctx));\n","import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nexport const toolbarClassNames = {\n    root: 'fui-Toolbar'\n};\n/**\n * Styles for the root slot\n */ const useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        ...shorthands.padding('4px', '8px')\n    },\n    vertical: {\n        flexDirection: 'column',\n        width: 'fit-content'\n    },\n    small: {\n        ...shorthands.padding('0px', '4px')\n    },\n    medium: {\n        ...shorthands.padding('4px', '8px')\n    },\n    large: {\n        ...shorthands.padding('4px', '20px')\n    }\n});\n/**\n * Apply styling to the Toolbar slots based on the state\n */ export const useToolbarStyles_unstable = (state)=>{\n    const styles = useStyles();\n    const { vertical, size } = state;\n    state.root.className = mergeClasses(toolbarClassNames.root, styles.root, vertical && styles.vertical, size === 'small' && !vertical && styles.small, size === 'medium' && !vertical && styles.medium, size === 'large' && !vertical && styles.large, state.root.className);\n    return state;\n};\n","import * as React from 'react';\nimport { useToolbar_unstable } from './useToolbar';\nimport { renderToolbar_unstable } from './renderToolbar';\nimport { useToolbarStyles_unstable } from './useToolbarStyles.styles';\nimport { useToolbarContextValues_unstable } from './useToolbarContextValues';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * Toolbar component\n */ export const Toolbar = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useToolbar_unstable(props, ref);\n    const contextValues = useToolbarContextValues_unstable(state);\n    useToolbarStyles_unstable(state);\n    useCustomStyleHook_unstable('useToolbarStyles_unstable')(state);\n    return renderToolbar_unstable(state, contextValues);\n});\nToolbar.displayName = 'Toolbar';\n","export function useToolbarContextValues_unstable(state) {\n    const { size, handleToggleButton, vertical, checkedValues, handleRadio } = state;\n    // This context is created with \"@fluentui/react-context-selector\", these is no sense to memoize it\n    const toolbar = {\n        size,\n        vertical,\n        handleToggleButton,\n        handleRadio,\n        checkedValues\n    };\n    return {\n        toolbar\n    };\n}\n","  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\nimport { ToolbarContext } from './ToolbarContext';\n/**\n * Render the final JSX of Toolbar\n */ export const renderToolbar_unstable = (state, contextValues)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsx(ToolbarContext.Provider, {\n        value: contextValues.toolbar,\n        children: /*#__PURE__*/ _jsx(state.root, {\n            children: state.root.children\n        })\n    });\n};\n","import { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport * as React from 'react';\n/**\n * Given user props, defines default props for the Group\n * @param props - User provided props to the Group component.\n * @param ref - User provided ref to be passed to the Group component.\n */ export const useToolbarGroup_unstable = (props, ref)=>{\n    return {\n        components: {\n            root: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            ref,\n            role: 'presentation',\n            ...props\n        }), {\n            elementType: 'div'\n        })\n    };\n};\n","import { mergeClasses } from '@griffel/react';\nexport const toolbarGroupClassNames = {\n    root: 'fui-ToolbarGroup'\n};\n/**\n * Apply styling to the Toolbar slots based on the state\n */ export const useToolbarGroupStyles_unstable = (state)=>{\n    state.root.className = mergeClasses(toolbarGroupClassNames.root, state.root.className);\n    return state;\n};\n","import * as React from 'react';\nimport { useToolbarGroup_unstable } from './useToolbarGroup';\nimport { useToolbarGroupStyles_unstable } from './useToolbarGroupStyles.styles';\nimport { renderToolbarGroup_unstable } from './renderToolbarGroup';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * ToolbarGroup component is a Button to be used inside Toolbar\n * which will respect toolbar props such as `size`\n */ export const ToolbarGroup = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useToolbarGroup_unstable(props, ref);\n    useToolbarGroupStyles_unstable(state);\n    useCustomStyleHook_unstable('useToolbarGroupStyles_unstable')(state);\n    return renderToolbarGroup_unstable(state);\n// Casting is required due to lack of distributive union to support unions on @types/react\n});\nToolbarGroup.displayName = 'ToolbarGroup';\n","  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Render the final JSX of ToolbarGroup\n */ export const renderToolbarGroup_unstable = (state)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsx(state.root, {\n        children: state.root.children\n    });\n};\n","import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nconst useBaseStyles = makeStyles({\n    vertical: {\n        flexDirection: 'column'\n    },\n    verticalIcon: {\n        fontSize: '24px',\n        ...shorthands.margin('0')\n    }\n});\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */ export const useToolbarButtonStyles_unstable = (state)=>{\n    useButtonStyles_unstable(state);\n    const buttonStyles = useBaseStyles();\n    state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);\n    if (state.icon) {\n        state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);\n    }\n};\n","import * as React from 'react';\nimport { renderButton_unstable } from '@fluentui/react-button';\nimport { useToolbarButtonStyles_unstable } from './useToolbarButtonStyles.styles';\nimport { useToolbarButton_unstable } from './useToolbarButton';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * ToolbarButton component is a Button to be used inside Toolbar\n * which will respect toolbar props such as `size`\n */ export const ToolbarButton = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useToolbarButton_unstable(props, ref);\n    useToolbarButtonStyles_unstable(state);\n    useCustomStyleHook_unstable('useToolbarButtonStyles_unstable')(state);\n    return renderButton_unstable(state);\n// Casting is required due to lack of distributive union to support unions on @types/react\n});\nToolbarButton.displayName = 'ToolbarButton';\n","import * as React from 'react';\nimport { useButton_unstable } from '@fluentui/react-button';\n/**\n * Given user props, defines default props for the Button, calls useButtonState and useChecked, and returns\n * processed state.\n * @param props - User provided props to the Button component.\n * @param ref - User provided ref to be passed to the Button component.\n */ export const useToolbarButton_unstable = (props, ref)=>{\n    const { vertical = false, ...buttonProps } = props;\n    const state = useButton_unstable({\n        appearance: 'subtle',\n        ...buttonProps\n    }, ref);\n    return {\n        vertical,\n        ...state\n    };\n};\n","import {\n  DataGrid,\n  DataGridBody,\n  DataGridCell,\n  DataGridHeader,\n  DataGridHeaderCell,\n  DataGridRow,\n  TableCellLayout,\n  TableColumnDefinition,\n  Toolbar,\n  ToolbarButton,\n  ToolbarGroup,\n  createTableColumn,\n  makeStyles\n} from '@fluentui/react-components';\n\nimport { SkeletonItem } from '@fluentui/react-components';\nimport { FeedRegular } from '@fluentui/react-icons';\nimport { Get, MgtTemplateProps, Person } from '@microsoft/mgt-react';\nimport React from 'react';\n\nexport interface IIndicentsProps {}\nconst useStyles = makeStyles({\n  toolbar: {\n    justifyContent: 'space-between'\n  }\n});\n\nconst getColumns = (shimmered: boolean): TableColumnDefinition<any>[] => {\n  const columns: TableColumnDefinition<any>[] = [\n    createTableColumn<any>({\n      columnId: 'name',\n      renderHeaderCell: () => {\n        return 'Name';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} />\n            ) : (\n              <Person userId={item.id} view=\"oneline\" personCardInteraction=\"hover\" />\n            )}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'jobTitle',\n      renderHeaderCell: () => {\n        return 'Job Title';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} /> : item.jobTitle}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'mobilePhone',\n      renderHeaderCell: () => {\n        return 'Mobile Phone';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} /> : item.mobilePhone}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'officeLocation',\n      renderHeaderCell: () => {\n        return 'Office Location';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} /> : item.officeLocation}\n          </TableCellLayout>\n        );\n      }\n    })\n  ];\n\n  return columns;\n};\n\nexport function DirectReports(props: IIndicentsProps) {\n  return (\n    <Get resource={`me/directReports`}>\n      <DataGridTemplate template=\"default\"></DataGridTemplate>\n      <DataGridTemplate template=\"loading\"></DataGridTemplate>\n      <NoDataTemplate template=\"no-data\"></NoDataTemplate>\n    </Get>\n  );\n}\n\nconst DataGridTemplate = (props: MgtTemplateProps) => {\n  const styles = useStyles();\n  const [teams] = React.useState<any[]>(props.dataContext.value);\n  const [isLoading] = React.useState<boolean>(props.dataContext && !props.dataContext.value);\n  const [selectedTeam, setSelectedTeam] = React.useState<any>(null);\n\n  const onSelectionChange = (e: any, data: any) => {\n    const [selectedItem] = data.selectedItems;\n    const team = teams.find(i => i.id === selectedItem);\n    setSelectedTeam(team);\n  };\n\n  return (\n    <div>\n      <Toolbar className={styles.toolbar}>\n        <ToolbarGroup role=\"presentation\">\n          <ToolbarButton\n            icon={<FeedRegular />}\n            disabled={!selectedTeam}\n            as=\"a\"\n            href={`https://www.office.com/feed?auth=2#/user/${selectedTeam?.id}`}\n            target=\"_blank\"\n          >\n            View feed\n          </ToolbarButton>\n        </ToolbarGroup>\n      </Toolbar>\n      <DataGrid\n        columns={getColumns(isLoading)}\n        items={isLoading ? [...Array<number>(5)] : teams}\n        selectionMode=\"single\"\n        onSelectionChange={onSelectionChange}\n        getRowId={item => (isLoading ? Math.random() : item.id)}\n      >\n        <DataGridHeader>\n          <DataGridRow>\n            {({ renderHeaderCell }) => <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>}\n          </DataGridRow>\n        </DataGridHeader>\n        <DataGridBody<any>>\n          {({ item, rowId }) => (\n            <DataGridRow<any> key={rowId}>\n              {({ renderCell }) => <DataGridCell>{renderCell(item)}</DataGridCell>}\n            </DataGridRow>\n          )}\n        </DataGridBody>\n      </DataGrid>\n    </div>\n  );\n};\n\nconst NoDataTemplate = (props: MgtTemplateProps) => {\n  return <>You don't have direct reports</>;\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport { Todo } from '@microsoft/mgt-react';\nimport { DirectReports } from '../components/DirectReports';\nimport {\n  SelectTabData,\n  SelectTabEvent,\n  Tab,\n  TabList,\n  TabValue,\n  makeStyles,\n  shorthands\n} from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  panels: {\n    ...shorthands.padding('10px')\n  }\n});\n\nconst DashboardPage: React.FunctionComponent = () => {\n  const styles = useStyles();\n\n  const [selectedTab, setSelectedTab] = React.useState<TabValue>('tasks');\n\n  const onTabSelect = (event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedTab(data.value);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={'My Dashboard'}\n        description={'This dashboard helps you being productive with your tasks and your incidents.'}\n      ></PageHeader>\n      <div>\n        <TabList selectedValue={selectedTab} onTabSelect={onTabSelect}>\n          <Tab value=\"tasks\">My Tasks</Tab>\n          <Tab value=\"directReports\">My Direct Reports</Tab>\n        </TabList>\n        <div className={styles.panels}>\n          {selectedTab === 'tasks' && <Todo></Todo>}\n          {selectedTab === 'directReports' && <DirectReports />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default DashboardPage;\n","  import { jsx as _jsx, jsxs as _jsxs } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Renders a Button component by passing the state defined props to the appropriate slots.\n */ export const renderButton_unstable = (state)=>{\n    assertSlots(state);\n    const { iconOnly, iconPosition } = state;\n    return /*#__PURE__*/ _jsxs(state.root, {\n        children: [\n            iconPosition !== 'after' && state.icon && /*#__PURE__*/ _jsx(state.icon, {}),\n            !iconOnly && state.root.children,\n            iconPosition === 'after' && state.icon && /*#__PURE__*/ _jsx(state.icon, {})\n        ]\n    });\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { ResponseType,DataChangedDetail } from '@microsoft/mgt-components';\nimport { registerMgtGetComponent } from '@microsoft/mgt-components';\nimport { TemplateContext,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type GetProps = {\n\tresource?: string;\n\tscopes?: string[];\n\tversion?: string;\n\ttype?: ResponseType;\n\tmaxPages?: number;\n\tpollingRate?: number;\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tresponse?: any;\n\ttemplateContext?: TemplateContext;\n\tdataChange?: (e: CustomEvent<DataChangedDetail>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Get = wrapMgt<GetProps>('get', registerMgtGetComponent);\n\n"],"names":["useStyles","makeStyles","divider","alignItems","paddingTop","marginBottom","PageHeader","props","styles","_jsxs","children","_jsx","title","description","Divider","className","Todo","wrapMgt","registerMgtTodoComponent","useToolbarSelectableState","state","_useControllableState","useControllableState","checkedValues","defaultState","defaultCheckedValues","initialState","_useControllableState2","_slicedToArray","setCheckedValues","onCheckedValueChangeOriginal","onCheckedValueChange","useEventCallback","e","_ref","name","checkedItems","s","_objectSpread","_defineProperty","ToolbarContext","createContext","undefined","toolbarClassNames","__styles","root","mc9l5x","Bt984gj","z8tnut","z189sj","Byoj8tv","uwmqm3","vertical","Beiy3e4","a9b677","small","medium","large","d","Toolbar","React","ref","_props$size","size","_props$vertical","arrowNavigationProps","useArrowNavigationGroup","circular","axis","components","slot","getIntrinsicElementProps","role","elementType","_useToolbarSelectable","_useToolbarSelectable2","handleToggleButton","value","checked","newCheckedItems","_toConsumableArray","splice","indexOf","push","handleRadio","useToolbar_unstable","contextValues","toolbar","useToolbarContextValues_unstable","mergeClasses","useToolbarStyles_unstable","useCustomStyleHook_unstable","assertSlots","Provider","renderToolbar_unstable","displayName","toolbarGroupClassNames","ToolbarGroup","useToolbarGroup_unstable","useToolbarGroupStyles_unstable","renderToolbarGroup_unstable","useBaseStyles","verticalIcon","Be2twd7","B6of3ja","t21cq0","jrapky","Frg6f3","ToolbarButton","buttonProps","_objectWithoutProperties","_excluded","useButton_unstable","appearance","useToolbarButton_unstable","useButtonStyles_unstable","buttonStyles","icon","useToolbarButtonStyles_unstable","renderButton_unstable","justifyContent","DirectReports","Get","resource","DataGridTemplate","template","NoDataTemplate","shimmered","_React$useState","dataContext","teams","_React$useState3","isLoading","_React$useState5","_React$useState6","selectedTeam","setSelectedTeam","FeedRegular","disabled","as","href","concat","id","target","DataGrid","columns","createTableColumn","columnId","renderHeaderCell","renderCell","item","TableCellLayout","SkeletonItem","shape","style","width","Person","userId","view","personCardInteraction","jobTitle","mobilePhone","officeLocation","items","Array","selectionMode","onSelectionChange","data","selectedItem","selectedItems","team","find","i","getRowId","Math","random","DataGridHeader","DataGridRow","DataGridHeaderCell","DataGridBody","_ref2","rowId","_ref3","DataGridCell","_Fragment","panels","shorthands","padding","_React$useState2","selectedTab","setSelectedTab","TabList","selectedValue","onTabSelect","event","Tab","iconOnly","iconPosition","registerMgtGetComponent"],"sourceRoot":""}