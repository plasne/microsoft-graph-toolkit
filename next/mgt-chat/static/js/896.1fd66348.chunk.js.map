{"version":3,"file":"static/js/896.1fd66348.chunk.js","mappings":"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","sources":["components/Loading.tsx","../../../packages/mgt-components/dist/es6/components/mgt-people/src/components/mgt-people/mgt-people-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-people/src/components/mgt-people/mgt-people.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner-css.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner.ts","../../../packages/mgt-react/src/generated/get.ts","../../../packages/mgt-react/src/generated/spinner.ts"],"sourcesContent":["import * as React from 'react';\nimport { MgtTemplateProps, Spinner } from '@microsoft/mgt-react';\nimport { makeStyles } from '@fluentui/react-components';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 'calc(100vh - 300px)'\n  },\n  message: {\n    paddingLeft: '10px'\n  }\n});\n\nexport interface ILoadingProps extends MgtTemplateProps {\n  message?: string;\n}\n\nexport const Loading: React.FunctionComponent<ILoadingProps> = (props: ILoadingProps) => {\n  const styles = useStyles();\n  return (\n    <div className={styles.root}>\n      <Spinner />\n      <div className={styles.message}>\n        <span>{props.message || 'Loading...'}</span>\n      </div>\n    </div>\n  );\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .people-list{list-style:none;margin:var(--people-list-margin,8px 4px 8px 8px);padding:unset;display:flex;align-items:center;gap:var(--people-avatar-gap,4px)}:host .overflow span{vertical-align:middle;color:var(--people-overflow-font-color,currentColor);font-size:var(--people-overflow-font-size,12px);font-weight:var(--people-overflow-font-weight,400)}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { getPeople, getPeopleFromResource, PersonType } from '../../graph/graph.people';\nimport { getUsersPresenceByPeople } from '../../graph/graph.presence';\nimport { findGroupMembers, getUsersForPeopleQueries, getUsersForUserIds } from '../../graph/graph.user';\nimport { IDynamicPerson } from '../../graph/types';\nimport { Providers, ProviderState, MgtTemplatedComponent, arraysAreEqual, mgtHtml } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport { PersonCardInteraction } from './../PersonCardInteraction';\nimport { styles } from './mgt-people-css';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport { PersonCardInteraction } from './../PersonCardInteraction';\n\n/**\n * web component to display a group of people or contacts by using their photos or initials.\n *\n * @export\n * @class MgtPeople\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --people-list-margin- {String} the margin around the list of people. Default is 8px 4px 8px 8px.\n * @cssprop --people-avatar-gap - {String} the gap between the people in the list. Default is 4px.\n * @cssprop --people-overflow-font-color - {Color} the color of the overflow text.\n * @cssprop --people-overflow-font-size - {String} the text color of the overflow text. Default is 12px.\n * @cssprop --people-overflow-font-weight - {String} the font weight of the overflow text. Default is 400.\n */\n\nexport const registerMgtPeopleComponent = () => {\n  registerMgtPersonComponent();\n  registerComponent('people', MgtPeople);\n};\n\nexport class MgtPeople extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * determines if agenda events come from specific group\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'group-id',\n    type: String\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value) {\n    if (this._groupId === value) {\n      return;\n    }\n    this._groupId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * user id array\n   *\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'user-ids',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get userIds(): string[] {\n    return this._userIds;\n  }\n  public set userIds(value: string[]) {\n    if (arraysAreEqual(this._userIds, value)) {\n      return;\n    }\n    this._userIds = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * containing array of people used in the component.\n   *\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'people',\n    type: Object\n  })\n  public people: IDynamicPerson[];\n\n  /**\n   * allows developer to define queries of people for component\n   *\n   * @type {string[]}\n   */\n\n  @property({\n    attribute: 'people-queries',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get peopleQueries(): string[] {\n    return this._peopleQueries;\n  }\n  public set peopleQueries(value: string[]) {\n    if (arraysAreEqual(this._peopleQueries, value)) {\n      return;\n    }\n    this._peopleQueries = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * developer determined max people shown in component\n   *\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax: number;\n\n  /**\n   * determines if person component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Sets how the person-card is invoked\n   * Set to PersonCardInteraction.none to not show the card\n   *\n   * @type {PersonCardInteraction}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-card',\n    converter: (value, _type) => {\n      value = value.toLowerCase();\n      if (typeof PersonCardInteraction[value] === 'undefined') {\n        return PersonCardInteraction.hover;\n      } else {\n        return PersonCardInteraction[value] as PersonCardInteraction;\n      }\n    }\n  })\n  public personCardInteraction: PersonCardInteraction = PersonCardInteraction.hover;\n\n  /**\n   * The resource to get\n   *\n   * @type {string}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'resource',\n    type: String\n  })\n  public get resource(): string {\n    return this._resource;\n  }\n  public set resource(value) {\n    if (this._resource === value) {\n      return;\n    }\n    this._resource = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'version',\n    type: String\n  })\n  public get version(): string {\n    return this._version;\n  }\n  public set version(value) {\n    if (this._version === value) {\n      return;\n    }\n    this._version = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtPeople\n   */\n  @property({\n    attribute: 'scopes',\n    converter: value => {\n      return value ? value.toLowerCase().split(',') : null;\n    },\n    reflect: true\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Fallback when no user is found\n   *\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'fallback-details',\n    type: Array\n  })\n  public get fallbackDetails(): IDynamicPerson[] {\n    return this._fallbackDetails;\n  }\n  public set fallbackDetails(value: IDynamicPerson[]) {\n    if (value === this._fallbackDetails) {\n      return;\n    }\n\n    this._fallbackDetails = value;\n\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Get the scopes required for people\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPeople\n   */\n  public static get requiredScopes(): string[] {\n    return [\n      ...new Set([\n        'user.read.all',\n        'people.read',\n        'user.readbasic.all',\n        'presence.read.all',\n        'contacts.read',\n        ...MgtPerson.requiredScopes\n      ])\n    ];\n  }\n\n  private _groupId: string;\n  private _userIds: string[];\n  private _peopleQueries: string[];\n  private _peoplePresence: Record<string, MicrosoftGraph.Presence> = {};\n  private _resource: string;\n  private _version = 'v1.0';\n  private _fallbackDetails: IDynamicPerson[];\n  @state() private _arrowKeyLocation = -1;\n\n  constructor() {\n    super();\n    this.showMax = 3;\n  }\n\n  /**\n   * Clears the state of the component\n   *\n   * @protected\n   * @memberof MgtPeople\n   */\n  protected clearState(): void {\n    this.people = null;\n  }\n\n  /**\n   * Request to reload the state.\n   * Use reload instead of load to ensure loading events are fired.\n   *\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected requestStateUpdate(force?: boolean) {\n    if (force) {\n      this.people = null;\n    }\n    return super.requestStateUpdate(force);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    if (this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    if (!this.people || this.people.length === 0) {\n      return this.renderNoData();\n    }\n\n    return this.renderTemplate('default', { people: this.people, max: this.showMax }) || this.renderPeople();\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeople\n   */\n  protected renderLoading() {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Render the list of people.\n   *\n   * @protected\n   * @param {*} people\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderPeople(): TemplateResult {\n    const maxPeople = this.people.slice(0, this.showMax).filter(pple => pple);\n    return html`\n      <ul\n        tabindex=\"0\"\n        class=\"people-list\"\n        aria-label=\"people\"\n        @keydown=${this.handleKeyDown}>\n        ${repeat(\n          maxPeople,\n          p => (p.id ? p.id : p.displayName),\n          p => html`\n            <li tabindex=\"-1\" class=\"people-person\">\n              ${this.renderPerson(p)}\n            </li>\n          `\n        )}\n        ${this.people.length > this.showMax ? this.renderOverflow() : null}\n      </ul>\n    `;\n  }\n\n  /**\n   * Render the overflow content to represent any extra people, beyond the max.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderOverflow(): TemplateResult {\n    const extra = this.people.length - this.showMax;\n    return (\n      this.renderTemplate('overflow', {\n        extra,\n        max: this.showMax,\n        people: this.people\n      }) ||\n      html`\n        <li tabindex=\"-1\" aria-label=\"and ${extra} more attendees\" class=\"overflow\"><span>+${extra}</span></li>\n      `\n    );\n  }\n\n  /**\n   * Handles the keypresses on a keyboard for the listed people.\n   *\n   * @param event is a KeyboardEvent.\n   */\n  protected handleKeyDown = (event: KeyboardEvent) => {\n    const peopleContainer: HTMLElement = this.shadowRoot.querySelector('.people-list');\n    let person: HTMLElement;\n    const peopleElements: HTMLCollection = peopleContainer?.children;\n    // Default all tabindex values in li nodes to -1\n    for (const element of peopleElements) {\n      const el: HTMLElement = element as HTMLElement;\n      el.setAttribute('tabindex', '-1');\n      el.blur();\n    }\n\n    const childElementCount = peopleContainer.childElementCount;\n    const keyName = event.key;\n    if (keyName === 'ArrowRight') {\n      this._arrowKeyLocation = (this._arrowKeyLocation + 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'ArrowLeft') {\n      this._arrowKeyLocation = (this._arrowKeyLocation - 1 + childElementCount) % childElementCount;\n    } else if (keyName === 'Tab' || keyName === 'Escape') {\n      this._arrowKeyLocation = -1;\n      peopleContainer.blur();\n    } else if (['Enter', 'space', ' '].includes(keyName)) {\n      if (this.personCardInteraction !== PersonCardInteraction.none) {\n        const personEl = peopleElements[this._arrowKeyLocation] as HTMLElement;\n        const mgtPerson = personEl.querySelector<MgtPerson>('mgt-person');\n        if (mgtPerson) {\n          mgtPerson.showPersonCard();\n        }\n      }\n    }\n\n    if (this._arrowKeyLocation > -1) {\n      person = peopleElements[this._arrowKeyLocation] as HTMLElement;\n      person.setAttribute('tabindex', '1');\n      person.focus();\n    }\n  };\n\n  /**\n   * Render an individual person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderPerson(person: MicrosoftGraph.User | MicrosoftGraph.Person | MicrosoftGraph.Contact): TemplateResult {\n    let personPresence: MicrosoftGraph.Presence = {\n      // set up default presence\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (this.showPresence && this._peoplePresence) {\n      personPresence = this._peoplePresence[person.id];\n    }\n    const avatarSize = 'small';\n    return (\n      this.renderTemplate('person', { person }, person.id) ||\n      // set image to @ to flag the mgt-person component to\n      // query the image from the graph\n      mgtHtml`\n        <mgt-person\n          .personDetails=${person}\n          .fetchImage=${true}\n          .avatarSize=${avatarSize}\n          .personCardInteraction=${this.personCardInteraction}\n          .showPresence=${this.showPresence}\n          .personPresence=${personPresence}\n          .usage=${'people'}\n        ></mgt-person>\n      `\n    );\n  }\n\n  /**\n   * render the no data state.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeople\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeople\n   */\n  protected async loadState() {\n    if (!this.people) {\n      const provider = Providers.globalProvider;\n\n      if (provider && provider.state === ProviderState.SignedIn) {\n        const graph = provider.graph.forComponent(this);\n\n        // populate people\n        if (this.groupId) {\n          this.people = await findGroupMembers(graph, null, this.groupId, this.showMax, PersonType.person);\n        } else if (this.userIds || this.peopleQueries) {\n          this.people = this.userIds\n            ? await getUsersForUserIds(graph, this.userIds, '', '', this._fallbackDetails)\n            : await getUsersForPeopleQueries(graph, this.peopleQueries, this._fallbackDetails);\n        } else if (this.resource) {\n          this.people = await getPeopleFromResource(graph, this.version, this.resource, this.scopes);\n        } else {\n          this.people = await getPeople(graph);\n        }\n\n        // populate presence for people\n        if (this.showPresence) {\n          this._peoplePresence = await getUsersPresenceByPeople(graph, this.people);\n        } else {\n          this._peoplePresence = null;\n        }\n      }\n    }\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html } from 'lit';\nimport { MgtBaseComponent } from '@microsoft/mgt-element';\nimport { styles } from './mgt-spinner-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtSpinnerComponent = () => registerComponent('spinner', MgtSpinner);\n\n/**\n * Custom Component used to handle loading state in components.\n *\n * @export MgtSpinner\n * @class MgtSpinner\n * @extends {MgtBaseComponent}\n */\nexport class MgtSpinner extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * Render the loading spinner\n   *\n   * @returns\n   * @memberof MgtSpinner\n   */\n  public render() {\n    return html`<fluent-progress-ring title=\"spinner\"></fluent-progress-ring>`;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { ResponseType,DataChangedDetail } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtGetComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type GetProps = {\n\tresource?: string;\n\tscopes?: string[];\n\tversion?: string;\n\ttype?: ResponseType;\n\tmaxPages?: number;\n\tpollingRate?: number;\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tresponse?: any;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tdataChange?: (e: CustomEvent<DataChangedDetail>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const Get = wrapMgt<GetProps>('get', registerMgtGetComponent);\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { registerMgtSpinnerComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { ComponentMediaQuery } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type SpinnerProps = {\n\tmediaQuery?: ComponentMediaQuery;\n}\n\nexport const Spinner = wrapMgt<SpinnerProps>('spinner', registerMgtSpinnerComponent);\n\n"],"names":["useStyles","makeStyles","root","display","justifyContent","alignItems","height","message","paddingLeft","Loading","props","styles","_jsxs","className","children","_jsx","Spinner","css","_templateObject","_taggedTemplateLiteral","registerMgtPeopleComponent","registerMgtPersonComponent","registerComponent","MgtPeople","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","_classCallCheck","call","personCardInteraction","PersonCardInteraction","hover","scopes","_peoplePresence","_version","_arrowKeyLocation","handleKeyDown","event","person","_step","peopleContainer","shadowRoot","querySelector","peopleElements","_iterator","_createForOfIteratorHelper","s","n","done","el","value","setAttribute","blur","err","e","f","childElementCount","keyName","key","includes","none","mgtPerson","showPersonCard","focus","showMax","_createClass","get","this","_groupId","set","requestStateUpdate","_userIds","arraysAreEqual","_peopleQueries","_resource","_fallbackDetails","people","force","_get","_getPrototypeOf","prototype","isLoadingState","renderLoading","length","renderTemplate","max","renderPeople","renderNoData","html","_this2","maxPeople","slice","filter","pple","_templateObject2","repeat","p","id","displayName","_templateObject3","renderPerson","renderOverflow","extra","_templateObject4","personPresence","activity","availability","showPresence","mgtHtml","_templateObject5","_templateObject6","_context","next","provider","Providers","globalProvider","state","ProviderState","SignedIn","graph","forComponent","groupId","findGroupMembers","PersonType","sent","userIds","peopleQueries","getUsersForUserIds","t0","getUsersForPeopleQueries","resource","getPeopleFromResource","version","getPeople","getUsersPresenceByPeople","stop","_callee","_toConsumableArray","Set","concat","MgtPerson","requiredScopes","MgtTemplatedComponent","__decorate","property","attribute","type","String","converter","_type","split","map","v","trim","Object","Number","Boolean","toLowerCase","reflect","Array","registerMgtSpinnerComponent","MgtSpinner","_MgtBaseComponent","apply","arguments","MgtBaseComponent","Get","wrapMgt","registerMgtGetComponent"],"sourceRoot":""}