{"version":3,"file":"static/js/382.1fac2759.chunk.js","mappings":"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","sources":["../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file-css.ts","../../../packages/mgt-components/dist/es6/styles/src/styles/fluent-icons.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file/src/components/mgt-file/mgt-file.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{font-size:var(--default-font-size);font-weight:var(--default-font-weight,400);border:var(--file-border,1px solid transparent);border-radius:var(--file-border-radius,4px);background-color:var(--file-background-color)}:host .item{display:flex;flex-flow:row nowrap;align-items:center;background-color:var(--file-background-color);padding:var(--file-padding,0);margin:var(--file-margin,0)}:host .item:hover{background-color:var(--file-background-color-hover,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px);cursor:pointer;--secondary-text-color:var(--secondary-text-hover-color)}:host .item:focus,:host .item:focus-visible{background-color:var(--file-background-color-focus,var(--neutral-fill-hover));border-radius:var(--file-border-radius,4px)}:host .item__file-type-icon{height:var(--file-type-icon-height,28px);display:flex;align-items:center;justify-content:center}:host .item__file-type-icon img{height:var(--file-type-icon-height,28px)}:host .item__details{padding-inline-start:var(--file-padding-inline-start,14px)}:host .item__details .line1{font-size:var(--default-font-size);font-weight:var(--file-line1-font-weight,var(--default-font-weight,400));text-transform:var(--file-line1-text-transform,initial);line-height:20px;color:var(--file-line1-color,var(--neutral-foreground-rest))}:host .item__details .line2{color:var(--file-line2-color,var(--secondary-text-color));font-size:var(--file-line2-font-size,var(--last-modified-font-size,12px));font-weight:var(--file-line2-font-weight,var(--default-font-weight,400));text-transform:var(--file-line2-text-transform,initial);line-height:16px}:host .item__details .line3{color:var(--file-line3-color,var(--secondary-text-color));font-size:var(--file-line3-font-size,var(--size-font-size,12px));font-weight:var(--file-line3-font-weight,var(--default-font-weight,400));text-transform:var(--file-line3-text-transform,initial);line-height:16px}[dir=rtl] .item{direction:rtl}[dir=rtl] .item__details{direction:rtl}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nconst fileTypeMap: Record<string, string> = {\n  PowerPoint: 'pptx',\n  Word: 'docx',\n  Excel: 'xlsx',\n  Pdf: 'pdf',\n  OneNote: 'onetoc',\n  OneNotePage: 'one',\n  InfoPath: 'xsn',\n  Visio: 'vstx',\n  Publisher: 'pub',\n  Project: 'mpp',\n  Access: 'accdb',\n  Mail: 'email',\n  Csv: 'csv',\n  Archive: 'archive',\n  Xps: 'vector',\n  Audio: 'audio',\n  Video: 'video',\n  Image: 'photo',\n  Web: 'html',\n  Text: 'txt',\n  Xml: 'xml',\n  Story: 'genericfile',\n  ExternalContent: 'genericfile',\n  Folder: 'folder',\n  Spsite: 'spo',\n  Other: 'genericfile'\n};\n\nconst baseUri = 'https://spoprod-a.akamaihd.net/files/fabric-cdn-prod_20201008.001/assets/item-types';\n\n/**\n * Available icon sizes\n */\nexport type IconSize = 16 | 20 | 24 | 32 | 40 | 48 | 64 | 96;\n\n/**\n * Helper to provide fluent icon image urls\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUri = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const fileType: string = fileTypeMap[type] || 'genericfile';\n  return `${baseUri}/${size.toString()}/${fileType}.${extension}`;\n};\n\n/**\n * Helper to provide fluent icon image urls with the correct size\n *\n * @param type\n * @param size\n * @param extension\n * @returns\n */\nexport const getFileTypeIconUriByExtension = (type: string, size: IconSize, extension: 'png' | 'svg') => {\n  const found = Object.keys(fileTypeMap).find(key => fileTypeMap[key] === type);\n  if (found) {\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else if (type === 'jpg' || type === 'png') {\n    type = 'photo';\n    return `${baseUri}/${size.toString()}/${type}.${extension}`;\n  } else {\n    return null;\n  }\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  modifiedSubtitle: 'Modified',\n  sizeSubtitle: 'Size'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { styles } from './mgt-file-css';\nimport { MgtTemplatedComponent, Providers, ProviderState } from '@microsoft/mgt-element';\nimport {\n  getDriveItemById,\n  getDriveItemByPath,\n  getDriveItemByQuery,\n  getGroupDriveItemById,\n  getGroupDriveItemByPath,\n  getListDriveItemById,\n  getMyDriveItemById,\n  getMyDriveItemByPath,\n  getMyInsightsDriveItemById,\n  getSiteDriveItemById,\n  getSiteDriveItemByPath,\n  getUserDriveItemById,\n  getUserDriveItemByPath,\n  getUserInsightsDriveItemById\n} from '../../graph/graph.files';\nimport { formatBytes, getRelativeDisplayDate } from '../../utils/Utils';\nimport { OfficeGraphInsightString, ViewType } from '../../graph/types';\nimport { getFileTypeIconUriByExtension } from '../../styles/fluent-icons';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtFileComponent = () => registerComponent('file', MgtFile);\n\n/**\n * The File component is used to represent an individual file/folder from OneDrive or SharePoint by displaying information such as the file/folder name, an icon indicating the file type, and other properties such as the author, last modified date, or other details selected by the developer.\n *\n * @export\n * @class MgtFile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --file-type-icon-height - {Length} file type icon height. Default value is 28px.\n * @cssprop --file-border - {String} file item border style. Default value is \"1px solid transparent\".\n * @cssprop --file-border-radius - {String} the border radius of the file component. Default value is 4px.\n * @cssprop --file-box-shadow - {String} the box-shadow of the component. Default value is none.\n * @cssprop --file-background-color - {Color} the background-color of the component.\n * @cssprop --file-background-color-focus - {Color} the background-color of the component on focus.\n * @cssprop --file-background-color-hover - {Color} the background-color of the component on hover.\n * @cssprop --file-padding - {String} the padding around the file component. Default value is 0px.\n * @cssprop --file-padding-inline-start - {Length} the padding between file icon and file details. Default value is 14px.\n * @cssprop --file-margin - {String} the margin around the file component. Default value is 0px.\n * @cssprop --file-line1-font-size - {Length} the first line text font size. Default value is 12px.\n * @cssprop --file-line1-font-weight - {Length} the first line text font weight. Default value is 400.\n * @cssprop --file-line1-color - {Color} the first line text color.\n * @cssprop --file-line1-text-transform - {String} the first line text text transform. Default value is initial.\n * @cssprop --file-line2-font-size - {Length} the second line text font size. Default value is 12px.\n * @cssprop --file-line2-font-weight - {Length} the second line text font weight. Default value is 400.\n * @cssprop --file-line2-color - {Color} the second line text color.\n * @cssprop --file-line2-text-transform - {String} the second line text text transform. Default value is initial.\n * @cssprop --file-line3-font-size - {Length} the third line text font size. Default value is 12px.\n * @cssprop --file-line3-font-weight - {Length} the third line text font weight. Default value is 400.\n * @cssprop --file-line3-color - {Color} the third line text color.\n * @cssprop --file-line3-text-transform - {String} the third line text text transform. Default value is 400.\n */\nexport class MgtFile extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-query'\n  })\n  public get fileQuery(): string {\n    return this._fileQuery;\n  }\n  public set fileQuery(value: string) {\n    if (value === this._fileQuery) {\n      return;\n    }\n\n    this._fileQuery = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public get siteId(): string {\n    return this._siteId;\n  }\n  public set siteId(value: string) {\n    if (value === this._siteId) {\n      return;\n    }\n\n    this._siteId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public get driveId(): string {\n    return this._driveId;\n  }\n  public set driveId(value: string) {\n    if (value === this._driveId) {\n      return;\n    }\n\n    this._driveId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value: string) {\n    if (value === this._groupId) {\n      return;\n    }\n\n    this._groupId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide list id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'list-id'\n  })\n  public get listId(): string {\n    return this._listId;\n  }\n  public set listId(value: string) {\n    if (value === this._listId) {\n      return;\n    }\n\n    this._listId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public get itemId(): string {\n    return this._itemId;\n  }\n  public set itemId(value: string) {\n    if (value === this._itemId) {\n      return;\n    }\n\n    this._itemId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public get itemPath(): string {\n    return this._itemPath;\n  }\n  public set itemPath(value: string) {\n    if (value === this._itemPath) {\n      return;\n    }\n\n    this._itemPath = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public get insightType(): OfficeGraphInsightString {\n    return this._insightType;\n  }\n  public set insightType(value: OfficeGraphInsightString) {\n    if (value === this._insightType) {\n      return;\n    }\n\n    this._insightType = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide insight id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'insight-id'\n  })\n  public get insightId(): string {\n    return this._insightId;\n  }\n  public set insightId(value: string) {\n    if (value === this._insightId) {\n      return;\n    }\n\n    this._insightId = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide DriveItem object\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({\n    type: Object\n  })\n  public get fileDetails(): DriveItem {\n    return this._fileDetails;\n  }\n  public set fileDetails(value: DriveItem) {\n    if (value === this._fileDetails) {\n      return;\n    }\n\n    this._fileDetails = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * allows developer to provide file type icon url\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'file-icon'\n  })\n  public get fileIcon(): string {\n    return this._fileIcon;\n  }\n  public set fileIcon(value: string) {\n    if (value === this._fileIcon) {\n      return;\n    }\n\n    this._fileIcon = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * object containing Graph details on item\n   *\n   * @type {MicrosoftGraph.DriveItem}\n   * @memberof MgtFile\n   */\n  @property({ type: Object })\n  public driveItem: DriveItem;\n\n  /**\n   * Sets the property of the file to use for the first line of text.\n   * Default is file name\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line1-property' }) public line1Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is last modified date time\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line2-property' }) public line2Property: string;\n\n  /**\n   * Sets the property of the file to use for the second line of text.\n   * Default is file size\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({ attribute: 'line3-property' }) public line3Property: string;\n\n  /**\n   * Sets what data to be rendered (file icon only, oneLine, twoLines threeLines).\n   * Default is 'threeLines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'view',\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.threelines;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.threelines;\n      } else {\n        return ViewType[value] as ViewType;\n      }\n    }\n  })\n  public view: ViewType;\n\n  /**\n   * Get the scopes required for file\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFile\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.read', 'files.read.all', 'sites.read.all'])];\n  }\n\n  private _fileQuery: string;\n  private _siteId: string;\n  private _itemId: string;\n  private _driveId: string;\n  private _itemPath: string;\n  private _listId: string;\n  private _groupId: string;\n  private _userId: string;\n  private _insightType: OfficeGraphInsightString;\n  private _insightId: string;\n  private _fileDetails: DriveItem;\n  private _fileIcon: string;\n\n  constructor() {\n    super();\n    this.line1Property = 'name';\n    this.line2Property = 'lastModifiedDateTime';\n    this.line3Property = 'size';\n    this.view = ViewType.threelines;\n  }\n\n  public render() {\n    if (!this.driveItem && this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    if (!this.driveItem) {\n      return this.renderNoData();\n    }\n\n    const file = this.driveItem;\n    let fileTemplate: TemplateResult;\n\n    fileTemplate = this.renderTemplate('default', { file });\n    if (!fileTemplate) {\n      const fileDetailsTemplate: TemplateResult = this.renderDetails(file);\n      const fileTypeIconTemplate: TemplateResult = this.renderFileTypeIcon();\n\n      fileTemplate = html`\n        <div class=\"item\">\n          ${fileTypeIconTemplate} ${fileDetailsTemplate}\n        </div>`;\n    }\n\n    return fileTemplate;\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderLoading(): TemplateResult {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFile\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render the file type icon\n   *\n   * @protected\n   * @param {string} [iconSrc]\n   * @memberof MgtFile\n   */\n  protected renderFileTypeIcon(): TemplateResult {\n    if (!this.fileIcon && !this.driveItem.name) {\n      return html``;\n    }\n\n    let fileIconSrc;\n\n    if (this.fileIcon) {\n      fileIconSrc = this.fileIcon;\n    } else {\n      // get file type extension from file name\n      const re = /(?:\\.([^.]+))?$/;\n      const fileType =\n        this.driveItem.package === undefined && this.driveItem.folder === undefined\n          ? re.exec(this.driveItem.name)[1]\n            ? re.exec(this.driveItem.name)[1].toLowerCase()\n            : this.driveItem.size\n            ? 'null'\n            : 'folder'\n          : this.driveItem.package !== undefined\n          ? this.driveItem.package.type === 'oneNote'\n            ? 'onetoc'\n            : 'folder'\n          : 'folder';\n      fileIconSrc = getFileTypeIconUriByExtension(fileType, 48, 'svg');\n    }\n\n    return html`\n      <div class=\"item__file-type-icon\">\n        ${\n          fileIconSrc\n            ? html`\n              <img src=${fileIconSrc} alt=\"File icon\" />\n            `\n            : html`\n              ${getSvg(SvgIcon.File)}\n            `\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render the file details\n   *\n   * @protected\n   * @param {MicrosoftGraph.DriveItem} [driveItem]\n   * @memberof MgtFile\n   */\n  protected renderDetails(driveItem: DriveItem): TemplateResult {\n    if (!driveItem || this.view === ViewType.image) {\n      return html``;\n    }\n\n    const details: TemplateResult[] = [];\n\n    if (this.view > ViewType.image) {\n      const text = this.getTextFromProperty(driveItem, this.line1Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line1\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.oneline) {\n      const text = this.getTextFromProperty(driveItem, this.line2Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line2\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    if (this.view > ViewType.twolines) {\n      const text = this.getTextFromProperty(driveItem, this.line3Property);\n      if (text) {\n        details.push(html`\n          <div class=\"line3\" aria-label=\"${text}\">${text}</div>\n        `);\n      }\n    }\n\n    return html`\n      <div class=\"item__details\">\n        ${details}\n      </div>\n    `;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFile\n   */\n  protected async loadState() {\n    if (this.fileDetails) {\n      this.driveItem = this.fileDetails;\n      return;\n    }\n\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this.driveItem = null;\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    let driveItem: DriveItem;\n\n    // evaluate to true when only item-id or item-path is provided\n    const getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.listId && !this.userId;\n\n    if (\n      // return null when a combination of provided properties are required\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.listId && !this.siteId && !this.itemId) ||\n      (this.insightType && !this.insightId) ||\n      (this.userId && !this.itemId && !this.itemPath && !this.insightType && !this.insightId)\n    ) {\n      driveItem = null;\n    } else if (this.fileQuery) {\n      driveItem = await getDriveItemByQuery(graph, this.fileQuery);\n    } else if (this.itemId && getFromMyDrive) {\n      driveItem = await getMyDriveItemById(graph, this.itemId);\n    } else if (this.itemPath && getFromMyDrive) {\n      driveItem = await getMyDriveItemByPath(graph, this.itemPath);\n    } else if (this.userId) {\n      if (this.itemId) {\n        driveItem = await getUserDriveItemById(graph, this.userId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getUserDriveItemByPath(graph, this.userId, this.itemPath);\n      } else if (this.insightType && this.insightId) {\n        driveItem = await getUserInsightsDriveItemById(graph, this.userId, this.insightType, this.insightId);\n      }\n    } else if (this.driveId) {\n      if (this.itemId) {\n        driveItem = await getDriveItemById(graph, this.driveId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getDriveItemByPath(graph, this.driveId, this.itemPath);\n      }\n    } else if (this.siteId && !this.listId) {\n      if (this.itemId) {\n        driveItem = await getSiteDriveItemById(graph, this.siteId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getSiteDriveItemByPath(graph, this.siteId, this.itemPath);\n      }\n    } else if (this.listId) {\n      driveItem = await getListDriveItemById(graph, this.siteId, this.listId, this.itemId);\n    } else if (this.groupId) {\n      if (this.itemId) {\n        driveItem = await getGroupDriveItemById(graph, this.groupId, this.itemId);\n      } else if (this.itemPath) {\n        driveItem = await getGroupDriveItemByPath(graph, this.groupId, this.itemPath);\n      }\n    } else if (this.insightType && !this.userId) {\n      driveItem = await getMyInsightsDriveItemById(graph, this.insightType, this.insightId);\n    }\n\n    this.driveItem = driveItem;\n  }\n\n  private getTextFromProperty(driveItem: DriveItem, properties: string): string {\n    if (!properties || properties.length === 0) {\n      return null;\n    }\n\n    const propertyList = properties.trim().split(',');\n    let text: string;\n    let i = 0;\n\n    while (!text && i < propertyList.length) {\n      const current = propertyList[i].trim();\n      switch (current) {\n        case 'size': {\n          // convert size to kb, mb, gb\n          let size = '0';\n          if (driveItem.size) {\n            size = formatBytes(driveItem.size);\n          }\n          text = `${this.strings.sizeSubtitle}: ${size}`;\n          break;\n        }\n        case 'lastModifiedDateTime': {\n          // convert date time\n          let relativeDateString: string;\n          let lastModifiedString: string;\n          if (driveItem.lastModifiedDateTime) {\n            const lastModifiedDateTime = new Date(driveItem.lastModifiedDateTime);\n            relativeDateString = getRelativeDisplayDate(lastModifiedDateTime);\n            lastModifiedString = `${this.strings.modifiedSubtitle} ${relativeDateString}`;\n          } else {\n            lastModifiedString = '';\n          }\n          text = lastModifiedString;\n          break;\n        }\n        default:\n          text = driveItem[current] as string;\n      }\n      i++;\n    }\n\n    return text;\n  }\n}\n"],"names":["styles","css","_templateObject","_taggedTemplateLiteral","fileTypeMap","PowerPoint","Word","Excel","Pdf","OneNote","OneNotePage","InfoPath","Visio","Publisher","Project","Access","Mail","Csv","Archive","Xps","Audio","Video","Image","Web","Text","Xml","Story","ExternalContent","Folder","Spsite","Other","baseUri","strings","modifiedSubtitle","sizeSubtitle","registerMgtFileComponent","registerComponent","MgtFile","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","_classCallCheck","call","line1Property","line2Property","line3Property","view","ViewType","threelines","_createClass","key","get","this","_fileQuery","set","value","requestStateUpdate","_siteId","_driveId","_groupId","_listId","_userId","_itemId","_itemPath","_insightType","_insightId","_fileDetails","_fileIcon","driveItem","isLoadingState","renderLoading","renderNoData","fileTemplate","file","renderTemplate","fileDetailsTemplate","renderDetails","fileTypeIconTemplate","renderFileTypeIcon","html","_templateObject2","_templateObject3","fileIcon","name","_templateObject4","fileIconSrc","type","size","extension","re","fileType","undefined","package","folder","exec","toLowerCase","Object","keys","find","concat","toString","_templateObject5","_templateObject6","_templateObject7","getSvg","SvgIcon","File","image","_templateObject8","details","text","getTextFromProperty","push","_templateObject9","oneline","_templateObject10","twolines","_templateObject11","_templateObject12","fileDetails","_context","next","abrupt","provider","Providers","globalProvider","state","ProviderState","Loading","SignedOut","graph","forComponent","getFromMyDrive","driveId","siteId","groupId","listId","userId","itemId","itemPath","insightType","insightId","fileQuery","getDriveItemByQuery","sent","getMyDriveItemById","getMyDriveItemByPath","getUserDriveItemById","getUserDriveItemByPath","getUserInsightsDriveItemById","getDriveItemById","getDriveItemByPath","getSiteDriveItemById","getSiteDriveItemByPath","getListDriveItemById","getGroupDriveItemById","getGroupDriveItemByPath","getMyInsightsDriveItemById","stop","_callee","properties","length","propertyList","trim","split","i","current","formatBytes","relativeDateString","lastModifiedString","lastModifiedDateTime","Date","getRelativeDisplayDate","_toConsumableArray","Set","MgtTemplatedComponent","__decorate","property","attribute","converter"],"sourceRoot":""}