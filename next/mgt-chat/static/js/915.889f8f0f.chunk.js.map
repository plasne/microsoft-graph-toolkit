{"version":3,"file":"static/js/915.889f8f0f.chunk.js","mappings":"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","sources":["../../../packages/mgt-components/dist/es6/components/mgt-file-list/src/components/mgt-file-list/mgt-file-list-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/src/components/mgt-file-list/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/mgt-file-upload/src/components/mgt-file-list/mgt-file-upload/mgt-file-upload-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/mgt-file-upload/src/components/mgt-file-list/mgt-file-upload/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/mgt-file-upload/src/components/mgt-file-list/mgt-file-upload/mgt-file-upload.ts","../../../packages/mgt-components/dist/es6/components/mgt-file-list/src/components/mgt-file-list/mgt-file-list.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner-css.ts","../../../packages/mgt-components/dist/es6/components/sub-components/mgt-spinner/src/components/sub-components/mgt-spinner/mgt-spinner.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{font-size:var(--default-font-size)}:host .title{font-size:14px;font-weight:600;padding:20px 0 12px;line-height:19px}:host .file-list-wrapper{background-color:var(--file-list-background-color,var(--neutral-layer-floating));border:var(--file-list-border,none);position:relative;display:flex;flex-direction:column;border-radius:8px}:host .file-list-wrapper .title{font-size:14px;font-weight:600;margin:0 20px -15px}:host .file-list-wrapper .file-list{display:flex;padding:var(--file-list-padding,0);margin:var(--file-list-margin,0);flex-direction:column;list-style:none}:host .file-list-wrapper .file-list .file-item{cursor:pointer;border-radius:var(--file-border-radius)}:host .file-list-wrapper .file-list .file-item:focus,:host .file-list-wrapper .file-list .file-item:focus-within{--file-background-color:var(--file-background-color-focus, var(--neutral-layer-2))}:host .file-list-wrapper .file-list .file-item.selected{--file-background-color:var(--file-background-color-active, var(--neutral-layer-3))}:host .file-list-wrapper .file-list .file-item .mgt-file-item{--file-padding:10px 20px 10px 20px;--file-padding-inline-start:24px;--file-border-radius:2px;--file-background-color:var(--file-item-background-color, var(--neutral-layer-1))}:host .file-list-wrapper .progress-ring{margin:4px auto;width:var(--progress-ring-size,24px);height:var(--progress-ring-size,24px)}:host .file-list-wrapper .show-more{text-align:center;font-size:var(--show-more-button-font-size,12px);padding:var(--show-more-button-padding,0);border-radius:0 0 var(--show-more-button-border-bottom-right-radius,var(--file-list-border-radius,8px)) var(--show-more-button-border-bottom-left-radius,var(--file-list-border-radius,8px));background-color:var(--show-more-button-background-color,var(--neutral-stroke-divider-rest))}:host .file-list-wrapper .show-more:hover{background-color:var(--show-more-button-background-color-hover,var(--neutral-fill-input-alt-active))}:host .file-list-wrapper .show-more-text{font-size:var(--show-more-button-font-size,12px)}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  showMoreSubtitle: 'Show more items',\n  filesSectionTitle: 'Files',\n  sharedTextSubtitle: 'Shared'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host .file-upload-area-button{width:auto;display:flex;align-items:end;justify-content:end;margin-inline-end:36px;margin-top:30px}:host fluent-button .upload-icon path{fill:var(--file-upload-button-text-color,var(--foreground-on-accent-rest))}:host fluent-button.file-upload-button::part(control){border:var(--file-upload-button-border,none);background:var(--file-upload-button-background-color,var(--accent-fill-rest))}:host fluent-button.file-upload-button::part(control):hover{background:var(--file-upload-button-background-color-hover,var(--accent-fill-hover))}:host fluent-button.file-upload-button .upload-text{color:var(--file-upload-button-text-color,var(--foreground-on-accent-rest));font-weight:400;line-height:20px}:host input{display:none}:host fluent-progress.file-upload-bar{width:180px;margin-top:10px}:host fluent-dialog::part(overlay){opacity:.5}:host fluent-dialog::part(control){--dialog-width:$file-upload-dialog-width;--dialog-height:$file-upload-dialog-height;padding:var(--file-upload-dialog-padding,24px);border:var(--file-upload-dialog-border,1px solid var(--neutral-fill-rest))}:host fluent-dialog .file-upload-dialog-ok{background:var(--file-upload-dialog-keep-both-button-background-color,var(--accent-fill-rest));border:var(--file-upload-dialog-keep-both-button-border,none);color:var(--file-upload-dialog-keep-both-button-text-color,var(--foreground-on-accent-rest))}:host fluent-dialog .file-upload-dialog-ok:hover{background:var(--file-upload-dialog-keep-both-button-background-color-hover,var(--accent-fill-hover))}:host fluent-dialog .file-upload-dialog-cancel{background:var(--file-upload-dialog-replace-button-background-color,var(--accent-fill-rest));border:var(--file-upload-dialog-replace-button-border,1px solid var(--neutral-foreground-rest));color:var(--file-upload-dialog-replace-button-text-color,var(--neutral-foreground-rest))}:host fluent-dialog .file-upload-dialog-cancel:hover{background:var(--file-upload-dialog-replace-button-background-color-hover,var(--accent-fill-hover))}:host fluent-checkbox{margin-top:12px}:host fluent-checkbox .file-upload-dialog-check{color:var(--file-upload-dialog-text-color,--foreground-on-accent-rest)}:host .file-upload-table{display:flex}:host .file-upload-table.upload{display:flex}:host .file-upload-table .file-upload-cell{padding:1px 0 1px 1px;display:table-cell;vertical-align:middle;position:relative}:host .file-upload-table .file-upload-cell.percent-indicator{padding-inline-start:10px}:host .file-upload-table .file-upload-cell .description{opacity:.5;position:relative}:host .file-upload-table .file-upload-cell .file-upload-filename{max-width:250px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host .file-upload-table .file-upload-cell .file-upload-status{position:absolute;left:28px}:host .file-upload-table .file-upload-cell .file-upload-cancel{cursor:pointer;margin-inline-start:20px}:host .file-upload-table .file-upload-cell .file-upload-name{width:auto}:host .file-upload-table .file-upload-cell .cancel-icon{fill:var(--file-upload-dialog-text-color,var(--neutral-foreground-rest))}:host .mgt-file-item{--file-background-color:transparent;--file-padding:0 12px;--file-padding-inline-start:24px}:host .file-upload-template{clear:both}:host .file-upload-template .file-upload-folder-tab{padding-inline-start:20px}:host .file-upload-dialog{display:none}:host .file-upload-dialog .file-upload-dialog-content{background-color:var(--file-upload-dialog-background-color,var(--accent-fill-rest));color:var(--file-upload-dialog-text-color,var(--neutral-foreground-rest))}:host .file-upload-dialog .file-upload-dialog-content-text{margin-bottom:36px}:host .file-upload-dialog .file-upload-dialog-title{margin-top:0}:host .file-upload-dialog .file-upload-dialog-editor{display:flex;align-items:end;justify-content:end;gap:5px}:host .file-upload-dialog .file-upload-dialog-close{float:right;cursor:pointer}:host .file-upload-dialog .file-upload-dialog-close svg{fill:var(--file-upload-dialog-text-color,var(--neutral-foreground-rest));padding-right:5px}:host .file-upload-dialog.visible{display:block}:host fluent-checkbox.file-upload-dialog-check.hide{display:none}:host .file-upload-dialog-success{cursor:pointer;opacity:.5}:host #file-upload-border{display:none}:host #file-upload-border.visible{border:var(--file-upload-border-drag,1px dashed #0078d4);background-color:var(--file-upload-background-color-drag,rgba(0,120,212,.1));position:absolute;inset:0;z-index:1;display:inline-block}[dir=rtl] :host .file-upload-status{left:0;right:28px}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  failUploadFile: 'File upload fail.',\n  cancelUploadFile: 'File cancel.',\n  buttonUploadFile: 'Upload Files',\n  maximumFilesTitle: 'Maximum files',\n  maximumFiles:\n    'Sorry, the maximum number of files you can upload at once is {MaxNumber}. Do you want to upload the first {MaxNumber} files or reselect?',\n  maximumFileSizeTitle: 'Maximum files size',\n  maximumFileSize: 'Sorry, the maximum file size to upload is {FileSize}. The file \"{FileName}\" has ',\n  fileTypeTitle: 'File type',\n  fileType: 'Sorry, the format of following file \"{FileName}\" cannot be uploaded.',\n  checkAgain: \"Don't show again\",\n  checkApplyAll: 'Apply to all',\n  buttonOk: 'OK',\n  buttonCancel: 'Cancel',\n  buttonUpload: 'Upload',\n  buttonKeep: 'Keep both',\n  buttonReplace: 'Replace',\n  buttonReselect: 'Reselect',\n  fileReplaceTitle: 'Replace file',\n  fileReplace: 'Do you want to replace the file \"{FileName}\" or keep both files?',\n  uploadButtonLabel: 'File upload button'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { fluentButton, fluentCheckbox, fluentDialog, fluentProgress } from '@fluentui/web-components';\nimport { IGraph, MgtBaseComponent, mgtHtml } from '@microsoft/mgt-element';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  clearFilesCache,\n  getGraphfile,\n  getUploadSession,\n  sendFileContent,\n  sendFileChunk,\n  deleteSessionFile,\n  isUploadSession\n} from '../../../graph/graph.files';\nimport { ViewType } from '../../../graph/types';\nimport { registerFluentComponents } from '../../../utils/FluentComponents';\nimport { getSvg, SvgIcon } from '../../../utils/SvgHelper';\nimport { formatBytes } from '../../../utils/Utils';\nimport { styles } from './mgt-file-upload-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtFileComponent } from '../../mgt-file/mgt-file';\n\n/**\n * Simple union type for file system entry and directory entry types\n */\ntype FileEntry = (FileSystemDirectoryEntry | FileSystemFileEntry | FileSystemEntry) & {\n  /**\n   * This is a hack to get around the fact that the FileSystemEntry filePath is not writable\n   */\n  fullPath: string;\n};\n\n/**\n * Type guard for FileSystemDirectoryEntry\n *\n * @param {FileEntry} entry\n * @return {*}  {entry is FileSystemDirectoryEntry}\n */\nconst isFileSystemDirectoryEntry = (entry: FileEntry): entry is FileSystemDirectoryEntry => {\n  return entry.isDirectory;\n};\n\n/**\n * Type guard for FileSystemDirectoryEntry\n *\n * @param {FileEntry} entry\n * @return {*}  {entry is FileSystemDirectoryEntry}\n */\nconst isFileSystemFileEntry = (entry: FileEntry): entry is FileSystemFileEntry => {\n  return entry.isFile;\n};\n\ninterface FutureDataTransferItem extends DataTransferItem {\n  /**\n   * Possible future implementation of webkitGetAsEntry\n   */\n  getAsEntry: typeof DataTransferItem.prototype.webkitGetAsEntry;\n}\n\nconst isFutureDataTransferItem = (item: DataTransferItem): item is FutureDataTransferItem =>\n  'getAsEntry' in item && typeof item.getAsEntry === 'function';\n\nconst isDataTransferItem = (item: DataTransferItem | File): item is DataTransferItem =>\n  ('getAsFile' in item && typeof item.getAsFile === 'function') ||\n  ('webkitGetAsEntry' in item && typeof item.webkitGetAsEntry === 'function');\n\n/**\n * Upload conflict behavior status\n */\nexport const enum MgtFileUploadConflictBehavior {\n  rename,\n  replace\n}\n\n/**\n * MgtFileUpload upload item lifecycle object.\n *\n * @export\n * @interface MgtFileUploadItem\n */\nexport interface MgtFileUploadItem {\n  /**\n   * Session url to keep upload progress open untill all chuncks are sent\n   */\n  uploadUrl?: string;\n\n  /**\n   * Upload file progress value\n   */\n  percent?: number;\n\n  /**\n   * Validate if File has any conflict Behavior\n   */\n  conflictBehavior?: MgtFileUploadConflictBehavior;\n\n  /**\n   * Output \"Success\" or \"Fail\" icon base on upload response\n   */\n  iconStatus?: TemplateResult;\n\n  /**\n   * File object to be upload.\n   */\n  file?: File;\n\n  /**\n   * Full file Path to be upload.\n   */\n  fullPath?: string;\n\n  /**\n   * Mgt-File View state change on upload response\n   */\n  view?: ViewType;\n\n  /**\n   * Manipulate fileDetails on upload lifecycle\n   */\n  driveItem?: DriveItem;\n\n  /**\n   * Mgt-File line2Property output field message\n   */\n  fieldUploadResponse?: string;\n\n  /**\n   * Validates state of upload progress\n   */\n  completed?: boolean;\n\n  /**\n   * Load large Files into ArrayBuffer to send by chuncks\n   */\n  mimeStreamString?: ArrayBuffer;\n\n  /**\n   * Max chunck size to upload file by slice\n   */\n  maxSize?: number;\n\n  /**\n   * Minimal chunck size to upload file by slice\n   */\n  minSize?: number;\n}\n\n/**\n * MgtFileUpload configuration object with MgtFileList Properties.\n *\n * @export\n * @interface MgtFileUploadConfig\n */\nexport interface MgtFileUploadConfig {\n  /**\n   * MS Graph APIs connector\n   *\n   * @type {IGraph}\n   */\n  graph: IGraph;\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   */\n  siteId?: string;\n\n  /**\n   * DriveId to upload Files\n   *\n   * @type {string}\n   */\n  driveId?: string;\n\n  /**\n   * GroupId to upload Files\n   *\n   * @type {string}\n   */\n  groupId?: string;\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   */\n  itemId?: string;\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   */\n  itemPath?: string;\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   */\n  userId?: string;\n\n  /**\n   * A number value indication for file size upload (KB)\n   *\n   * @type {Number}\n   */\n  maxFileSize?: number;\n\n  /**\n   * A number value to indicate the number of files to upload.\n   *\n   * @type {Number}\n   */\n  maxUploadFile?: number;\n\n  /**\n   * A Array of file extensions to be excluded from file upload.\n   *\n   * @type {string[]}\n   */\n  excludedFileExtensions?: string[];\n}\n\ninterface FileWithPath extends File {\n  fullPath: string;\n}\n\nexport const registerMgtFileUploadComponent = () => {\n  registerFluentComponents(fluentProgress, fluentButton, fluentCheckbox, fluentDialog);\n\n  registerMgtFileComponent();\n  registerComponent('file-upload', MgtFileUpload);\n};\n\n/**\n * A component to upload files to OneDrive or SharePoint Sites\n *\n * @export\n * @class MgtFileUpload\n * @extends {MgtBaseComponent}\n *\n * @cssprop --file-upload-background-color-drag - {Color} background color of the file list when you upload by drag and drop.\n * @cssprop --file-upload-button-background-color - {Color} background color of the file upload button.\n * @cssprop --file-upload-button-background-color-hover - {Color} background color of the file upload button on hover.\n * @cssprop --file-upload-button-text-color - {Color} text color of the file upload button.\n * @cssprop --file-upload-dialog-background-color - {Color} background color of the file upload dialog box (appears when uploaded files exist).\n * @cssprop --file-upload-dialog-text-color - {Color} text color of the file upload dialog box content.\n * @cssprop --file-upload-dialog-replace-button-background-color - {Color} background color of the replace button in the dialog box.\n * @cssprop --file-upload-dialog-replace-button-background-color-hover - {Color} background color of the replace button in the dialog box when you hover on it.\n * @cssprop --file-upload-dialog-replace-button-text-color - {Color} text color of the replace button in the dialog box.\n * @cssprop --file-upload-dialog-keep-both-button-background-color - {Color} background color of the keep-both button in the dialog box.\n * @cssprop --file-upload-dialog-keep-both-button-background-color-hover - {Color} background color of the keep-both button in the dialog box when you hover on it.\n * @cssprop --file-upload-dialog-keep-both-button-text-color - {Color} text color of the keep-both button in the dialog box.\n * @cssprop --file-upload-border-drag - {String} the border of the file list when you upload files via drag and drop. Default value is 1px dashed #0078d4.\n * @cssprop --file-upload-button-border - {String} the border of the file upload button. Default value is none.\n * @cssprop --file-upload-dialog-replace-button-border - {String} the border of the file upload replace button in the dialog box. Default value is\n * @cssprop --file-upload-dialog-keep-both-button-border - {String} the border of the file upload keep both button in the dialog box. Default value is none.\n * @cssprop --file-upload-dialog-border - {String} the border of the file upload dialog box. Default value is \"1px solid var(--neutral-fill-rest)\".\n * @cssprop --file-upload-dialog-width - {String} the width of the file upload dialog box. Default value is auto.\n * @cssprop --file-upload-dialog-height - {String} the height of the file upload dialog box. Default value is auto.\n * @cssprop --file-upload-dialog-padding - {String} the padding of the file upload dialog box. Default value is 24px;\n */\nexport class MgtFileUpload extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Allows developer to provide an array of MgtFileUploadItem to upload\n   *\n   * @type {MgtFileUploadItem[]}\n   * @memberof MgtFileUpload\n   */\n  @property({ type: Object })\n  public filesToUpload: MgtFileUploadItem[];\n\n  /**\n   * List of mgt-file-list properties used to upload files.\n   *\n   * @type {MgtFileUploadConfig}\n   * @memberof MgtFileUpload\n   */\n  @property({ type: Object })\n  public fileUploadList: MgtFileUploadConfig;\n\n  /**\n   * Get the scopes required for file upload\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFileUpload\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set(['files.readwrite', 'files.readwrite.all', 'sites.readwrite.all'])];\n  }\n\n  // variable manage drag style when mouse over\n  private _dragCounter = 0;\n  // variable avoids removal of files after drag and drop, https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/dropEffect\n  private get _dropEffect(): DataTransfer['dropEffect'] {\n    return 'copy';\n  }\n  // variable defined max chuck size \"4MB\" for large files .\n  private readonly _maxChunkSize: number = 4 * 1024 * 1024;\n  private _dialogTitle = '';\n  private _dialogContent = '';\n  private _dialogPrimaryButton = '';\n  private _dialogSecondaryButton = '';\n  private _dialogCheckBox = '';\n  private _applyAll = false;\n  private _applyAllConflictBehavior: number = null;\n  private _maximumFileSize = false;\n  private _excludedFileType = false;\n\n  constructor() {\n    super();\n    this.filesToUpload = [];\n  }\n\n  /**\n   * Render the file upload component\n   *\n   * @returns\n   */\n  public render(): TemplateResult {\n    if (this.parentElement !== null) {\n      const root = this.parentElement;\n      root.addEventListener('dragenter', this.handleonDragEnter);\n      root.addEventListener('dragleave', this.handleonDragLeave);\n      root.addEventListener('dragover', this.handleonDragOver);\n      root.addEventListener('drop', this.handleonDrop);\n    }\n\n    return html`\n        <div id=\"file-upload-dialog\" class=\"file-upload-dialog\">\n          <!-- Modal content -->\n          <fluent-dialog modal=\"true\" class=\"file-upload-dialog-content\">\n            <span\n              class=\"file-upload-dialog-close\"\n              id=\"file-upload-dialog-close\">\n                ${getSvg(SvgIcon.Cancel)}\n            </span>\n            <div class=\"file-upload-dialog-content-text\">\n              <h2 class=\"file-upload-dialog-title\">${this._dialogTitle}</h2>\n              <div>${this._dialogContent}</div>\n                <fluent-checkbox\n                  id=\"file-upload-dialog-check\"\n                  class=\"file-upload-dialog-check\">\n                    ${this._dialogCheckBox}\n                </fluent-checkbox>\n            </div>\n            <div class=\"file-upload-dialog-editor\">\n              <fluent-button\n                appearance=\"accent\"\n                class=\"file-upload-dialog-ok\">\n                ${this._dialogPrimaryButton}\n              </fluent-button>\n              <fluent-button\n                appearance=\"outline\"\n                class=\"file-upload-dialog-cancel\">\n                ${this._dialogSecondaryButton}\n              </fluent-button>\n            </div>\n          </fluent-dialog>\n        </div>\n        <div id=\"file-upload-border\"></div>\n        <div class=\"file-upload-area-button\">\n          <input\n            id=\"file-upload-input\"\n            title=\"${this.strings.uploadButtonLabel}\"\n            tabindex=\"-1\"\n            aria-label=\"file upload input\"\n            type=\"file\"\n            multiple\n            @change=\"${this.onFileUploadChange}\"\n          />\n          <fluent-button\n            appearance=\"accent\"\n            class=\"file-upload-button\"\n            @click=${this.onFileUploadClick}\n            label=${this.strings.uploadButtonLabel}>\n              <span slot=\"start\">${getSvg(SvgIcon.Upload)}</span>\n              <span class=\"upload-text\">${this.strings.buttonUploadFile}</span>\n          </fluent-button>\n        </div>\n        <div class=\"file-upload-template\">\n          ${this.renderFolderTemplate(this.filesToUpload)}\n        </div>\n       `;\n  }\n\n  /**\n   * Render Folder structure of files to upload\n   *\n   * @param fileItems\n   * @returns\n   */\n  protected renderFolderTemplate(fileItems: MgtFileUploadItem[]) {\n    const folderStructure: string[] = [];\n    if (fileItems.length > 0) {\n      const templateFileItems = fileItems.map(fileItem => {\n        if (folderStructure.indexOf(fileItem.fullPath.substring(0, fileItem.fullPath.lastIndexOf('/'))) === -1) {\n          if (!fileItem.fullPath.endsWith('/')) {\n            folderStructure.push(fileItem.fullPath.substring(0, fileItem.fullPath.lastIndexOf('/')));\n            return mgtHtml`\n            <div class='file-upload-table'>\n              <div class='file-upload-cell'>\n                <mgt-file\n                  .fileDetails=${{\n                    name: fileItem.fullPath.substring(1, fileItem.fullPath.lastIndexOf('/')),\n                    folder: 'Folder'\n                  }}\n                  .view=${ViewType.oneline}\n                  class=\"mgt-file-item\">\n                </mgt-file>\n              </div>\n            </div>\n            ${this.renderFileTemplate(fileItem, 'file-upload-folder-tab')}`;\n          } else {\n            return html`${this.renderFileTemplate(fileItem, '')}`;\n          }\n        } else {\n          return html`${this.renderFileTemplate(fileItem, 'file-upload-folder-tab')}`;\n        }\n      });\n      return html`${templateFileItems}`;\n    }\n    return html``;\n  }\n\n  /**\n   * Render file upload area\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected renderFileTemplate(fileItem: MgtFileUploadItem, folderTabStyle: string) {\n    const completed = classMap({\n      'file-upload-table': true,\n      upload: fileItem.completed\n    });\n    const folder =\n      folderTabStyle + (fileItem.fieldUploadResponse === 'lastModifiedDateTime' ? ' file-upload-dialog-success' : '');\n\n    const description = classMap({\n      description: fileItem.fieldUploadResponse === 'description'\n    });\n\n    const completedTemplate = !fileItem.completed ? this.renderFileUploadTemplate(fileItem) : html``;\n\n    return mgtHtml`\n        <div class=\"${completed}\">\n          <div class=\"${folder}\">\n            <div class='file-upload-cell'>\n              <div class=\"${description}\">\n                <div class=\"file-upload-status\">\n                  ${fileItem.iconStatus}\n                </div>\n                <mgt-file\n                  .fileDetails=${fileItem.driveItem}\n                  .view=${fileItem.view}\n                  .line2Property=${fileItem.fieldUploadResponse}\n                  part=\"upload\"\n                  class=\"mgt-file-item\">\n                </mgt-file>\n              </div>\n            </div>\n              ${completedTemplate}\n            </div>\n          </div>\n        </div>`;\n  }\n\n  /**\n   * Render file upload progress\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected renderFileUploadTemplate(fileItem: MgtFileUploadItem) {\n    const completed = classMap({\n      'file-upload-table': true,\n      upload: fileItem.completed\n    });\n    return html`\n    <div class='file-upload-cell'>\n      <div class='file-upload-table file-upload-name'>\n        <div class='file-upload-cell'>\n          <div\n            title=\"${fileItem.file.name}\"\n            class='file-upload-filename'>\n            ${fileItem.file.name}\n          </div>\n        </div>\n      </div>\n      <div class='file-upload-table'>\n        <div class='file-upload-cell'>\n          <div class=\"${completed}\">\n            <fluent-progress class=\"file-upload-bar\" value=\"${fileItem.percent}\"></fluent-progress>\n            <div class='file-upload-cell percent-indicator'>\n              <span>${fileItem.percent}%</span>\n              <span\n                class=\"file-upload-cancel\"\n                @click=${() => this.deleteFileUploadSession(fileItem)}>\n                ${getSvg(SvgIcon.Cancel)}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    `;\n  }\n\n  /**\n   * Handle the \"Upload Files\" button click event to open dialog and select files.\n   *\n   * @param event\n   * @returns\n   */\n  protected onFileUploadChange = (event: UIEvent) => {\n    const inputElement = event.target as HTMLInputElement;\n    if (!event || inputElement.files.length < 1) {\n      return;\n    } else {\n      void this.readUploadedFiles(inputElement.files, () => (inputElement.value = null));\n    }\n  };\n\n  /**\n   * Handle the click event on upload file button that open select files dialog to upload.\n   *\n   */\n  protected onFileUploadClick = () => {\n    const uploadInput: HTMLElement = this.renderRoot.querySelector('#file-upload-input');\n    uploadInput.click();\n  };\n\n  /**\n   * Function delete existing file upload sessions\n   *\n   * @param fileItem\n   */\n  protected async deleteFileUploadSession(fileItem: MgtFileUploadItem) {\n    try {\n      if (fileItem.uploadUrl !== undefined) {\n        // Responses that confirm cancelation of session.\n        // 404 means (The upload session was not found/The resource could not be found/)\n        // 409 means The resource has changed since the caller last read it; usually an eTag mismatch\n        await deleteSessionFile(this.fileUploadList.graph, fileItem.uploadUrl);\n        fileItem.uploadUrl = undefined;\n        fileItem.completed = true;\n        this.setUploadFail(fileItem, strings.cancelUploadFile);\n      } else {\n        fileItem.uploadUrl = undefined;\n        fileItem.completed = true;\n        this.setUploadFail(fileItem, strings.cancelUploadFile);\n      }\n    } catch {\n      fileItem.uploadUrl = undefined;\n      fileItem.completed = true;\n      this.setUploadFail(fileItem, strings.cancelUploadFile);\n    }\n  }\n\n  /**\n   * Stop listeners from onDragOver event.\n   *\n   * @param event\n   */\n  protected handleonDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      event.dataTransfer.dropEffect = event.dataTransfer.dropEffect = this._dropEffect;\n    }\n  };\n\n  /**\n   * Stop listeners from onDragEnter event, enable drag and drop view.\n   *\n   * @param event\n   */\n  protected handleonDragEnter = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this._dragCounter++;\n    if (event.dataTransfer.items && event.dataTransfer.items.length > 0) {\n      event.dataTransfer.dropEffect = this._dropEffect;\n      const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n      dragFileBorder.classList.add('visible');\n    }\n  };\n\n  /**\n   * Stop listeners from ondragenter event, disable drag and drop view.\n   *\n   * @param event\n   */\n  protected handleonDragLeave = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this._dragCounter--;\n    if (this._dragCounter === 0) {\n      const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n      dragFileBorder.classList.remove('visible');\n    }\n  };\n\n  /**\n   * Stop listeners from onDrop event and process files.\n   *\n   * @param event\n   */\n  protected handleonDrop = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const done = (): void => {\n      event.dataTransfer.clearData();\n    };\n    const dragFileBorder: HTMLElement = this.renderRoot.querySelector('#file-upload-border');\n    dragFileBorder.classList.remove('visible');\n    if (event.dataTransfer?.items) {\n      void this.readUploadedFiles(event.dataTransfer.items, done);\n    }\n    this._dragCounter = 0;\n  };\n\n  private async readUploadedFiles(uploaded: DataTransferItemList | FileList, onCompleteCallback: () => void) {\n    const files = await this.getFilesFromUploadArea(uploaded);\n    await this.getSelectedFiles(files);\n    onCompleteCallback();\n  }\n\n  /**\n   * Get Files and initalize MgtFileUploadItem object life cycle to be uploaded\n   *\n   * @param inputFiles\n   */\n  protected async getSelectedFiles(files: File[]) {\n    let fileItems: MgtFileUploadItem[] = [];\n    const fileItemsCompleted: MgtFileUploadItem[] = [];\n    this._applyAll = false;\n    this._applyAllConflictBehavior = null;\n    this._maximumFileSize = false;\n    this._excludedFileType = false;\n\n    // Collect ongoing upload files\n    this.filesToUpload.forEach(fileItem => {\n      if (!fileItem.completed) {\n        fileItems.push(fileItem);\n      } else {\n        fileItemsCompleted.push(fileItem);\n      }\n    });\n\n    for (const file of files as FileWithPath[]) {\n      const fullPath = file.fullPath === '' ? '/' + file.name : file.fullPath;\n      if (fileItems.filter(item => item.fullPath === fullPath).length === 0) {\n        // Initialize variable for File validation\n        let acceptFile = true;\n\n        // Exclude file based on max file size allowed\n        if (this.fileUploadList.maxFileSize !== undefined && acceptFile) {\n          if (file.size > this.fileUploadList.maxFileSize * 1024) {\n            acceptFile = false;\n            if (this._maximumFileSize === false) {\n              const maximumFileSize: (number | true)[] = await this.getFileUploadStatus(\n                file,\n                fullPath,\n                'MaxFileSize',\n                this.fileUploadList\n              );\n              if (maximumFileSize !== null) {\n                if (maximumFileSize[0] === 1) {\n                  this._maximumFileSize = true;\n                }\n              }\n            }\n          }\n        }\n\n        // Exclude file based on File extensions\n        if (this.fileUploadList.excludedFileExtensions !== undefined) {\n          if (this.fileUploadList.excludedFileExtensions.length > 0 && acceptFile) {\n            if (\n              this.fileUploadList.excludedFileExtensions.filter(fileExtension => {\n                return file.name.toLowerCase().indexOf(fileExtension.toLowerCase()) > -1;\n              }).length > 0\n            ) {\n              acceptFile = false;\n              if (this._excludedFileType === false) {\n                const excludedFileType: (number | true)[] = await this.getFileUploadStatus(\n                  file,\n                  fullPath,\n                  'ExcludedFileType',\n                  this.fileUploadList\n                );\n                if (excludedFileType !== null) {\n                  if (excludedFileType[0] === 1) {\n                    this._excludedFileType = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        // Collect accepted files\n        if (acceptFile) {\n          const conflictBehavior: (number | true)[] = await this.getFileUploadStatus(\n            file,\n            fullPath,\n            'Upload',\n            this.fileUploadList\n          );\n          let completed = false;\n          if (conflictBehavior !== null) {\n            if (conflictBehavior[0] === -1) {\n              completed = true;\n            } else {\n              this._applyAll = Boolean(conflictBehavior[0]);\n              this._applyAllConflictBehavior = conflictBehavior[1] ? 1 : 0;\n            }\n          }\n\n          // Initialize MgtFileUploadItem Life cycle\n          fileItems.push({\n            file,\n            driveItem: {\n              name: file.name\n            },\n            fullPath,\n            conflictBehavior: conflictBehavior !== null ? (conflictBehavior[1] ? 1 : 0) : null,\n            iconStatus: null,\n            percent: 1,\n            view: ViewType.image,\n            completed,\n            maxSize: this._maxChunkSize,\n            minSize: 0\n          });\n        }\n      }\n    }\n    fileItems = fileItems.sort((firstFile, secondFile) => {\n      return firstFile.fullPath\n        .substring(0, firstFile.fullPath.lastIndexOf('/'))\n        .localeCompare(secondFile.fullPath.substring(0, secondFile.fullPath.lastIndexOf('/')));\n    });\n    // remove completed file report image to be reuploaded.\n    fileItems.forEach(fileItem => {\n      if (fileItemsCompleted.filter(item => item.fullPath === fileItem.fullPath).length !== 0) {\n        const index = fileItemsCompleted.findIndex(item => item.fullPath === fileItem.fullPath);\n        fileItemsCompleted.splice(index, 1);\n      }\n    });\n    fileItems.push(...fileItemsCompleted);\n    this.filesToUpload = fileItems;\n    // Send multiple Files to upload\n    const promises = this.filesToUpload.map(fileItem => this.sendFileItemGraph(fileItem));\n    await Promise.all(promises);\n  }\n\n  /**\n   * Call modal dialog to replace or keep file.\n   *\n   * @param file\n   * @returns\n   */\n  protected async getFileUploadStatus(\n    file: File,\n    fullPath: string,\n    DialogStatus: string,\n    fileUploadList: MgtFileUploadConfig\n  ) {\n    const fileUploadDialog: HTMLElement = this.renderRoot.querySelector('#file-upload-dialog');\n\n    switch (DialogStatus) {\n      case 'Upload': {\n        const driveItem = await getGraphfile(this.fileUploadList.graph, `${this.getGrapQuery(fullPath)}?$select=id`);\n        if (driveItem !== null) {\n          if (this._applyAll === true) {\n            return [this._applyAll, this._applyAllConflictBehavior];\n          }\n          fileUploadDialog.classList.add('visible');\n          this._dialogTitle = strings.fileReplaceTitle;\n          this._dialogContent = strings.fileReplace.replace('{FileName}', file.name);\n          this._dialogCheckBox = strings.checkApplyAll;\n          this._dialogPrimaryButton = strings.buttonReplace;\n          this._dialogSecondaryButton = strings.buttonKeep;\n          await super.requestStateUpdate(true);\n\n          return new Promise<number[]>(resolve => {\n            const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n            const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n            const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n            const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n            fileUploadDialogCheck.checked = false;\n            fileUploadDialogCheck.classList.remove('hide');\n\n            // Replace File\n            const onOkDialogClick = () => {\n              fileUploadDialog.classList.remove('visible');\n              resolve([fileUploadDialogCheck.checked ? 1 : 0, MgtFileUploadConflictBehavior.replace]);\n            };\n\n            // Rename File\n            const onCancelDialogClick = () => {\n              fileUploadDialog.classList.remove('visible');\n              resolve([fileUploadDialogCheck.checked ? 1 : 0, MgtFileUploadConflictBehavior.rename]);\n            };\n\n            // Cancel File\n            const onCloseDialogClick = () => {\n              fileUploadDialog.classList.remove('visible');\n              resolve([-1]);\n            };\n\n            // Remove and include event listener to validate options.\n            fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n            fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n            fileUploadDialogClose.removeEventListener('click', onCloseDialogClick);\n            fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n            fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n            fileUploadDialogClose.addEventListener('click', onCloseDialogClick);\n          });\n        } else {\n          return null;\n        }\n        break;\n      }\n      case 'ExcludedFileType':\n        fileUploadDialog.classList.add('visible');\n        this._dialogTitle = strings.fileTypeTitle;\n        this._dialogContent =\n          strings.fileType.replace('{FileName}', file.name) +\n          ' (' +\n          fileUploadList.excludedFileExtensions.join(',') +\n          ')';\n        this._dialogCheckBox = strings.checkAgain;\n        this._dialogPrimaryButton = strings.buttonOk;\n        this._dialogSecondaryButton = strings.buttonCancel;\n        await super.requestStateUpdate(true);\n\n        return new Promise<number[]>(resolve => {\n          const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n          const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n          const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n          const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n          fileUploadDialogCheck.checked = false;\n          fileUploadDialogCheck.classList.remove('hide');\n\n          const onOkDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Confirm info\n            resolve([fileUploadDialogCheck.checked ? 1 : 0]);\n          };\n\n          const onCancelDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Cancel all\n            resolve([0]);\n          };\n\n          // Remove and include event listener to validate options.\n          fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.addEventListener('click', onCancelDialogClick);\n        });\n      case 'MaxFileSize':\n        fileUploadDialog.classList.add('visible');\n        this._dialogTitle = strings.maximumFileSizeTitle;\n        this._dialogContent =\n          strings.maximumFileSize\n            .replace('{FileSize}', formatBytes(fileUploadList.maxFileSize * 1024))\n            .replace('{FileName}', file.name) +\n          formatBytes(file.size) +\n          '.';\n        this._dialogCheckBox = strings.checkAgain;\n        this._dialogPrimaryButton = strings.buttonOk;\n        this._dialogSecondaryButton = strings.buttonCancel;\n        await super.requestStateUpdate(true);\n\n        return new Promise<number[]>(resolve => {\n          const fileUploadDialogOk: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-ok');\n          const fileUploadDialogCancel: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-cancel');\n          const fileUploadDialogClose: HTMLElement = this.renderRoot.querySelector('.file-upload-dialog-close');\n          const fileUploadDialogCheck: HTMLInputElement = this.renderRoot.querySelector('#file-upload-dialog-check');\n          fileUploadDialogCheck.checked = false;\n          fileUploadDialogCheck.classList.remove('hide');\n\n          const onOkDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Confirm info\n            resolve([fileUploadDialogCheck.checked ? 1 : 0]);\n          };\n\n          const onCancelDialogClick = () => {\n            fileUploadDialog.classList.remove('visible');\n            // Cancel all\n            resolve([0]);\n          };\n          // Remove and include event listener to validate options.\n          fileUploadDialogOk.removeEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.removeEventListener('click', onCancelDialogClick);\n          fileUploadDialogOk.addEventListener('click', onOkDialogClick);\n          fileUploadDialogCancel.addEventListener('click', onCancelDialogClick);\n          fileUploadDialogClose.addEventListener('click', onCancelDialogClick);\n        });\n\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Get GraphQuery based on pre defined parameters.\n   *\n   * @param fileItem\n   * @returns\n   */\n  protected getGrapQuery(fullPath: string) {\n    let itemPath = '';\n    if (this.fileUploadList.itemPath) {\n      if (this.fileUploadList.itemPath.length > 0) {\n        itemPath = this.fileUploadList.itemPath.startsWith('/')\n          ? this.fileUploadList.itemPath\n          : '/' + this.fileUploadList.itemPath;\n      }\n    }\n\n    // {userId} {itemId}\n    if (this.fileUploadList.userId && this.fileUploadList.itemId) {\n      return `/users/${this.fileUploadList.userId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {userId} {itemPath}\n    if (this.fileUploadList.userId && this.fileUploadList.itemPath) {\n      return `/users/${this.fileUploadList.userId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // {groupId} {itemId}\n    if (this.fileUploadList.groupId && this.fileUploadList.itemId) {\n      return `/groups/${this.fileUploadList.groupId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {groupId} {itemPath}\n    if (this.fileUploadList.groupId && this.fileUploadList.itemPath) {\n      return `/groups/${this.fileUploadList.groupId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // {driveId} {itemId}\n    if (this.fileUploadList.driveId && this.fileUploadList.itemId) {\n      return `/drives/${this.fileUploadList.driveId}/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {driveId} {itemPath}\n    if (this.fileUploadList.driveId && this.fileUploadList.itemPath) {\n      return `/drives/${this.fileUploadList.driveId}/root:${itemPath}${fullPath}`;\n    }\n    // {siteId} {itemId}\n    if (this.fileUploadList.siteId && this.fileUploadList.itemId) {\n      return `/sites/${this.fileUploadList.siteId}/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // {siteId} {itemPath}\n    if (this.fileUploadList.siteId && this.fileUploadList.itemPath) {\n      return `/sites/${this.fileUploadList.siteId}/drive/root:${itemPath}${fullPath}`;\n    }\n    // default OneDrive {itemId}\n    if (this.fileUploadList.itemId) {\n      return `/me/drive/items/${this.fileUploadList.itemId}:${fullPath}`;\n    }\n    // default OneDrive {itemPath}\n    if (this.fileUploadList.itemPath) {\n      return `/me/drive/root:${itemPath}${fullPath}`;\n    }\n    // default OneDrive root\n    return `/me/drive/root:${fullPath}`;\n  }\n\n  /**\n   * Send file using Upload using Graph based on length\n   *\n   * @param fileUpload\n   * @returns\n   */\n  protected async sendFileItemGraph(fileItem: MgtFileUploadItem) {\n    const graph: IGraph = this.fileUploadList.graph;\n    let graphQuery = '';\n    if (fileItem.file.size < this._maxChunkSize) {\n      try {\n        if (!fileItem.completed) {\n          if (\n            fileItem.conflictBehavior === null ||\n            fileItem.conflictBehavior === MgtFileUploadConflictBehavior.replace\n          ) {\n            graphQuery = `${this.getGrapQuery(fileItem.fullPath)}:/content`;\n          }\n          if (fileItem.conflictBehavior === MgtFileUploadConflictBehavior.rename) {\n            graphQuery = `${this.getGrapQuery(fileItem.fullPath)}:/content?@microsoft.graph.conflictBehavior=rename`;\n          }\n          fileItem.driveItem = await sendFileContent(graph, graphQuery, fileItem.file);\n          if (fileItem.driveItem !== null) {\n            this.setUploadSuccess(fileItem);\n          } else {\n            fileItem.driveItem = {\n              name: fileItem.file.name\n            };\n            this.setUploadFail(fileItem, strings.failUploadFile);\n          }\n        }\n      } catch (error) {\n        this.setUploadFail(fileItem, strings.failUploadFile);\n      }\n    } else {\n      if (!fileItem.completed) {\n        if (fileItem.uploadUrl === undefined) {\n          const response = await getUploadSession(\n            graph,\n            `${this.getGrapQuery(fileItem.fullPath)}:/createUploadSession`,\n            fileItem.conflictBehavior\n          );\n          try {\n            if (response !== null) {\n              // uploadSession url used to send chunks of file\n              fileItem.uploadUrl = response.uploadUrl;\n              const driveItem = await this.sendSessionUrlGraph(graph, fileItem);\n              if (driveItem !== null) {\n                fileItem.driveItem = driveItem;\n                this.setUploadSuccess(fileItem);\n              } else {\n                this.setUploadFail(fileItem, strings.failUploadFile);\n              }\n            } else {\n              this.setUploadFail(fileItem, strings.failUploadFile);\n            }\n            // eslint-disable-next-line no-empty\n          } catch {}\n        }\n      }\n    }\n  }\n\n  /**\n   * Manage slices of File to upload file by chunks using Graph and Session Url\n   *\n   * @param Graph\n   * @param fileItem\n   * @returns\n   */\n  protected async sendSessionUrlGraph(graph: IGraph, fileItem: MgtFileUploadItem) {\n    while (fileItem.file.size > fileItem.minSize) {\n      if (fileItem.mimeStreamString === undefined) {\n        fileItem.mimeStreamString = (await this.readFileContent(fileItem.file)) as ArrayBuffer;\n      }\n      // Graph client API uses Buffer package to manage ArrayBuffer, change to Blob avoids external package dependency\n      const fileSlice: Blob = new Blob([fileItem.mimeStreamString.slice(fileItem.minSize, fileItem.maxSize)]);\n      fileItem.percent = Math.round((fileItem.maxSize / fileItem.file.size) * 100);\n      await super.requestStateUpdate(true);\n\n      if (fileItem.uploadUrl !== undefined) {\n        const response = await sendFileChunk(\n          graph,\n          fileItem.uploadUrl,\n          `${fileItem.maxSize - fileItem.minSize}`,\n          `bytes ${fileItem.minSize}-${fileItem.maxSize - 1}/${fileItem.file.size}`,\n          fileSlice\n        );\n        if (response === null) {\n          return null;\n        } else if (isUploadSession(response)) {\n          // Define next Chunk\n          fileItem.minSize = parseInt(response.nextExpectedRanges[0].split('-')[0], 10);\n          fileItem.maxSize = fileItem.minSize + this._maxChunkSize;\n          if (fileItem.maxSize > fileItem.file.size) {\n            fileItem.maxSize = fileItem.file.size;\n          }\n        } else if (response.id !== undefined) {\n          return response;\n        }\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Change the state of Mgt-File icon upload to Success\n   *\n   * @param fileUpload\n   */\n  protected setUploadSuccess(fileUpload: MgtFileUploadItem) {\n    fileUpload.percent = 100;\n    void super.requestStateUpdate(true);\n    setTimeout(() => {\n      fileUpload.iconStatus = getSvg(SvgIcon.Success);\n      fileUpload.view = ViewType.twolines;\n      fileUpload.fieldUploadResponse = 'lastModifiedDateTime';\n      fileUpload.completed = true;\n      void super.requestStateUpdate(true);\n      void clearFilesCache();\n    }, 500);\n  }\n\n  /**\n   * Change the state of Mgt-File icon upload to Fail\n   *\n   * @param fileUpload\n   */\n  protected setUploadFail(fileUpload: MgtFileUploadItem, errorMessage: string) {\n    setTimeout(() => {\n      fileUpload.iconStatus = getSvg(SvgIcon.Fail);\n      fileUpload.view = ViewType.twolines;\n      fileUpload.driveItem.description = errorMessage;\n      fileUpload.fieldUploadResponse = 'description';\n      fileUpload.completed = true;\n      void super.requestStateUpdate(true);\n    }, 500);\n  }\n\n  /**\n   * Retrieve File content as ArrayBuffer\n   *\n   * @param file\n   * @returns\n   */\n  protected readFileContent(file: File): Promise<string | ArrayBuffer> {\n    return new Promise<string | ArrayBuffer>((resolve, reject) => {\n      const myReader: FileReader = new FileReader();\n\n      myReader.onloadend = () => {\n        resolve(myReader.result);\n      };\n\n      myReader.onerror = e => {\n        reject(e);\n      };\n\n      myReader.readAsArrayBuffer(file);\n    });\n  }\n\n  /**\n   * Collect Files from Upload Area based on maxUploadFile\n   *\n   * @param uploadFilesItems\n   * @returns\n   */\n  protected async getFilesFromUploadArea(filesItems: DataTransferItemList | FileList): Promise<File[]> {\n    const folders: FileSystemDirectoryEntry[] = [];\n    let entry: FileSystemEntry;\n    const collectFilesItems: File[] = [];\n\n    for (const uploadFileItem of filesItems) {\n      if (isDataTransferItem(uploadFileItem)) {\n        if (isFutureDataTransferItem(uploadFileItem)) {\n          entry = uploadFileItem.getAsEntry();\n          if (isFileSystemDirectoryEntry(entry)) {\n            folders.push(entry);\n          } else {\n            const file = uploadFileItem.getAsFile();\n            if (file) {\n              this.writeFilePath(file, '');\n              collectFilesItems.push(file);\n            }\n          }\n        } else if (uploadFileItem.webkitGetAsEntry) {\n          entry = uploadFileItem.webkitGetAsEntry();\n          if (isFileSystemDirectoryEntry(entry)) {\n            folders.push(entry);\n          } else {\n            const file = uploadFileItem.getAsFile();\n            if (file) {\n              this.writeFilePath(file, '');\n              collectFilesItems.push(file);\n            }\n          }\n        } else {\n          const file = uploadFileItem.getAsFile();\n          if (file) {\n            this.writeFilePath(file, '');\n            collectFilesItems.push(file);\n          }\n        }\n      } else {\n        this.writeFilePath(uploadFileItem, '');\n        collectFilesItems.push(uploadFileItem);\n      }\n    }\n\n    // Collect Files from folder\n    if (folders.length > 0) {\n      const folderFiles = await this.getFolderFiles(folders);\n      collectFilesItems.push(...folderFiles);\n    }\n    return collectFilesItems;\n  }\n\n  /**\n   * Retrieve files from folder and subfolders to array.\n   *\n   * @param folders\n   * @returns\n   */\n  protected getFolderFiles(folders: FileSystemDirectoryEntry[]) {\n    return new Promise<File[]>(resolve => {\n      let reading = 0;\n      const contents: File[] = [];\n      folders.forEach(entry => {\n        readEntry(entry, '');\n      });\n\n      const readEntry = (entry: FileEntry, path: string) => {\n        if (isFileSystemDirectoryEntry(entry)) {\n          readReaderContent(entry.createReader());\n        } else if (isFileSystemFileEntry(entry)) {\n          reading++;\n          entry.file(file => {\n            reading--;\n            // Include Folder path where File is located\n            this.writeFilePath(file, path);\n            contents.push(file);\n\n            if (reading === 0) {\n              resolve(contents);\n            }\n          });\n        }\n      };\n\n      const readReaderContent = (reader: FileSystemDirectoryReader) => {\n        reading++;\n\n        reader.readEntries(entries => {\n          reading--;\n          for (const entry of entries) {\n            readEntry(entry, entry.fullPath);\n          }\n\n          if (reading === 0) {\n            resolve(contents);\n          }\n        });\n      };\n    });\n  }\n  private writeFilePath(file: File | FileSystemEntry, path: string) {\n    (file as unknown as FileEntry).fullPath = path;\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  arraysAreEqual,\n  GraphPageIterator,\n  Providers,\n  ProviderState,\n  mgtHtml,\n  MgtTemplatedComponent\n} from '@microsoft/mgt-element';\nimport { DriveItem } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport {\n  clearFilesCache,\n  fetchNextAndCacheForFilesPageIterator,\n  getDriveFilesByIdIterator,\n  getDriveFilesByPathIterator,\n  getFilesByIdIterator,\n  getFilesByListQueryIterator,\n  getFilesByPathIterator,\n  getFilesByQueries,\n  getFilesIterator,\n  getGroupFilesByIdIterator,\n  getGroupFilesByPathIterator,\n  getMyInsightsFiles,\n  getSiteFilesByIdIterator,\n  getSiteFilesByPathIterator,\n  getUserFilesByIdIterator,\n  getUserFilesByPathIterator,\n  getUserInsightsFiles\n} from '../../graph/graph.files';\nimport './mgt-file-upload/mgt-file-upload';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { OfficeGraphInsightString, ViewType } from '../../graph/types';\nimport { styles } from './mgt-file-list-css';\nimport { strings } from './strings';\nimport { MgtFile, registerMgtFileComponent } from '../mgt-file/mgt-file';\nimport { MgtFileUploadConfig, registerMgtFileUploadComponent } from './mgt-file-upload/mgt-file-upload';\n\nimport { fluentProgressRing } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { CardSection } from '../BasePersonCardSection';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtFileListComponent = () => {\n  registerFluentComponents(fluentProgressRing);\n\n  registerMgtFileComponent();\n  registerMgtFileUploadComponent();\n  registerComponent('file-list', MgtFileList);\n};\n\n/**\n * The File List component displays a list of multiple folders and files by\n * using the file/folder name, an icon, and other properties specified by the developer.\n * This component uses the mgt-file component.\n *\n * @export\n * @class MgtFileList\n *\n * @fires {CustomEvent<MicrosoftGraph.DriveItem>} itemClick - Fired when a user clicks on a file.\n * it returns the file (DriveItem) details.\n *\n * NOTE: This component also allows customizing the tokens from mgt-file and mgt-file-upload components.\n * @cssprop --file-list-background-color - {Color} the background color of the component.\n * @cssprop --file-list-box-shadow - {String} the box-shadow syle of the component. Default value is --elevation-shadow-card-rest.\n * @cssprop --file-list-border-radius - {Length} the file list box border radius. Default value is 8px.\n * @cssprop --file-list-border - {String} the file list border style. Default value is none.\n * @cssprop --file-list-padding -{String} the file list padding.  Default value is 0px.\n * @cssprop --file-list-margin -{String} the file list margin. Default value is 0px.\n * @cssprop --show-more-button-background-color - {Color} the \"show more\" button background color.\n * @cssprop --show-more-button-background-color--hover - {Color} the \"show more\" button background color on hover.\n * @cssprop --show-more-button-font-size - {String} the \"show more\" text font size. Default value is 12px.\n * @cssprop --show-more-button-padding - {String} the \"show more\" button padding. Default value is 0px.\n * @cssprop --show-more-button-border-bottom-right-radius - {String} the \"show more\" button bottom right border radius. Default value is 8px.\n * @cssprop --show-more-button-border-bottom-left-radius - {String} the \"show more\" button bottom left border radius. Default value is 8px;\n * @cssprop --progress-ring-size -{String} Progress ring height and width. Default value is 24px.\n */\nexport class MgtFileList extends MgtTemplatedComponent implements CardSection {\n  @state() private _isCompact = false;\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings(): Record<string, string> {\n    return strings;\n  }\n\n  /**\n   * allows developer to provide query for a file list\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-list-query'\n  })\n  public get fileListQuery(): string {\n    return this._fileListQuery;\n  }\n  public set fileListQuery(value: string) {\n    if (value === this._fileListQuery) {\n      return;\n    }\n\n    this._fileListQuery = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  public get displayName(): string {\n    return this.strings.filesSectionTitle;\n  }\n\n  /**\n   * The title for the card when rendered as a card full.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  public get cardTitle(): string {\n    return this.strings.filesSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Files);\n  }\n\n  /**\n   * allows developer to provide an array of file queries\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-queries',\n    converter: (value, _type) => {\n      if (value) {\n        return value.split(',').map(v => v.trim());\n      } else {\n        return null;\n      }\n    }\n  })\n  public get fileQueries(): string[] {\n    return this._fileQueries;\n  }\n  public set fileQueries(value: string[]) {\n    if (arraysAreEqual(this._fileQueries, value)) {\n      return;\n    }\n\n    this._fileQueries = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide an array of files\n   *\n   * @type {MicrosoftGraph.DriveItem[]}\n   * @memberof MgtFileList\n   */\n  @property({ type: Object })\n  public files: DriveItem[];\n\n  /**\n   * allows developer to provide site id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'site-id'\n  })\n  public get siteId(): string {\n    return this._siteId;\n  }\n  public set siteId(value: string) {\n    if (value === this._siteId) {\n      return;\n    }\n\n    this._siteId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide drive id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'drive-id'\n  })\n  public get driveId(): string {\n    return this._driveId;\n  }\n  public set driveId(value: string) {\n    if (value === this._driveId) {\n      return;\n    }\n\n    this._driveId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide group id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'group-id'\n  })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value: string) {\n    if (value === this._groupId) {\n      return;\n    }\n\n    this._groupId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide item id for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-id'\n  })\n  public get itemId(): string {\n    return this._itemId;\n  }\n  public set itemId(value: string) {\n    if (value === this._itemId) {\n      return;\n    }\n\n    this._itemId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide item path for a file\n   *\n   * @type {string}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-path'\n  })\n  public get itemPath(): string {\n    return this._itemPath;\n  }\n  public set itemPath(value: string) {\n    if (value === this._itemPath) {\n      return;\n    }\n\n    this._itemPath = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide user id for a file\n   *\n   * @type {string}\n   * @memberof MgtFile\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n\n    this._userId = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * allows developer to provide insight type for a file\n   * can be trending, used, or shared\n   *\n   * @type {OfficeGraphInsightString}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'insight-type'\n  })\n  public get insightType(): OfficeGraphInsightString {\n    return this._insightType;\n  }\n  public set insightType(value: OfficeGraphInsightString) {\n    if (value === this._insightType) {\n      return;\n    }\n\n    this._insightType = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * Sets what data to be rendered (file icon only, oneLine, twoLines threeLines).\n   * Default is 'threeLines'.\n   *\n   * @type {ViewType}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'item-view',\n    converter: value => {\n      if (!value || value.length === 0) {\n        return ViewType.threelines;\n      }\n\n      value = value.toLowerCase();\n\n      if (typeof ViewType[value] === 'undefined') {\n        return ViewType.threelines;\n      } else {\n        return ViewType[value] as ViewType;\n      }\n    }\n  })\n  public itemView: ViewType;\n\n  /**\n   * allows developer to provide file type to filter the list\n   * can be docx\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'file-extensions',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get fileExtensions(): string[] {\n    return this._fileExtensions;\n  }\n  public set fileExtensions(value: string[]) {\n    if (arraysAreEqual(this._fileExtensions, value)) {\n      return;\n    }\n\n    this._fileExtensions = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * A number value to indicate the number of more files to load when show more button is clicked\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'page-size',\n    type: Number\n  })\n  public get pageSize(): number {\n    return this._pageSize;\n  }\n  public set pageSize(value: number) {\n    if (value === this._pageSize) {\n      return;\n    }\n\n    this._pageSize = value;\n    void this.requestStateUpdate(true);\n  }\n\n  @property({\n    attribute: 'disable-open-on-click',\n    type: Boolean\n  })\n  public disableOpenOnClick = false;\n  /**\n   * A boolean value indication if 'show-more' button should be disabled\n   *\n   * @type {boolean}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'hide-more-files-button',\n    type: Boolean\n  })\n  public hideMoreFilesButton: boolean;\n\n  /**\n   * A number value indication for file size upload (KB)\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'max-file-size',\n    type: Number\n  })\n  public get maxFileSize(): number {\n    return this._maxFileSize;\n  }\n  public set maxFileSize(value: number) {\n    if (value === this._maxFileSize) {\n      return;\n    }\n\n    this._maxFileSize = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * A boolean value indication if file upload extension should be enable or disabled\n   *\n   * @type {boolean}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'enable-file-upload',\n    type: Boolean\n  })\n  public enableFileUpload: boolean;\n\n  /**\n   * A number value to indicate the max number allowed of files to upload.\n   *\n   * @type {number}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'max-upload-file',\n    type: Number\n  })\n  public get maxUploadFile(): number {\n    return this._maxUploadFile;\n  }\n  public set maxUploadFile(value: number) {\n    if (value === this._maxUploadFile) {\n      return;\n    }\n\n    this._maxUploadFile = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * A Array of file extensions to be excluded from file upload.\n   *\n   * @type {string[]}\n   * @memberof MgtFileList\n   */\n  @property({\n    attribute: 'excluded-file-extensions',\n    converter: (value, _type) => {\n      return value.split(',').map(v => v.trim());\n    }\n  })\n  public get excludedFileExtensions(): string[] {\n    return this._excludedFileExtensions;\n  }\n  public set excludedFileExtensions(value: string[]) {\n    if (arraysAreEqual(this._excludedFileExtensions, value)) {\n      return;\n    }\n\n    this._excludedFileExtensions = value;\n    void this.requestStateUpdate(true);\n  }\n\n  /**\n   * Get the scopes required for file list\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtFileList\n   */\n  public static get requiredScopes(): string[] {\n    return [...new Set([...MgtFile.requiredScopes])];\n  }\n\n  private _fileListQuery: string;\n  private _fileQueries: string[];\n  private _siteId: string;\n  private _itemId: string;\n  private _driveId: string;\n  private _itemPath: string;\n  private _groupId: string;\n  private _insightType: OfficeGraphInsightString;\n  private _fileExtensions: string[];\n  private _pageSize: number;\n  private _excludedFileExtensions: string[];\n  private _maxUploadFile: number;\n  private _maxFileSize: number;\n  private _userId: string;\n  private _preloadedFiles: DriveItem[];\n  private pageIterator: GraphPageIterator<DriveItem>;\n  // tracking user arrow key input of selection for accessibility purpose\n  private _focusedItemIndex = -1;\n\n  @state() private _isLoadingMore: boolean;\n\n  constructor() {\n    super();\n\n    this.pageSize = 10;\n    this.itemView = ViewType.twolines;\n    this.maxUploadFile = 10;\n    this.enableFileUpload = false;\n    this._preloadedFiles = [];\n  }\n\n  /**\n   * Override requestStateUpdate to include clearstate.\n   *\n   * @memberof MgtFileList\n   */\n  protected requestStateUpdate(force?: boolean) {\n    this.clearState();\n    return super.requestStateUpdate(force);\n  }\n\n  /**\n   * Reset state\n   *\n   * @memberof MgtFileList\n   */\n  protected clearState(): void {\n    super.clearState();\n    this.files = null;\n  }\n\n  /**\n   * Set the section to compact view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asCompactView() {\n    this._isCompact = true;\n    return this;\n  }\n\n  /**\n   * Set the section to full view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asFullView() {\n    this._isCompact = false;\n    return this;\n  }\n\n  /**\n   * Render the file list\n   *\n   * @return {*}\n   * @memberof MgtFileList\n   */\n  public render() {\n    if (!this.files && this.isLoadingState) {\n      return this.renderLoading();\n    }\n\n    if (!this.files || this.files.length === 0) {\n      return this.renderNoData();\n    }\n\n    return this._isCompact ? this.renderCompactView() : this.renderFullView();\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderCompactView(): TemplateResult {\n    const files = this.files.slice(0, 3);\n\n    return this.renderFiles(files);\n  }\n\n  /**\n   * Render the full view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  public renderFullView(): TemplateResult {\n    return this.renderTemplate('default', { files: this.files }) || this.renderFiles(this.files);\n  }\n\n  /**\n   * Render the loading state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderLoading(): TemplateResult {\n    return this.renderTemplate('loading', null) || html``;\n  }\n\n  /**\n   * Render the state when no data is available\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderNoData(): TemplateResult {\n    return (\n      this.renderTemplate('no-data', null) ||\n      (this.enableFileUpload === true && Providers.globalProvider !== undefined\n        ? html`\n            <div class=\"file-list-wrapper\" dir=${this.direction}>\n              ${this.renderFileUpload()}\n            </div>`\n        : html``)\n    );\n  }\n\n  /**\n   * Render the list of files.\n   *\n   * @protected\n   * @param {*} files\n   * @returns {TemplateResult}\n   * @memberof mgtFileList\n   */\n  protected renderFiles(files: DriveItem[]): TemplateResult {\n    return html`\n      <div id=\"file-list-wrapper\" class=\"file-list-wrapper\" dir=${this.direction}>\n        ${this.enableFileUpload ? this.renderFileUpload() : null}\n        <ul\n          id=\"file-list\"\n          class=\"file-list\"\n        >\n          <li\n            tabindex=\"0\"\n            class=\"file-item\"\n            @keydown=\"${this.onFileListKeyDown}\"\n            @focus=\"${this.onFocusFirstItem}\"\n            @click=${(e: UIEvent) => this.handleItemSelect(files[0], e)}>\n            ${this.renderFile(files[0])}\n          </li>\n          ${repeat(\n            files.slice(1),\n            f => f.id,\n            f => html`\n              <li\n                class=\"file-item\"\n                @keydown=\"${this.onFileListKeyDown}\"\n                @click=${(e: UIEvent) => this.handleItemSelect(f, e)}>\n                ${this.renderFile(f)}\n              </li>\n            `\n          )}\n        </ul>\n        ${\n          !this.hideMoreFilesButton &&\n          this.pageIterator &&\n          (this.pageIterator.hasNext || this._preloadedFiles.length) &&\n          !this._isCompact\n            ? this.renderMoreFileButton()\n            : null\n        }\n      </div>\n    `;\n  }\n\n  /**\n   * Render an individual file.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof mgtFileList\n   */\n  protected renderFile(file: DriveItem): TemplateResult {\n    const view = this.itemView;\n    return (\n      this.renderTemplate('file', { file }, file.id) ||\n      mgtHtml`\n        <mgt-file class=\"mgt-file-item\" .fileDetails=${file} .view=${view}></mgt-file>\n      `\n    );\n  }\n\n  /**\n   * Render the button when clicked will show more files.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtFileList\n   */\n  protected renderMoreFileButton(): TemplateResult {\n    if (this._isLoadingMore) {\n      return html`\n        <fluent-progress-ring role=\"progressbar\" viewBox=\"0 0 8 8\" class=\"progress-ring\"></fluent-progress-ring>\n      `;\n    } else {\n      return html`\n        <fluent-button\n          appearance=\"stealth\"\n          id=\"show-more\"\n          class=\"show-more\"\n          @click=${() => this.renderNextPage()}\n        >\n          <span class=\"show-more-text\">${this.strings.showMoreSubtitle}</span>\n        </fluent-button>`;\n    }\n  }\n\n  /**\n   * Render MgtFileUpload sub component\n   *\n   * @returns\n   */\n  protected renderFileUpload(): TemplateResult {\n    const fileUploadConfig: MgtFileUploadConfig = {\n      graph: Providers.globalProvider.graph.forComponent(this),\n      driveId: this.driveId,\n      excludedFileExtensions: this.excludedFileExtensions,\n      groupId: this.groupId,\n      itemId: this.itemId,\n      itemPath: this.itemPath,\n      userId: this.userId,\n      siteId: this.siteId,\n      maxFileSize: this.maxFileSize,\n      maxUploadFile: this.maxUploadFile\n    };\n    return mgtHtml`\n        <mgt-file-upload .fileUploadList=${fileUploadConfig} ></mgt-file-upload>\n      `;\n  }\n\n  /**\n   * Handles setting the focusedItemIndex to 0 when you focus on the first item\n   * in the file list.\n   *\n   * @returns void\n   */\n  private readonly onFocusFirstItem = () => (this._focusedItemIndex = 0);\n\n  /**\n   * Handle accessibility keyboard keydown events (arrow up, arrow down, enter, tab) on file list\n   *\n   * @param event\n   */\n  private readonly onFileListKeyDown = (event: KeyboardEvent): void => {\n    const fileList = this.renderRoot.querySelector('.file-list');\n    let focusedItem: HTMLElement;\n\n    if (!fileList?.children.length) {\n      return;\n    }\n\n    if (event.code === 'ArrowUp' || event.code === 'ArrowDown') {\n      if (event.code === 'ArrowUp') {\n        if (this._focusedItemIndex === -1) {\n          this._focusedItemIndex = fileList.children.length;\n        }\n        this._focusedItemIndex = (this._focusedItemIndex - 1 + fileList.children.length) % fileList.children.length;\n      }\n      if (event.code === 'ArrowDown') {\n        this._focusedItemIndex = (this._focusedItemIndex + 1) % fileList.children.length;\n      }\n\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n      this.updateItemBackgroundColor(fileList, focusedItem, 'focused');\n    }\n\n    if (event.code === 'Enter' || event.code === 'Space') {\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n\n      const file = focusedItem.children[0] as MgtFile;\n      event.preventDefault();\n      this.fireCustomEvent('itemClick', file.fileDetails);\n      this.handleFileClick(file.fileDetails);\n\n      this.updateItemBackgroundColor(fileList, focusedItem, 'selected');\n    }\n\n    if (event.code === 'Tab') {\n      focusedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n    }\n  };\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtFileList\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n    if (!provider || provider.state === ProviderState.Loading) {\n      return;\n    }\n\n    if (provider.state === ProviderState.SignedOut) {\n      this.files = null;\n      return;\n    }\n    const graph = provider.graph.forComponent(this);\n    let files: DriveItem[];\n    let pageIterator: GraphPageIterator<DriveItem>;\n\n    const getFromMyDrive = !this.driveId && !this.siteId && !this.groupId && !this.userId;\n\n    // combinations of these attributes must be provided in order for the component to know which endpoint to call to request files\n    // not supplying enough for these combinations will get a null file result\n    if (\n      (this.driveId && !this.itemId && !this.itemPath) ||\n      (this.groupId && !this.itemId && !this.itemPath) ||\n      (this.siteId && !this.itemId && !this.itemPath) ||\n      (this.userId && !this.insightType && !this.itemId && !this.itemPath)\n    ) {\n      this.files = null;\n    }\n\n    if (!this.files) {\n      if (this.fileListQuery) {\n        pageIterator = await getFilesByListQueryIterator(graph, this.fileListQuery, this.pageSize);\n      } else if (this.fileQueries) {\n        files = await getFilesByQueries(graph, this.fileQueries);\n      } else if (getFromMyDrive) {\n        if (this.itemId) {\n          pageIterator = await getFilesByIdIterator(graph, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getFilesByPathIterator(graph, this.itemPath, this.pageSize);\n        } else if (this.insightType) {\n          files = await getMyInsightsFiles(graph, this.insightType);\n        } else {\n          pageIterator = await getFilesIterator(graph, this.pageSize);\n        }\n      } else if (this.driveId) {\n        if (this.itemId) {\n          pageIterator = await getDriveFilesByIdIterator(graph, this.driveId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getDriveFilesByPathIterator(graph, this.driveId, this.itemPath, this.pageSize);\n        }\n      } else if (this.groupId) {\n        if (this.itemId) {\n          pageIterator = await getGroupFilesByIdIterator(graph, this.groupId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getGroupFilesByPathIterator(graph, this.groupId, this.itemPath, this.pageSize);\n        }\n      } else if (this.siteId) {\n        if (this.itemId) {\n          pageIterator = await getSiteFilesByIdIterator(graph, this.siteId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getSiteFilesByPathIterator(graph, this.siteId, this.itemPath, this.pageSize);\n        }\n      } else if (this.userId) {\n        if (this.itemId) {\n          pageIterator = await getUserFilesByIdIterator(graph, this.userId, this.itemId, this.pageSize);\n        } else if (this.itemPath) {\n          pageIterator = await getUserFilesByPathIterator(graph, this.userId, this.itemPath, this.pageSize);\n        } else if (this.insightType) {\n          files = await getUserInsightsFiles(graph, this.userId, this.insightType);\n        }\n      }\n\n      if (pageIterator) {\n        this.pageIterator = pageIterator;\n        this._preloadedFiles = [...this.pageIterator.value];\n\n        // handle when cached file length is greater than page size\n        if (this._preloadedFiles.length >= this.pageSize) {\n          files = this._preloadedFiles.splice(0, this.pageSize);\n        } else {\n          files = this._preloadedFiles.splice(0, this._preloadedFiles.length);\n        }\n      }\n\n      // filter files when extensions are provided\n      let filteredByFileExtension: DriveItem[];\n      if (this.fileExtensions && this.fileExtensions !== null) {\n        // retrive all pages before filtering\n        if (this.pageIterator?.value) {\n          while (this.pageIterator.hasNext) {\n            await fetchNextAndCacheForFilesPageIterator(this.pageIterator);\n          }\n          files = this.pageIterator.value;\n          this._preloadedFiles = [];\n        }\n        filteredByFileExtension = files.filter(file => {\n          for (const e of this.fileExtensions) {\n            if (e === this.getFileExtension(file.name)) {\n              return file;\n            }\n          }\n        });\n      }\n\n      if (filteredByFileExtension?.length >= 0) {\n        this.files = filteredByFileExtension;\n        if (this.pageSize) {\n          files = this.files.splice(0, this.pageSize);\n          this.files = files;\n        }\n      } else {\n        this.files = files;\n      }\n    }\n  }\n\n  /**\n   * Handle the click event on an item.\n   *\n   * @protected\n   * @memberof MgtFileList\n   */\n  protected handleItemSelect(item: DriveItem, event: UIEvent): void {\n    this.handleFileClick(item);\n    this.fireCustomEvent('itemClick', item);\n\n    // handle accessibility updates when item clicked\n    if (event) {\n      const fileList = this.renderRoot.querySelector('.file-list');\n\n      // get index of the focused item\n      const nodes = Array.from(fileList.children);\n      const li = (event.target as HTMLElement).closest('li');\n      const index = nodes.indexOf(li);\n      this._focusedItemIndex = index;\n      const clickedItem = fileList.children[this._focusedItemIndex] as HTMLElement;\n      this.updateItemBackgroundColor(fileList, clickedItem, 'selected');\n    }\n  }\n\n  /**\n   * Handle the click event on button to show next page.\n   *\n   * @protected\n   * @memberof MgtFileList\n   */\n  protected async renderNextPage() {\n    // render next page from cache if exists, or else use iterator\n    if (this._preloadedFiles.length > 0) {\n      this.files = [\n        ...this.files,\n        ...this._preloadedFiles.splice(0, Math.min(this.pageSize, this._preloadedFiles.length))\n      ];\n    } else {\n      if (this.pageIterator.hasNext) {\n        this._isLoadingMore = true;\n        const root = this.renderRoot.querySelector('#file-list-wrapper');\n        if (root?.animate) {\n          // play back\n          root.animate(\n            [\n              {\n                height: 'auto',\n                transformOrigin: 'top left'\n              },\n              {\n                height: 'auto',\n                transformOrigin: 'top left'\n              }\n            ],\n            {\n              duration: 1000,\n              easing: 'ease-in-out',\n              fill: 'both'\n            }\n          );\n        }\n        await fetchNextAndCacheForFilesPageIterator(this.pageIterator);\n        this._isLoadingMore = false;\n        this.files = this.pageIterator.value;\n      }\n    }\n\n    this.requestUpdate();\n  }\n\n  private handleFileClick(file: DriveItem) {\n    if (file?.webUrl && !this.disableOpenOnClick) {\n      window.open(file.webUrl, '_blank', 'noreferrer');\n    }\n  }\n\n  /**\n   * Get file extension string from file name\n   *\n   * @param name file name\n   * @returns {string} file extension\n   */\n  private getFileExtension(name: string) {\n    const re = /(?:\\.([^.]+))?$/;\n    const fileExtension = re.exec(name)[1] || '';\n\n    return fileExtension;\n  }\n\n  /**\n   * Handle remove and add css class on accessibility keyboard select and focus\n   *\n   * @param fileList HTML element\n   * @param focusedItem HTML element\n   * @param className background class to be applied\n   */\n  private updateItemBackgroundColor(fileList: Element, focusedItem: HTMLElement, className: string) {\n    // reset background color and remove tabindex\n    for (const node of fileList.children) {\n      node.classList.remove(className);\n      node.removeAttribute('tabindex');\n    }\n\n    // set focused item background color\n    if (focusedItem) {\n      focusedItem.classList.add(className);\n      focusedItem.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n      focusedItem.setAttribute('tabindex', '0');\n      focusedItem.focus();\n    }\n\n    // remove selected classes\n    for (const node of fileList.children) {\n      node.classList.remove('selected');\n    }\n  }\n\n  /**\n   * Handle reload of File List and condition to clear cache\n   *\n   * @param clearCache boolean, if true clear cache\n   */\n  public reload(clearCache = false) {\n    if (clearCache) {\n      // clear cache File List\n      void clearFilesCache();\n    }\n\n    void this.requestStateUpdate(true);\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html } from 'lit';\nimport { MgtBaseComponent } from '@microsoft/mgt-element';\nimport { styles } from './mgt-spinner-css';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtSpinnerComponent = () => registerComponent('spinner', MgtSpinner);\n\n/**\n * Custom Component used to handle loading state in components.\n *\n * @export MgtSpinner\n * @class MgtSpinner\n * @extends {MgtBaseComponent}\n */\nexport class MgtSpinner extends MgtBaseComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  public static get styles() {\n    return styles;\n  }\n\n  /**\n   * Render the loading spinner\n   *\n   * @returns\n   * @memberof MgtSpinner\n   */\n  public render() {\n    return html`<fluent-progress-ring title=\"spinner\"></fluent-progress-ring>`;\n  }\n}\n"],"names":["styles","css","_templateObject","_taggedTemplateLiteral","strings","showMoreSubtitle","filesSectionTitle","sharedTextSubtitle","failUploadFile","cancelUploadFile","buttonUploadFile","maximumFilesTitle","maximumFiles","maximumFileSizeTitle","maximumFileSize","fileTypeTitle","fileType","checkAgain","checkApplyAll","buttonOk","buttonCancel","buttonUpload","buttonKeep","buttonReplace","buttonReselect","fileReplaceTitle","fileReplace","uploadButtonLabel","isFileSystemDirectoryEntry","entry","isDirectory","isFutureDataTransferItem","item","getAsEntry","MgtFileUpload","_MgtBaseComponent","_inherits","_super2","_createSuper","_this","_classCallCheck","call","_dragCounter","_maxChunkSize","_dialogTitle","_dialogContent","_dialogPrimaryButton","_dialogSecondaryButton","_dialogCheckBox","_applyAll","_applyAllConflictBehavior","_maximumFileSize","_excludedFileType","onFileUploadChange","event","inputElement","target","files","length","readUploadedFiles","value","onFileUploadClick","renderRoot","querySelector","click","handleonDragOver","preventDefault","stopPropagation","dataTransfer","items","dropEffect","_dropEffect","handleonDragEnter","classList","add","handleonDragLeave","remove","handleonDrop","_a","clearData","filesToUpload","_createClass","key","get","this","parentElement","root","addEventListener","html","getSvg","SvgIcon","Cancel","Upload","renderFolderTemplate","fileItems","_this2","folderStructure","templateFileItems","map","fileItem","indexOf","fullPath","substring","lastIndexOf","endsWith","_templateObject3","renderFileTemplate","push","mgtHtml","_templateObject2","name","folder","ViewType","oneline","_templateObject4","_templateObject5","_templateObject6","folderTabStyle","completed","classMap","upload","fieldUploadResponse","description","completedTemplate","_templateObject7","renderFileUploadTemplate","_templateObject8","iconStatus","driveItem","view","_this3","_templateObject9","file","percent","deleteFileUploadSession","undefined","uploadUrl","_context","next","deleteSessionFile","fileUploadList","graph","setUploadFail","prev","t0","stop","_callee","uploaded","onCompleteCallback","getFilesFromUploadArea","_context2","sent","getSelectedFiles","_callee2","fileItemsCompleted","forEach","_iterator","_createForOfIteratorHelper","_context4","_loop","_regeneratorRuntime","mark","acceptFile","excludedFileType","conflictBehavior","wrap","_context3","_step","filter","_this4","maxFileSize","size","getFileUploadStatus","excludedFileExtensions","fileExtension","toLowerCase","Boolean","image","maxSize","minSize","s","n","done","delegateYield","t1","e","f","finish","sort","firstFile","secondFile","localeCompare","index","findIndex","splice","_fileItems","apply","promises","sendFileItemGraph","Promise","all","_callee3","DialogStatus","_this5","fileUploadDialog","_context5","getGraphfile","concat","getGrapQuery","abrupt","replace","_super","requestStateUpdate","resolve","fileUploadDialogClose","_this6","fileUploadDialogOk","fileUploadDialogCancel","fileUploadDialogCheck","checked","onOkDialogClick","onCancelDialogClick","onCloseDialogClick","removeEventListener","join","formatBytes","_callee4","itemPath","startsWith","userId","itemId","groupId","driveId","siteId","graphQuery","_context6","sendFileContent","setUploadSuccess","getUploadSession","response","sendSessionUrlGraph","_callee5","_this7","_context7","mimeStreamString","readFileContent","fileSlice","Blob","slice","Math","round","sendFileChunk","isUploadSession","parseInt","nextExpectedRanges","split","id","_callee6","fileUpload","_this8","_get","_getPrototypeOf","prototype","setTimeout","Success","twolines","clearFilesCache","errorMessage","_this9","Fail","reject","myReader","FileReader","onloadend","result","onerror","readAsArrayBuffer","filesItems","folders","collectFilesItems","_iterator2","_step2","uploadFileItem","getAsFile","webkitGetAsEntry","writeFilePath","err","_context8","getFolderFiles","folderFiles","_toConsumableArray","_callee7","_this10","reading","contents","readEntry","path","readReaderContent","createReader","isFile","isFileSystemFileEntry","reader","readEntries","entries","_step3","_iterator3","Set","MgtBaseComponent","__decorate","property","type","Object","registerMgtFileListComponent","registerFluentComponents","fluentProgressRing","registerMgtFileComponent","fluentProgress","fluentButton","fluentCheckbox","fluentDialog","registerComponent","MgtFileList","_MgtTemplatedComponen","_isCompact","disableOpenOnClick","_focusedItemIndex","onFocusFirstItem","onFileListKeyDown","focusedItem","fileList","children","code","updateItemBackgroundColor","fireCustomEvent","fileDetails","handleFileClick","pageSize","itemView","maxUploadFile","enableFileUpload","_preloadedFiles","_fileListQuery","set","Files","_fileQueries","arraysAreEqual","_siteId","_driveId","_groupId","_itemId","_itemPath","_userId","_insightType","_fileExtensions","_pageSize","_maxFileSize","_maxUploadFile","_excludedFileExtensions","force","clearState","isLoadingState","renderLoading","renderCompactView","renderFullView","renderNoData","renderFiles","renderTemplate","Providers","globalProvider","direction","renderFileUpload","handleItemSelect","renderFile","repeat","hideMoreFilesButton","pageIterator","hasNext","renderMoreFileButton","_isLoadingMore","renderNextPage","fileUploadConfig","forComponent","provider","state","ProviderState","Loading","SignedOut","getFromMyDrive","insightType","fileListQuery","getFilesByListQueryIterator","fileQueries","getFilesByQueries","getFilesByIdIterator","getFilesByPathIterator","getMyInsightsFiles","getFilesIterator","getDriveFilesByIdIterator","getDriveFilesByPathIterator","getGroupFilesByIdIterator","getGroupFilesByPathIterator","getSiteFilesByIdIterator","getSiteFilesByPathIterator","getUserFilesByIdIterator","getUserFilesByPathIterator","getUserInsightsFiles","fileExtensions","fetchNextAndCacheForFilesPageIterator","filteredByFileExtension","getFileExtension","nodes","Array","from","li","closest","clickedItem","min","animate","height","transformOrigin","duration","easing","fill","requestUpdate","webUrl","window","open","exec","className","node","removeAttribute","scrollIntoView","behavior","block","inline","setAttribute","focus","arguments","MgtFile","requiredScopes","MgtTemplatedComponent","attribute","converter","_type","v","trim","threelines","Number","registerMgtSpinnerComponent","MgtSpinner"],"sourceRoot":""}