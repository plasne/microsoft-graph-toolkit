{"version":3,"file":"static/js/997.dfeded3a.chunk.js","mappings":"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","sources":["components/PageHeader.tsx","../../../packages/mgt-components/dist/es6/components/preview/mgt-search-results/src/components/preview/mgt-search-results/strings.ts","../../../packages/mgt-components/dist/es6/components/preview/mgt-search-results/src/components/preview/mgt-search-results/mgt-search-results-css.ts","../../../packages/mgt-components/dist/es6/components/preview/mgt-search-results/src/components/preview/mgt-search-results/mgt-search-results.ts","../../../packages/mgt-react/src/generated/search-results.ts","pages/Search/AllResults.tsx","pages/Search/PeopleResults.tsx","pages/Search/ExternalItemsResults.tsx","../../../packages/mgt-react/src/generated/file.ts","pages/Search/FilesResults.tsx","pages/SearchPage.tsx","../../../packages/mgt-element/dist/es6/src/BetaGraph.ts"],"sourcesContent":["import * as React from 'react';\nimport { Divider, makeStyles } from '@fluentui/react-components';\n\nexport interface IPageHeaderProps {\n  title: string;\n  description: string;\n}\n\nconst useStyles = makeStyles({\n  divider: {\n    alignItems: 'self-start',\n    paddingTop: '20px',\n    marginBottom: '20px'\n  }\n});\n\nexport const PageHeader: React.FunctionComponent<IPageHeaderProps> = props => {\n  const styles = useStyles();\n  return (\n    <div>\n      <h1>{props.title}</h1>\n      <div>{props.description}</div>\n      <Divider className={styles.divider} />\n    </div>\n  );\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  modified: 'modified on',\n  back: 'Back',\n  next: 'Next',\n  pages: 'pages',\n  page: 'Page'\n};\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}.search-results{scroll-margin:100px}.search-result-grid{font-size:14px;margin:16px 4px;display:grid;grid-template-columns:32px 2fr 0fr;gap:.5rem}.search-result{font-size:14px;margin:16px 4px}.file-icon{--file-type-icon-height:32px}.search-result-info{margin:4px 0;display:inline-flex}.search-result-date{padding-top:3px}.search-result-date__shimmer{border-radius:4px;margin-top:2%;margin-left:5px;height:10px;width:200px}.search-result-summary{margin:4px 0;color:var(--body-subtle-text-color)}.search-result-thumbnail__shimmer{width:126px;height:72px}.search-result-thumbnail img{height:72px;max-width:126px;width:126px;object-fit:cover}.search-result-url{font-size:14px;font-weight:600;margin:4px 0}.search-result-url a{color:var(--color);text-decoration:none}.search-result-url a:hover{text-decoration:underline}.search-result-content__shimmer{border-radius:4px;margin-top:10px;height:10px}.search-result-name{font-size:16px;font-weight:600;margin:4px 0}.search-result-name__shimmer{border-radius:4px;margin-top:10px;height:10px;width:20%}.search-result-name a{color:var(--color);text-decoration:none}.search-result-name a:hover{text-decoration:underline}.search-result-author__shimmer{width:24px;height:24px}.search-result-icon{width:30px;height:30px}.search-result-icon__shimmer{width:32px;height:32px}.search-result-icon img{width:100%}.search-result-icon svg,.search-result-icon svg>path{width:100%;height:100%;fill:var(--neutral-foreground-rest);fill-rule:nonzero!important;clip-rule:nonzero!important}.search-results-page-active{border-bottom-style:solid;border-bottom-color:var(--accent-base-color)}.search-results-page svg,.search-results-page svg>path{height:12px;fill:var(--neutral-foreground-rest);fill-rule:nonzero!important;clip-rule:nonzero!important}.search-result-answer{box-shadow:var(--answer-box-shadow,0 3.2px 7.2px rgba(0,0,0,.132),0 .6px 1.8px rgba(0,0,0,.108));border-radius:var(--answer-border-radius,4px);border:var(--answer-border,none);padding:var(--answer-padding,10px)}.search-results-pages{margin:16px 4px}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, HTMLTemplateResult, nothing, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport {\n  CacheService,\n  CacheStore,\n  equals,\n  MgtTemplatedComponent,\n  prepScopes,\n  Providers,\n  ProviderState,\n  mgtHtml,\n  BetaGraph,\n  BatchResponse,\n  CollectionResponse,\n  warn\n} from '@microsoft/mgt-element';\n\nimport { schemas } from '../../../graph/cacheStores';\nimport { strings } from './strings';\nimport { styles } from './mgt-search-results-css';\nimport {\n  DirectoryObject,\n  Drive,\n  DriveItem,\n  EntityType,\n  List,\n  ListItem,\n  Message,\n  SearchHit,\n  SearchHitsContainer,\n  SearchRequest,\n  SearchResponse,\n  Site\n} from '@microsoft/microsoft-graph-types';\nimport { SearchRequest as BetaSearchRequest } from '@microsoft/microsoft-graph-types-beta';\nimport {\n  getIsResponseCacheEnabled,\n  getNameFromUrl,\n  getRelativeDisplayDate,\n  getResponseInvalidationTime,\n  sanitizeSummary,\n  trimFileExtension\n} from '../../../utils/Utils';\nimport { getSvg, SvgIcon } from '../../../utils/SvgHelper';\nimport { fluentSkeleton, fluentButton, fluentTooltip, fluentDivider } from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../../utils/FluentComponents';\nimport { CacheResponse } from '../../CacheResponse';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtFileComponent } from '../../mgt-file/mgt-file';\nimport { registerMgtPersonComponent } from '../../mgt-person/mgt-person';\n\n/**\n * Object representing a thumbnail\n */\ninterface Thumbnail {\n  /**\n   * The url of the Thumbnail\n   */\n  url?: string;\n}\n\n/**\n * Object representing a Binary Thumbnail\n */\ninterface BinaryThumbnail {\n  /**\n   * The url of the Thumbnail\n   */\n  url?: string;\n\n  /**\n   * The web Url of the Thumbnail\n   */\n  thumbnailWebUrl?: string;\n}\n\n/**\n * Object representing a Search Answer\n */\ninterface Answer {\n  '@odata.type': string;\n  displayName?: string;\n  description?: string;\n  webUrl?: string;\n}\n\n/**\n * Object representing a search resource supporting thumbnails\n */\ninterface ThumbnailResource {\n  thumbnail: Thumbnail;\n}\n\ninterface UserResource {\n  lastModifiedBy?: {\n    user?: {\n      email?: string;\n    };\n  };\n  userPrincipalName?: string;\n}\n\n/**\n * Object representing a Search Resource\n */\ntype SearchResource = Partial<\n  DriveItem & Site & List & Message & ListItem & Drive & DirectoryObject & Answer & ThumbnailResource & UserResource\n>;\n\n/**\n * Object representing a full Search Response\n */\ntype SearchResponseCollection = CollectionResponse<SearchResponse>;\n\nexport const registerMgtSearchResultsComponent = () => {\n  registerFluentComponents(fluentSkeleton, fluentButton, fluentTooltip, fluentDivider);\n\n  registerMgtFileComponent();\n  registerMgtPersonComponent();\n  registerComponent('search-results', MgtSearchResults);\n};\n\n/**\n * **Preview component** Custom element for making Microsoft Graph get queries.\n * Component may change before general availability release.\n *\n * @fires {CustomEvent<DataChangedDetail>} dataChange - Fired when data changes\n *\n * @cssprop --answer-border-radius - {Length} Border radius of an answer\n * @cssprop --answer-box-shadow - {Length} Box shadow of an answer\n * @cssprop --answer-border - {Length} Border of an answer\n * @cssprop --answer-padding - {Length} Padding of an answer\n *\n * @class mgt-search-results\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtSearchResults extends MgtTemplatedComponent {\n  /**\n   * Default page size is 10\n   */\n  private _size = 10;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Gets all the localization strings for the component\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  private _queryString: string;\n\n  /**\n   * The query to send to Microsoft Search\n   *\n   * @type {string}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'query-string',\n    type: String\n  })\n  public get queryString(): string {\n    return this._queryString;\n  }\n  public set queryString(value: string) {\n    if (this._queryString !== value) {\n      this._queryString = value;\n      this._currentPage = 1;\n      this.setLoadingState(true);\n      void this.requestStateUpdate(true);\n    }\n  }\n\n  /**\n   * Query template to use in complex search scenarios\n   * Query Templates are currently supported only on the beta endpoint\n   */\n  @property({\n    attribute: 'query-template',\n    type: String\n  })\n  public queryTemplate: string;\n\n  /**\n   * One or more types of resources expected in the response.\n   * Possible values are: list, site, listItem, message, event,\n   * drive, driveItem, externalItem.\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'entity-types',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public entityTypes: string[] = ['driveItem', 'listItem', 'site'];\n\n  /**\n   * The scopes to request\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'scopes',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public scopes: string[] = [];\n\n  /**\n   * Content sources to use with External Items\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'content-sources',\n    converter: (value, _type) => {\n      return value ? value.toLowerCase().split(',') : null;\n    }\n  })\n  public contentSources: string[] = [];\n\n  /**\n   * Api version to use for request\n   *\n   * @type {string}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'version',\n    reflect: true,\n    type: String\n  })\n  public version = 'v1.0';\n\n  /**\n   * Specifies the offset for the search results.\n   * Offset 0 returns the very first result.\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  public get from(): number {\n    return (this.currentPage - 1) * this.size;\n  }\n\n  /**\n   * The size of the page to be retrieved.\n   * The maximum value is 1000.\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'size',\n    reflect: true,\n    type: Number\n  })\n  public get size(): number {\n    return this._size;\n  }\n  public set size(value) {\n    if (value > this.maxPageSize) {\n      this._size = this.maxPageSize;\n    } else {\n      this._size = value;\n    }\n  }\n\n  /**\n   * The maximum number of pages to be clickable\n   * in the paging control\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'paging-max',\n    reflect: true,\n    type: Number\n  })\n  public pagingMax = 7;\n\n  /**\n   * Sets whether the result thumbnail should be fetched\n   * from the Microsoft Graph\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'fetch-thumbnail',\n    type: Boolean\n  })\n  public fetchThumbnail: boolean;\n\n  /**\n   * Contains the fields to be returned for each resource\n   *\n   * @type {string[]}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'fields',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public fields: string[];\n\n  /**\n   * This triggers hybrid sort for messages : the first 3 messages are the most relevant.\n   * This property is only applicable to entityType=message\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'enable-top-results',\n    reflect: true,\n    type: Boolean\n  })\n  public enableTopResults = false;\n\n  /**\n   * Enables cache on the response from the specified resource\n   * default = false\n   *\n   * @type {boolean}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'cache-enabled',\n    reflect: true,\n    type: Boolean\n  })\n  public cacheEnabled = false;\n\n  /**\n   * Invalidation period of the cache for the responses in milliseconds\n   *\n   * @type {number}\n   * @memberof MgtSearchResults\n   */\n  @property({\n    attribute: 'cache-invalidation-period',\n    reflect: true,\n    type: Number\n  })\n  public cacheInvalidationPeriod = 30000;\n\n  /**\n   * Gets or sets the response of the request\n   *\n   * @type any\n   * @memberof MgtSearchResults\n   */\n  @state() private response: SearchResponseCollection;\n\n  private isRefreshing = false;\n  private get searchEndpoint() {\n    return '/search/query';\n  }\n  private get maxPageSize() {\n    return 1000;\n  }\n  private readonly defaultFields: string[] = [\n    'webUrl',\n    'lastModifiedBy',\n    'lastModifiedDateTime',\n    'summary',\n    'displayName',\n    'name'\n  ];\n  private _currentPage = 1;\n  @state()\n  public get currentPage(): number {\n    return this._currentPage;\n  }\n  public set currentPage(value: number) {\n    if (this._currentPage !== value) {\n      this._currentPage = value;\n      void this.requestStateUpdate(true);\n    }\n  }\n\n  constructor() {\n    super();\n    warn(\n      '<mgt-search-results> is a preview component and may change prior to becoming generally available. See more information https://aka.ms/mgt/preview-components'\n    );\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {string} name\n   * @param {string} oldValue\n   * @param {string} newValue\n   * @memberof MgtSearchResults\n   */\n  public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Refresh the data\n   *\n   * @param {boolean} [hardRefresh=false]\n   * if false (default), the component will only update if the data changed\n   * if true, the data will be first cleared and reloaded completely\n   * @memberof MgtSearchResults\n   */\n  public refresh(hardRefresh = false) {\n    this.isRefreshing = true;\n    if (hardRefresh) {\n      this.clearState();\n    }\n    void this.requestStateUpdate(hardRefresh);\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtSearchResults\n   */\n  protected clearState(): void {\n    this.response = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult {\n    let renderedTemplate: TemplateResult = null;\n    let headerTemplate: TemplateResult = null;\n    let footerTemplate: TemplateResult = null;\n\n    if (this.hasTemplate('header')) {\n      headerTemplate = this.renderTemplate('header', this.response);\n    }\n\n    footerTemplate = this.renderFooter(this.response?.value[0]?.hitsContainers[0]);\n\n    if (this.isLoadingState) {\n      renderedTemplate = this.renderLoading();\n    } else if (this.error) {\n      renderedTemplate = this.renderError();\n    } else if (this.response && this.hasTemplate('default')) {\n      renderedTemplate = this.renderTemplate('default', this.response) || html``;\n    } else if (this.response?.value[0]?.hitsContainers[0]) {\n      renderedTemplate = html`${this.response?.value[0]?.hitsContainers[0]?.hits?.map(result =>\n        this.renderResult(result)\n      )}`;\n    } else if (this.hasTemplate('no-data')) {\n      renderedTemplate = this.renderTemplate('no-data', null);\n    } else {\n      renderedTemplate = html``;\n    }\n\n    return html`\n      ${headerTemplate}\n      <div class=\"search-results\">\n        ${renderedTemplate}\n      </div>\n      ${footerTemplate}`;\n  }\n\n  /**\n   * load state into the component.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected async loadState() {\n    const provider = Providers.globalProvider;\n\n    this.error = null;\n\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    if (this.queryString) {\n      try {\n        const requestOptions = this.getRequestOptions();\n\n        let cache: CacheStore<CacheResponse>;\n        const key = JSON.stringify({\n          endpoint: `${this.version}${this.searchEndpoint}`,\n          requestOptions\n        });\n        let response: SearchResponseCollection = null;\n\n        if (this.shouldRetrieveCache()) {\n          cache = CacheService.getCache<CacheResponse>(schemas.search, schemas.search.stores.responses);\n          const result: CacheResponse = getIsResponseCacheEnabled() ? await cache.getValue(key) : null;\n          if (result && getResponseInvalidationTime(this.cacheInvalidationPeriod) > Date.now() - result.timeCached) {\n            response = JSON.parse(result.response) as SearchResponseCollection;\n          }\n        }\n\n        if (!response) {\n          const graph = provider.graph.forComponent(this);\n          let request = graph.api(this.searchEndpoint).version(this.version);\n\n          if (this.scopes?.length) {\n            request = request.middlewareOptions(prepScopes(...this.scopes));\n          }\n\n          response = (await request.post({ requests: [requestOptions] })) as SearchResponseCollection;\n\n          if (this.fetchThumbnail) {\n            const thumbnailBatch = graph.createBatch<BinaryThumbnail>();\n            const thumbnailBatchBeta = BetaGraph.fromGraph(graph).createBatch<BinaryThumbnail>();\n\n            const hits =\n              response.value?.length && response.value[0].hitsContainers?.length\n                ? response.value[0].hitsContainers[0]?.hits ?? []\n                : [];\n            for (const element of hits) {\n              const resource = element.resource as SearchResource;\n              if (\n                (resource.size > 0 || resource.webUrl?.endsWith('.aspx')) &&\n                (resource['@odata.type'] === '#microsoft.graph.driveItem' ||\n                  resource['@odata.type'] === '#microsoft.graph.listItem')\n              ) {\n                if (resource['@odata.type'] === '#microsoft.graph.listItem') {\n                  thumbnailBatchBeta.get(\n                    element.hitId.toString(),\n                    `/sites/${resource.parentReference.siteId}/pages/${resource.id}`\n                  );\n                } else {\n                  thumbnailBatch.get(\n                    element.hitId.toString(),\n                    `/drives/${resource.parentReference.driveId}/items/${resource.id}/thumbnails/0/medium`\n                  );\n                }\n              }\n            }\n\n            /**\n             * Based on the batch response, augment the search result resource with the thumbnail url\n             *\n             * @param thumbnailResponse\n             */\n            const augmentResponse = (thumbnailResponse: Map<string, BatchResponse<BinaryThumbnail>>) => {\n              if (thumbnailResponse && thumbnailResponse.size > 0) {\n                for (const [k, value] of thumbnailResponse) {\n                  const result: SearchHit = response.value[0].hitsContainers[0].hits[k] as SearchHit;\n                  const thumbnail: Thumbnail =\n                    result.resource['@odata.type'] === '#microsoft.graph.listItem'\n                      ? { url: value.content.thumbnailWebUrl }\n                      : { url: value.content.url };\n                  (result.resource as SearchResource).thumbnail = thumbnail;\n                }\n              }\n            };\n\n            try {\n              augmentResponse(await thumbnailBatch.executeAll());\n              augmentResponse(await thumbnailBatchBeta.executeAll());\n            } catch {\n              // no-op\n            }\n          }\n\n          if (this.shouldUpdateCache() && response) {\n            cache = CacheService.getCache<CacheResponse>(schemas.search, schemas.search.stores.responses);\n            await cache.putValue(key, { response: JSON.stringify(response) });\n          }\n        }\n\n        if (!equals(this.response, response)) {\n          this.response = response;\n        }\n      } catch (e: unknown) {\n        this.error = e as Error;\n      }\n\n      if (this.response) {\n        this.error = null;\n      }\n    } else {\n      this.response = null;\n    }\n    this.isRefreshing = false;\n    this.fireCustomEvent('dataChange', { response: this.response, error: this.error as Error });\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected renderLoading(): TemplateResult {\n    return (\n      this.renderTemplate('loading', null) ||\n      // creates an array of n items where n is the current max number of results, this builds a shimmer for that many results\n      html`\n        ${[...Array<number>(this.size)].map(() => {\n          return html`\n            <div class=\"search-result\">\n              <div class=\"search-result-grid\">\n                <div class=\"search-result-icon\">\n                  <fluent-skeleton class=\"search-result-icon__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                </div>\n                <div class=\"searc-result-content\">\n                  <div class=\"search-result-name\">\n                    <fluent-skeleton class=\"search-result-name__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                  </div>\n                  <div class=\"search-result-info\">\n                    <div class=\"search-result-author\">\n                      <fluent-skeleton class=\"search-result-author__shimmer\" shape=\"circle\" shimmer></fluent-skeleton>\n                    </div>\n                    <div class=\"search-result-date\">\n                      <fluent-skeleton class=\"search-result-date__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                    </div>\n                  </div>\n                  <fluent-skeleton class=\"search-result-content__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                  <fluent-skeleton class=\"search-result-content__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                </div>\n                ${\n                  this.fetchThumbnail &&\n                  html`\n                    <div class=\"search-result-thumbnail\">\n                      <fluent-skeleton class=\"search-result-thumbnail__shimmer\" shape=\"rect\" shimmer></fluent-skeleton>\n                    </div>\n                  `\n                }\n              </div>\n              <fluent-divider></fluent-divider>\n            </div>\n          `;\n        })}\n       `\n    );\n  }\n\n  /**\n   * Render the result item.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtSearchResults\n   */\n  protected renderResult(result: SearchHit): TemplateResult {\n    const type = this.getResourceType(result.resource);\n    if (this.hasTemplate(`result-${type}`)) {\n      return this.renderTemplate(`result-${type}`, result, result.hitId);\n    } else {\n      switch (result.resource['@odata.type']) {\n        case '#microsoft.graph.driveItem':\n          return this.renderDriveItem(result);\n        case '#microsoft.graph.site':\n          return this.renderSite(result);\n        case '#microsoft.graph.person':\n          return this.renderPerson(result);\n        case '#microsoft.graph.drive':\n        case '#microsoft.graph.list':\n          return this.renderList(result);\n        case '#microsoft.graph.listItem':\n          return this.renderListItem(result);\n        case '#microsoft.graph.search.bookmark':\n          return this.renderBookmark(result);\n        case '#microsoft.graph.search.acronym':\n          return this.renderAcronym(result);\n        case '#microsoft.graph.search.qna':\n          return this.renderQnA(result);\n        default:\n          return this.renderDefault(result);\n      }\n    }\n  }\n\n  /**\n   * Renders the footer with pages if required\n   *\n   * @param hitsContainer Search results\n   */\n  private renderFooter(hitsContainer: SearchHitsContainer) {\n    if (this.pagingRequired(hitsContainer)) {\n      const pages = this.getActivePages(hitsContainer.total);\n\n      return html`\n        <div class=\"search-results-pages\">\n          ${this.renderPreviousPage()}\n          ${this.renderFirstPage(pages)}\n          ${this.renderAllPages(pages)}\n          ${this.renderNextPage()}\n        </div>\n      `;\n    }\n  }\n\n  /**\n   * Validates if paging is required based on the provided results\n   *\n   * @param hitsContainer\n   */\n  private pagingRequired(hitsContainer: SearchHitsContainer) {\n    return hitsContainer?.moreResultsAvailable || this.currentPage * this.size < hitsContainer?.total;\n  }\n\n  /**\n   * Gets a list of active pages to render for paging purposes\n   *\n   * @param totalResults Total number of results of the search query\n   */\n  private getActivePages(totalResults: number) {\n    const getFirstPage = () => {\n      const medianPage = this.currentPage - Math.floor(this.pagingMax / 2) - 1;\n\n      if (medianPage >= Math.floor(this.pagingMax / 2)) {\n        return medianPage;\n      } else {\n        return 0;\n      }\n    };\n\n    const pages: number[] = [];\n    const firstPage = getFirstPage();\n\n    if (firstPage + 1 > this.pagingMax - this.currentPage || this.pagingMax === this.currentPage) {\n      for (\n        let i = firstPage + 1;\n        i < Math.ceil(totalResults / this.size) &&\n        i < this.pagingMax + (this.currentPage - 1) &&\n        pages.length < this.pagingMax - 2;\n        ++i\n      ) {\n        pages.push(i + 1);\n      }\n    } else {\n      for (let i = firstPage; i < this.pagingMax; ++i) {\n        pages.push(i + 1);\n      }\n    }\n\n    return pages;\n  }\n\n  /**\n   * Renders all sequential pages buttons\n   *\n   * @param pages\n   */\n  private renderAllPages(pages: number[]) {\n    return html`\n      ${pages.map(\n        page =>\n          html`\n            <fluent-button\n              title=\"${strings.page} ${page}\"\n              appearance=\"stealth\"\n              class=\"${page === this.currentPage ? 'search-results-page-active' : 'search-results-page'}\"\n              @click=\"${() => this.onPageClick(page)}\">\n                ${page}\n            </fluent-button>`\n      )}`;\n  }\n\n  /**\n   * Renders the \"First page\" button\n   *\n   * @param pages\n   */\n  private renderFirstPage(pages: number[]) {\n    return html`\n      ${\n        pages.some(page => page === 1)\n          ? nothing\n          : html`\n              <fluent-button\n                 title=\"${strings.page} 1\"\n                 appearance=\"stealth\"\n                 class=\"search-results-page\"\n                 @click=\"${this.onFirstPageClick}\">\n                 1\n               </fluent-button>`\n          ? html`\n              <fluent-button\n                id=\"page-back-dot\"\n                appearance=\"stealth\"\n                class=\"search-results-page\"\n                title=\"${this.getDotButtonTitle()}\"\n                @click=\"${() => this.onPageClick(this.currentPage - Math.ceil(this.pagingMax / 2))}\"\n              >\n                ...\n              </fluent-button>`\n          : nothing\n      }`;\n  }\n\n  /**\n   * Constructs the \"dot dot dot\" button title\n   */\n  private getDotButtonTitle() {\n    return `${strings.back} ${Math.ceil(this.pagingMax / 2)} ${strings.pages}`;\n  }\n\n  /**\n   * Renders the \"Previous page\" button\n   */\n  private renderPreviousPage() {\n    return this.currentPage > 1\n      ? html`\n          <fluent-button\n            appearance=\"stealth\"\n            class=\"search-results-page\"\n            title=\"${strings.back}\"\n            @click=\"${this.onPageBackClick}\">\n              ${getSvg(SvgIcon.ChevronLeft)}\n            </fluent-button>`\n      : nothing;\n  }\n\n  /**\n   * Renders the \"Next page\" button\n   */\n  private renderNextPage() {\n    return !this.isLastPage()\n      ? html`\n          <fluent-button\n            appearance=\"stealth\"\n            class=\"search-results-page\"\n            title=\"${strings.next}\"\n            aria-label=\"${strings.next}\"\n            @click=\"${this.onPageNextClick}\">\n              ${getSvg(SvgIcon.ChevronRight)}\n            </fluent-button>`\n      : nothing;\n  }\n\n  /**\n   * Triggers a specific page click\n   *\n   * @param pageNumber\n   */\n  private onPageClick(pageNumber: number) {\n    this.currentPage = pageNumber;\n    this.scrollToFirstResult();\n  }\n\n  /**\n   * Triggers a first page click\n   *\n   */\n  private readonly onFirstPageClick = () => {\n    this.currentPage = 1;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Triggers a previous page click\n   */\n  private readonly onPageBackClick = () => {\n    this.currentPage--;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Triggers a next page click\n   */\n  private readonly onPageNextClick = () => {\n    this.currentPage++;\n    this.scrollToFirstResult();\n  };\n\n  /**\n   * Validates if the current page is the last page of the collection\n   */\n  private isLastPage() {\n    return this.currentPage === Math.ceil(this.response.value[0].hitsContainers[0].total / this.size);\n  }\n\n  /**\n   * Scroll to the top of the search results\n   */\n  private scrollToFirstResult() {\n    const target = this.renderRoot.querySelector('.search-results');\n    target.scrollIntoView({\n      block: 'start',\n      behavior: 'smooth'\n    });\n  }\n\n  /**\n   * Gets the resource type (entity) of a search result\n   *\n   * @param resource\n   */\n  private getResourceType(resource: SearchResource) {\n    return resource['@odata.type'].split('.').pop();\n  }\n\n  /**\n   * Renders a driveItem entity\n   *\n   * @param result\n   */\n  private renderDriveItem(result: SearchHit) {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          <mgt-file\n            .fileDetails=\"${result.resource}\"\n            view=\"image\"\n            class=\"file-icon\">\n          </mgt-file>\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">${trimFileExtension(resource.name)}</a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-author\">\n              <mgt-person\n                person-query=${resource.lastModifiedBy.user.email}\n                view=\"oneLine\"\n                person-card=\"hover\"\n                show-presence=\"true\">\n              </mgt-person>\n            </div>\n            <div class=\"search-result-date\">\n              &nbsp; ${strings.modified} ${getRelativeDisplayDate(new Date(resource.lastModifiedDateTime))}\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n        ${\n          resource.thumbnail?.url &&\n          html`\n          <div class=\"search-result-thumbnail\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\"><img alt=\"${resource.name}\" src=\"${resource.thumbnail?.url}\" /></a>\n          </div>`\n        }\n\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a site entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderSite(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return html`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${this.getResourceIcon(resource)}\n        </div>\n        <div class=\"searc-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\">${resource.displayName}</a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-url\">\n              <a href=\"${resource.webUrl}\" target=\"_blank\">${resource.webUrl}</a>\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a list entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderList(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          <mgt-file\n            .fileDetails=\"${result.resource}\"\n            view=\"image\">\n          </mgt-file>\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">\n              ${trimFileExtension(resource.name || getNameFromUrl(resource.webUrl))}\n            </a>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a listItem entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderListItem(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${resource.webUrl.endsWith('.aspx') ? getSvg(SvgIcon.News) : getSvg(SvgIcon.FileOuter)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${resource.webUrl}?Web=1\" target=\"_blank\">\n              ${trimFileExtension(resource.name || getNameFromUrl(resource.webUrl))}\n            </a>\n          </div>\n          <div class=\"search-result-info\">\n            <div class=\"search-result-author\">\n              <mgt-person\n                person-query=${resource.lastModifiedBy.user.email}\n                view=\"oneLine\"\n                person-card=\"hover\"\n                show-presence=\"true\">\n              </mgt-person>\n            </div>\n            <div class=\"search-result-date\">\n              &nbsp; ${strings.modified} ${getRelativeDisplayDate(new Date(resource.lastModifiedDateTime))}\n            </div>\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${sanitizeSummary(result.summary)}\"></div>\n        </div>\n        ${\n          resource.thumbnail?.url &&\n          html`\n          <div class=\"search-result-thumbnail\">\n            <a href=\"${resource.webUrl}\" target=\"_blank\"><img alt=\"${trimFileExtension(\n              resource.name || getNameFromUrl(resource.webUrl)\n            )}\" src=\"${resource.thumbnail?.url || nothing}\" /></a>\n          </div>`\n        }\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a person entity\n   *\n   * @param result\n   * @returns\n   */\n  private renderPerson(result: SearchHit): HTMLTemplateResult {\n    const resource = result.resource as SearchResource;\n    return mgtHtml`\n      <div class=\"search-result\">\n        <mgt-person\n          view=\"fourLines\"\n          person-query=${resource.userPrincipalName}\n          person-card=\"hover\"\n          show-presence=\"true\">\n        </mgt-person>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders a bookmark entity\n   *\n   * @param result\n   */\n  private renderBookmark(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.DoubleBookmark);\n  }\n\n  /**\n   * Renders an acronym entity\n   *\n   * @param result\n   */\n  private renderAcronym(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.BookOpen);\n  }\n\n  /**\n   * Renders a qna entity\n   *\n   * @param result\n   */\n  private renderQnA(result: SearchHit) {\n    return this.renderAnswer(result, SvgIcon.BookQuestion);\n  }\n\n  /**\n   * Renders an answer entity\n   *\n   * @param result\n   */\n  private renderAnswer(result: SearchHit, icon: SvgIcon) {\n    const resource = result.resource as SearchResource;\n    return html`\n      <div class=\"search-result-grid search-result-answer\">\n        <div class=\"search-result-icon\">\n          ${getSvg(icon)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            <a href=\"${this.getResourceUrl(resource)}?Web=1\" target=\"_blank\">${resource.displayName}</a>\n          </div>\n          <div class=\"search-result-summary\">${resource.description}</div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Renders any entity\n   *\n   * @param result\n   */\n  private renderDefault(result: SearchHit) {\n    const resource = result.resource as SearchResource;\n    const resourceUrl = this.getResourceUrl(resource);\n    return html`\n      <div class=\"search-result-grid\">\n        <div class=\"search-result-icon\">\n          ${this.getResourceIcon(resource)}\n        </div>\n        <div class=\"search-result-content\">\n          <div class=\"search-result-name\">\n            ${\n              resourceUrl\n                ? html`\n                  <a href=\"${resourceUrl}?Web=1\" target=\"_blank\">${this.getResourceName(resource)}</a>\n                `\n                : html`\n                  ${this.getResourceName(resource)}\n                `\n            }\n          </div>\n          <div class=\"search-result-summary\" .innerHTML=\"${this.getResultSummary(result)}\"></div>\n        </div>\n      </div>\n      <fluent-divider></fluent-divider>\n    `;\n  }\n\n  /**\n   * Gets default resource URLs\n   *\n   * @param resource\n   */\n  private getResourceUrl(resource: SearchResource) {\n    return resource.webUrl || /* resource.url ||*/ resource.webLink || null;\n  }\n\n  /**\n   * Gets default resource Names\n   *\n   * @param resource\n   */\n  private getResourceName(resource: SearchResource) {\n    return resource.displayName || resource.subject || trimFileExtension(resource.name);\n  }\n\n  /**\n   * Gets default result summary\n   *\n   * @param resource\n   */\n  private getResultSummary(result: SearchHit) {\n    return sanitizeSummary(result.summary || (result.resource as SearchResource)?.description || null);\n  }\n\n  /**\n   * Gets default resource icon\n   *\n   * @param resource\n   */\n  private getResourceIcon(resource: SearchResource) {\n    switch (resource['@odata.type']) {\n      case '#microsoft.graph.site':\n        return getSvg(SvgIcon.Globe);\n      case '#microsoft.graph.message':\n        return getSvg(SvgIcon.Email);\n      case '#microsoft.graph.event':\n        return getSvg(SvgIcon.Event);\n      case 'microsoft.graph.chatMessage':\n        return getSvg(SvgIcon.SmallChat);\n      default:\n        return getSvg(SvgIcon.FileOuter);\n    }\n  }\n\n  /**\n   * Validates if cache should be retrieved\n   *\n   * @returns\n   */\n  private shouldRetrieveCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled && !this.isRefreshing;\n  }\n\n  /**\n   * Validates if cache should be updated\n   *\n   * @returns\n   */\n  private shouldUpdateCache(): boolean {\n    return getIsResponseCacheEnabled() && this.cacheEnabled;\n  }\n\n  /**\n   * Builds the appropriate RequestOption for the search query\n   *\n   * @returns\n   */\n  private getRequestOptions(): SearchRequest | BetaSearchRequest {\n    const requestOptions: SearchRequest = {\n      entityTypes: this.entityTypes as EntityType[],\n      query: {\n        queryString: this.queryString\n      },\n      from: this.from ? this.from : undefined,\n      size: this.size ? this.size : undefined,\n      fields: this.getFields(),\n      enableTopResults: this.enableTopResults ? this.enableTopResults : undefined\n    };\n\n    if (this.entityTypes.includes('externalItem')) {\n      requestOptions.contentSources = this.contentSources;\n    }\n\n    if (this.version === 'beta') {\n      (requestOptions as BetaSearchRequest).query.queryTemplate = this.queryTemplate ? this.queryTemplate : undefined;\n    }\n\n    return requestOptions;\n  }\n\n  /**\n   * Gets the fields and default fields for default render methods\n   *\n   * @returns\n   */\n  private getFields(): string[] {\n    if (this.fields) {\n      return this.defaultFields.concat(this.fields);\n    }\n\n    return undefined;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { DataChangedDetail } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtSearchResultsComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type SearchResultsProps = {\n\tqueryString?: string;\n\tqueryTemplate?: string;\n\tentityTypes?: string[];\n\tscopes?: string[];\n\tcontentSources?: string[];\n\tversion?: string;\n\tfrom?: number;\n\tsize?: number;\n\tpagingMax?: number;\n\tfetchThumbnail?: boolean;\n\tfields?: string[];\n\tenableTopResults?: boolean;\n\tcacheEnabled?: boolean;\n\tcacheInvalidationPeriod?: number;\n\tcurrentPage?: number;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\tdataChange?: (e: CustomEvent<DataChangedDetail>) => void;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const SearchResults = wrapMgt<SearchResultsProps>('search-results', registerMgtSearchResultsComponent);\n\n","import * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\nimport { MgtTemplateProps, SearchResults } from '@microsoft/mgt-react';\n\nexport const AllResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      {props.searchTerm && (\n        <>\n          {props.searchTerm !== '*' && (\n            <SearchResults\n              entityTypes={['bookmark']}\n              queryString={props.searchTerm}\n              version=\"beta\"\n              size={1}\n              scopes={['Bookmark.Read.All']}\n            >\n              <NoDataTemplate template=\"no-data\"></NoDataTemplate>\n            </SearchResults>\n          )}\n          <SearchResults\n            entityTypes={['driveItem', 'listItem', 'site']}\n            queryString={props.searchTerm}\n            scopes={['Files.Read.All', 'Sites.Read.All']}\n            fetchThumbnail={true}\n          ></SearchResults>\n        </>\n      )}\n    </>\n  );\n};\n\nconst NoDataTemplate = (props: MgtTemplateProps) => {\n  return <></>;\n};\n","import { SearchResults } from '@microsoft/mgt-react';\nimport * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\n\nexport const PeopleResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      <SearchResults entityTypes={['people']} size={20} queryString={props.searchTerm} version={'beta'}></SearchResults>\n    </>\n  );\n};\n","import { SearchResults } from '@microsoft/mgt-react';\nimport * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\n\nexport const ExternalItemsResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      {props.searchTerm && (\n        <SearchResults\n          entityTypes={['externalItem']}\n          contentSources={['/external/connections/contosoBlogPosts']}\n          queryString={props.searchTerm}\n          scopes={['ExternalItem.Read.All']}\n          version=\"beta\"\n        ></SearchResults>\n      )}\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/consistent-type-definitions */\nimport { OfficeGraphInsightString,ViewType } from '@microsoft/mgt-components/dist/es6/exports';\nimport { registerMgtFileComponent } from '@microsoft/mgt-components/dist/es6/components/components';\nimport { TemplateContext,ComponentMediaQuery,TemplateRenderedData } from '@microsoft/mgt-element';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraph from '@microsoft/microsoft-graph-types';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as MicrosoftGraphBeta from '@microsoft/microsoft-graph-types-beta';\nimport {wrapMgt} from '../Mgt';\n\nexport type FileProps = {\n\tfileQuery?: string;\n\tsiteId?: string;\n\tdriveId?: string;\n\tgroupId?: string;\n\tlistId?: string;\n\tuserId?: string;\n\titemId?: string;\n\titemPath?: string;\n\tinsightType?: OfficeGraphInsightString;\n\tinsightId?: string;\n\tfileDetails?: MicrosoftGraph.DriveItem;\n\tfileIcon?: string;\n\tdriveItem?: MicrosoftGraph.DriveItem;\n\tline1Property?: string;\n\tline2Property?: string;\n\tline3Property?: string;\n\tview?: ViewType;\n\ttemplateContext?: TemplateContext;\n\tmediaQuery?: ComponentMediaQuery;\n\ttemplateRendered?: (e: CustomEvent<TemplateRenderedData>) => void;\n}\n\nexport const File = wrapMgt<FileProps>('file', registerMgtFileComponent);\n\n","import { SearchResults } from '@microsoft/mgt-react';\nimport * as React from 'react';\nimport { IResultsProps } from './IResultsProps';\nimport { MgtTemplateProps, Person, File, PersonCardInteraction, ViewType } from '@microsoft/mgt-react';\nimport {\n  DataGrid,\n  DataGridBody,\n  DataGridCell,\n  DataGridHeader,\n  DataGridHeaderCell,\n  DataGridRow,\n  SkeletonItem,\n  TableCellLayout,\n  TableColumnDefinition,\n  createTableColumn,\n  makeStyles,\n  shorthands,\n  tokens\n} from '@fluentui/react-components';\nimport { SlideSearchRegular } from '@fluentui/react-icons';\n\nconst useStyles = makeStyles({\n  container: {\n    ...shorthands.gap('16px'),\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  card: {\n    width: '300px',\n    height: 'fit-content',\n    maxWidth: '100%'\n  },\n  caption: {\n    color: tokens.colorNeutralForeground3\n  },\n  noDataSearchTerm: {\n    fontWeight: tokens.fontWeightSemibold\n  },\n  emptyContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    height: 'calc(100vh - 300px)'\n  },\n  fileContainer: {\n    display: 'flex'\n  },\n  fileTitle: {\n    paddingLeft: '10px',\n    alignSelf: 'center'\n  },\n  noDataMessage: {\n    paddingLeft: '10px'\n  },\n  noDataIcon: {\n    fontSize: '128px'\n  },\n  row: {\n    cursor: 'pointer'\n  }\n});\n\nconst pageSize = 30;\n\nexport const FilesResults: React.FunctionComponent<IResultsProps> = (props: IResultsProps) => {\n  return (\n    <>\n      {props.searchTerm && (\n        <SearchResults\n          entityTypes={['driveItem']}\n          queryString={props.searchTerm}\n          fetchThumbnail={true}\n          queryTemplate=\"({searchTerms}) ContentTypeId:0x0101*\"\n          version=\"beta\"\n          fields={['createdBy', 'lastModifiedDateTime', 'Title', 'DefaultEncodingURL']}\n          size={pageSize}\n          cacheEnabled={true}\n        >\n          <FileTemplate template=\"default\"></FileTemplate>\n          <FileTemplate template=\"loading\"></FileTemplate>\n          <FileNoDataTemplate template=\"no-data\"></FileNoDataTemplate>\n        </SearchResults>\n      )}\n    </>\n  );\n};\n\nconst getColumns = (shimmered: boolean, styles): TableColumnDefinition<any>[] => {\n  const columns: TableColumnDefinition<any>[] = [\n    createTableColumn<any>({\n      columnId: 'name',\n      renderHeaderCell: () => {\n        return 'Name';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} />\n            ) : (\n              <div className={styles.fileContainer}>\n                <File fileDetails={item.resource} view={ViewType.image} />\n                <span className={styles.fileTitle}>{item.resource.listItem.fields.title}</span>\n              </div>\n            )}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'modified',\n      renderHeaderCell: () => {\n        return 'Modified';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <SkeletonItem shape=\"rectangle\" style={{ width: '120px' }} />\n            ) : (\n              getRelativeDisplayDate(new Date(item.resource.lastModifiedDateTime))\n            )}\n          </TableCellLayout>\n        );\n      }\n    }),\n    createTableColumn<any>({\n      columnId: 'owner',\n      renderHeaderCell: () => {\n        return 'Owner';\n      },\n      renderCell: item => {\n        return (\n          <TableCellLayout>\n            {shimmered ? (\n              <div\n                style={{\n                  display: 'grid',\n                  alignItems: 'center',\n                  position: 'relative',\n                  gridTemplateColumns: 'min-content 80%',\n                  gap: '10px'\n                }}\n              >\n                <SkeletonItem shape=\"circle\" size={32} />\n                <SkeletonItem style={{ width: '120px' }} />\n              </div>\n            ) : (\n              <Person\n                personQuery={item.resource.createdBy.user.email}\n                view={ViewType.oneline}\n                personCardInteraction={PersonCardInteraction.hover}\n              />\n            )}\n          </TableCellLayout>\n        );\n      }\n    })\n  ];\n\n  return columns;\n};\n\nconst FileTemplate = (props: MgtTemplateProps) => {\n  const styles = useStyles();\n  const [driveItems] = React.useState<any>(props.dataContext.value?.[0]?.hitsContainers[0]?.hits);\n\n  const onRowClick = (item: any) => {\n    const url = new URL(item.resource.listItem.fields.defaultEncodingURL);\n    url.searchParams.append('Web', '1');\n    window.open(url.toString(), '_blank');\n  };\n\n  return (\n    <div>\n      <DataGrid\n        columns={getColumns(props.template === 'loading', styles)}\n        items={props.template === 'loading' ? [...Array<number>(pageSize)] : driveItems}\n      >\n        <DataGridHeader>\n          <DataGridRow>\n            {({ renderHeaderCell }) => <DataGridHeaderCell>{renderHeaderCell()}</DataGridHeaderCell>}\n          </DataGridRow>\n        </DataGridHeader>\n        <DataGridBody<any>>\n          {({ item, rowId }) => (\n            <DataGridRow<any> key={rowId} className={styles.row} onClick={() => onRowClick(item)}>\n              {({ renderCell }) => <DataGridCell>{renderCell(item)}</DataGridCell>}\n            </DataGridRow>\n          )}\n        </DataGridBody>\n      </DataGrid>\n    </div>\n  );\n};\n\nconst FileNoDataTemplate = (props: MgtTemplateProps) => {\n  const styles = useStyles();\n  const [searchTerms] = React.useState<string[]>(props.dataContext.value[0]?.searchTerms);\n\n  return (\n    <div className={styles.emptyContainer}>\n      <div>\n        <SlideSearchRegular className={styles.noDataIcon} />\n      </div>\n      <div className={styles.noDataMessage}>\n        We couldn't find any results for <span className={styles.noDataSearchTerm}>{searchTerms.join(' ')}</span>\n      </div>\n    </div>\n  );\n};\n\nconst getRelativeDisplayDate = (date: Date): string => {\n  const now = new Date();\n\n  // Today -> 5:23 PM\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  if (date >= today) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  }\n\n  // This week -> Sun 3:04 PM\n  const sunday = new Date(today);\n  sunday.setDate(now.getDate() - now.getDay());\n  if (date >= sunday) {\n    return date.toLocaleString('default', {\n      hour: 'numeric',\n      minute: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // Last two week -> Sun 8/2\n  const lastTwoWeeks = new Date(sunday);\n  lastTwoWeeks.setDate(sunday.getDate() - 7);\n  if (date >= lastTwoWeeks) {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'numeric',\n      weekday: 'short'\n    });\n  }\n\n  // More than two weeks ago -> 8/1/2020\n  return date.toLocaleString('default', {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric'\n  });\n};\n","import * as React from 'react';\nimport { PageHeader } from '../components/PageHeader';\nimport { AllResults, PeopleResults } from './Search';\nimport {\n  SelectTabData,\n  SelectTabEvent,\n  Tab,\n  TabList,\n  TabValue,\n  makeStyles,\n  shorthands\n} from '@fluentui/react-components';\nimport { useAppContext } from '../AppContext';\nimport { ExternalItemsResults } from './Search/ExternalItemsResults';\nimport { FilesResults } from './Search/FilesResults';\n\nconst useStyles = makeStyles({\n  panels: {\n    ...shorthands.padding('10px')\n  },\n  container: {\n    maxWidth: '1028px',\n    width: '100%'\n  }\n});\n\nconst SearchPage: React.FunctionComponent = () => {\n  const styles = useStyles();\n  const appContext = useAppContext();\n  const [query] = React.useState(new URLSearchParams(window.location.search).get('q'));\n\n  const [selectedTab, setSelectedTab] = React.useState<TabValue>('allResults');\n\n  const onTabSelect = (event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedTab(data.value);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title={'Search'}\n        description={'Use this Search Center to test Microsot Graph Toolkit search components capabilities'}\n      ></PageHeader>\n\n      <div className={styles.container}>\n        <TabList selectedValue={selectedTab} onTabSelect={onTabSelect}>\n          <Tab value=\"allResults\">All Results</Tab>\n          <Tab value=\"driveItems\">Files</Tab>\n          <Tab value=\"externalItems\">External Items</Tab>\n          <Tab value=\"people\">People</Tab>\n        </TabList>\n        <div className={styles.panels}>\n          {selectedTab === 'allResults' && <AllResults searchTerm={query ?? appContext.state.searchTerm}></AllResults>}\n          {selectedTab === 'driveItems' && (\n            <FilesResults searchTerm={query ?? appContext.state.searchTerm}></FilesResults>\n          )}\n          {selectedTab === 'externalItems' && (\n            <ExternalItemsResults searchTerm={query ?? appContext.state.searchTerm}></ExternalItemsResults>\n          )}\n          {selectedTab === 'people' && (\n            <PeopleResults searchTerm={query ?? appContext.state.searchTerm}></PeopleResults>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchPage;\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { IGraph } from './IGraph';\nimport { Client } from '@microsoft/microsoft-graph-client';\nimport { Graph } from './Graph';\n\n/**\n * The version of the Graph to use for making requests.\n */\nconst GRAPH_VERSION = 'beta';\n\n/**\n * BetaGraph\n *\n * @export\n * @class BetaGraph\n * @extends {BetaGraph}\n */\nexport class BetaGraph extends Graph {\n  /**\n   * get a BetaGraph instance based on an existing IGraph implementation.\n   *\n   * @static\n   * @param {Graph} graph\n   * @returns {BetaGraph}\n   * @memberof BetaGraph\n   */\n  public static fromGraph(graph: IGraph): BetaGraph {\n    const betaGraph = new BetaGraph(graph.client);\n    betaGraph.setComponent(graph.componentName);\n    return betaGraph;\n  }\n\n  constructor(client: Client, version: string = GRAPH_VERSION) {\n    super(client, version);\n  }\n\n  /**\n   * Returns a new instance of the Graph using the same\n   * client within the context of the provider.\n   *\n   * @param {Element} component\n   * @returns {BetaGraph}\n   * @memberof BetaGraph\n   */\n  public forComponent(component: Element | string): BetaGraph {\n    const graph = new BetaGraph(this.client);\n    this.setComponent(component);\n    return graph;\n  }\n}\n"],"names":["useStyles","makeStyles","divider","alignItems","paddingTop","marginBottom","PageHeader","props","styles","_jsxs","children","_jsx","title","description","Divider","className","strings","modified","back","next","pages","page","css","_templateObject","_taggedTemplateLiteral","MgtSearchResults","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","_classCallCheck","call","_size","entityTypes","scopes","contentSources","version","pagingMax","enableTopResults","cacheEnabled","cacheInvalidationPeriod","isRefreshing","defaultFields","_currentPage","onFirstPageClick","currentPage","scrollToFirstResult","onPageBackClick","onPageNextClick","warn","_createClass","key","get","this","_queryString","set","value","setLoadingState","requestStateUpdate","size","maxPageSize","name","oldValue","newValue","_get","_getPrototypeOf","prototype","hardRefresh","arguments","length","undefined","clearState","response","footerTemplate","_this2","renderedTemplate","headerTemplate","hasTemplate","renderTemplate","renderFooter","_b","_a","hitsContainers","isLoadingState","renderLoading","error","renderError","html","_d","_c","_templateObject2","_h","_g","_f","_e","hits","map","result","renderResult","_templateObject3","_templateObject4","provider","Providers","globalProvider","state","ProviderState","SignedIn","_context","abrupt","queryString","prev","requestOptions","getRequestOptions","JSON","stringify","endpoint","concat","searchEndpoint","shouldRetrieveCache","cache","CacheService","getCache","schemas","search","stores","responses","getIsResponseCacheEnabled","getValue","t0","sent","getResponseInvalidationTime","Date","now","timeCached","parse","graph","forComponent","request","api","middlewareOptions","prepScopes","apply","_toConsumableArray","post","requests","fetchThumbnail","thumbnailBatch","createBatch","thumbnailBatchBeta","BetaGraph","fromGraph","_iterator","_createForOfIteratorHelper","s","_step","n","done","element","resource","webUrl","endsWith","hitId","toString","parentReference","siteId","id","driveId","err","e","f","augmentResponse","thumbnailResponse","_step2","_iterator2","_step2$value","_slicedToArray","k","thumbnail","url","content","thumbnailWebUrl","t1","executeAll","t2","t3","t4","t5","shouldUpdateCache","putValue","equals","t6","fireCustomEvent","stop","_callee","_this3","_templateObject5","Array","_templateObject6","_templateObject7","type","getResourceType","renderDriveItem","renderSite","renderPerson","renderList","renderListItem","renderBookmark","renderAcronym","renderQnA","renderDefault","hitsContainer","pagingRequired","getActivePages","total","_templateObject8","renderPreviousPage","renderFirstPage","renderAllPages","renderNextPage","moreResultsAvailable","totalResults","_this4","firstPage","medianPage","Math","floor","getFirstPage","i","ceil","push","_this5","_templateObject9","_templateObject10","onPageClick","_this6","_templateObject11","some","nothing","_templateObject12","_templateObject13","getDotButtonTitle","_templateObject14","getSvg","SvgIcon","ChevronLeft","isLastPage","_templateObject15","ChevronRight","pageNumber","renderRoot","querySelector","scrollIntoView","block","behavior","split","pop","mgtHtml","_templateObject16","trimFileExtension","lastModifiedBy","user","email","getRelativeDisplayDate","lastModifiedDateTime","sanitizeSummary","summary","_templateObject17","_templateObject18","getResourceIcon","displayName","_templateObject19","getNameFromUrl","_templateObject20","News","FileOuter","_templateObject21","_templateObject22","userPrincipalName","renderAnswer","DoubleBookmark","BookOpen","BookQuestion","icon","_templateObject23","getResourceUrl","resourceUrl","_templateObject24","_templateObject25","getResourceName","_templateObject26","getResultSummary","webLink","subject","Globe","Email","Event","SmallChat","query","from","fields","getFields","includes","queryTemplate","MgtTemplatedComponent","__decorate","property","attribute","String","converter","v","trim","_type","toLowerCase","reflect","Number","Boolean","SearchResults","wrapMgt","registerFluentComponents","fluentSkeleton","fluentButton","fluentTooltip","fluentDivider","registerMgtFileComponent","registerMgtPersonComponent","registerComponent","AllResults","_Fragment","searchTerm","NoDataTemplate","template","PeopleResults","ExternalItemsResults","File","container","_objectSpread","shorthands","gap","display","flexDirection","flexWrap","card","width","height","maxWidth","caption","color","tokens","colorNeutralForeground3","noDataSearchTerm","fontWeight","fontWeightSemibold","emptyContainer","justifyContent","fileContainer","fileTitle","paddingLeft","alignSelf","noDataMessage","noDataIcon","fontSize","row","cursor","FilesResults","FileTemplate","FileNoDataTemplate","getColumns","shimmered","createTableColumn","columnId","renderHeaderCell","renderCell","item","TableCellLayout","SkeletonItem","shape","style","fileDetails","view","ViewType","image","listItem","position","gridTemplateColumns","Person","personQuery","createdBy","oneline","personCardInteraction","PersonCardInteraction","hover","_props$dataContext$va","_props$dataContext$va2","_props$dataContext$va3","_React$useState","React","dataContext","driveItems","DataGrid","columns","items","DataGridHeader","DataGridRow","_ref","DataGridHeaderCell","DataGridBody","_ref2","rowId","onClick","URL","defaultEncodingURL","searchParams","append","window","open","onRowClick","_ref3","DataGridCell","_props$dataContext$va4","_React$useState3","searchTerms","SlideSearchRegular","join","date","today","getFullYear","getMonth","getDate","toLocaleString","hour","minute","sunday","setDate","getDay","weekday","lastTwoWeeks","day","month","year","panels","padding","appContext","useAppContext","URLSearchParams","location","_React$useState4","selectedTab","setSelectedTab","TabList","selectedValue","onTabSelect","event","data","Tab","_Graph","client","component","setComponent","betaGraph","componentName","Graph"],"sourceRoot":""}