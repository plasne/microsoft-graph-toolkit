{"version":3,"file":"static/js/456.63a15b22.chunk.js","mappings":"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","sources":["../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/MgtPersonCardConfig.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/getMgtPersonCardScopes.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/TeamsHelper.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.graph.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card-css.ts","../../../packages/mgt-components/dist/es6/components/src/components/BasePersonCardSection.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.ts"],"sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ninterface SectionsConfig {\n  /**\n   * Gets or sets whether the organization section is shown\n   *\n   */\n  organization?: {\n    /**\n     * Gets or sets whether the \"Works with\" section is shown\n     *\n     * @type {boolean}\n     */\n    showWorksWith: boolean;\n  };\n\n  /**\n   * Gets or sets whether the messages section is shown\n   *\n   * @type {boolean}\n   */\n  mailMessages: boolean;\n\n  /**\n   * Gets or sets whether the files section is shown\n   *\n   * @type {boolean}\n   */\n  files: boolean;\n\n  /**\n   * Gets or sets whether the profile section is shown\n   *\n   * @type {boolean}\n   */\n  profile: boolean;\n}\n\nexport class MgtPersonCardConfig {\n  public static sections: SectionsConfig = {\n    files: true,\n    mailMessages: true,\n    organization: { showWorksWith: true },\n    profile: true\n  };\n  public static useContactApis = true;\n  public static isSendMessageVisible = true;\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\n\n/**\n * Scopes used to fetch data for the mgt-person-card component\n *\n * @static\n * @return {*}  {string[]}\n * @memberof MgtPersonCard\n */\n\nexport const getMgtPersonCardScopes = (): string[] => {\n  const scopes: string[] = [];\n\n  if (MgtPersonCardConfig.sections.files) {\n    scopes.push('Sites.Read.All');\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages) {\n    scopes.push('Mail.Read');\n    scopes.push('Mail.ReadBasic');\n  }\n\n  if (MgtPersonCardConfig.sections.organization) {\n    scopes.push('User.Read.All');\n\n    if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n      scopes.push('People.Read.All');\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.profile) {\n    scopes.push('User.Read.All');\n  }\n\n  if (MgtPersonCardConfig.useContactApis) {\n    scopes.push('Contacts.Read');\n  }\n\n  if (scopes.indexOf('User.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('User.ReadBasic.All');\n    scopes.push('User.Read');\n  }\n\n  if (scopes.indexOf('People.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('People.Read');\n  }\n\n  if (MgtPersonCardConfig.isSendMessageVisible) {\n    // Chat.ReadWrite can create a chat and send a message, so just request one scope instead of two\n    scopes.push('Chat.ReadWrite');\n  }\n\n  // return unique\n  return [...new Set(scopes)];\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport interface loginContext {\n  loginHint: string;\n}\n\nexport interface TeamsLib {\n  initialize(): void;\n  executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void;\n  authentication: {\n    authenticate(authConfig: {\n      failureCallback: (reason) => void;\n      successCallback: (result) => void;\n      url: string;\n    }): void;\n    getAuthToken(authCallback: { failureCallback: (reason) => void; successCallback: (result) => void }): void;\n    notifySuccess(message?: string): void;\n    notifyFailure(message: string): void;\n  };\n  getContext(callback?: (context: loginContext) => void): Promise<loginContext>;\n}\n\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ntype TeamsWindow = Window &\n  typeof globalThis & {\n    microsoftTeams: TeamsLib;\n    nativeInterface: unknown;\n  };\n\n/**\n * A helper class for interacting with the Teams Client SDK.\n *\n * @export\n * @class TeamsHelper\n */\nexport class TeamsHelper {\n  /**\n   * Optional entry point to the teams library\n   * If this value is not set, the provider will attempt to use\n   * the microsoftTeams global variable.\n   *\n   * @static\n   * @type {TeamsLib}\n   * @memberof TeamsHelper\n   */\n  public static get microsoftTeamsLib(): TeamsLib {\n    return this._microsoftTeamsLib || (window as TeamsWindow).microsoftTeams;\n  }\n  public static set microsoftTeamsLib(value: TeamsLib) {\n    this._microsoftTeamsLib = value;\n  }\n\n  /**\n   * Gets whether the Teams provider can be used in the current context\n   * (Whether the app is running in Microsoft Teams)\n   *\n   * @readonly\n   * @static\n   * @memberof TeamsHelper\n   */\n  public static get isAvailable(): boolean {\n    if (!this.microsoftTeamsLib) {\n      return false;\n    }\n    if (window.parent === window.self && (window as TeamsWindow).nativeInterface) {\n      // In Teams mobile client\n      return true;\n    } else if (window.name === 'embedded-page-container' || window.name === 'extension-tab-frame') {\n      // In Teams web/desktop client\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Execute a deeplink against the Teams lib.\n   *\n   * @static\n   * @param {string} deeplink\n   * @param {(status: boolean, reason?: string) => void} [onComplete]\n   * @memberof TeamsHelper\n   */\n  public static executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void {\n    const teams: TeamsLib = this.microsoftTeamsLib;\n    teams.initialize();\n    teams.executeDeepLink(deeplink, onComplete);\n  }\n\n  private static _microsoftTeamsLib: TeamsLib;\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { BatchResponse, IBatch, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport { Chat, ChatMessage } from '@microsoft/microsoft-graph-types';\nimport { Profile } from '@microsoft/microsoft-graph-types-beta';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson } from '../../graph/types';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\nimport { validUserByIdScopes } from '../../graph/graph.user';\nimport { validInsightScopes } from '../../graph/graph.files';\n\nconst userProperties =\n  'businessPhones,companyName,department,displayName,givenName,jobTitle,mail,mobilePhone,officeLocation,preferredLanguage,surname,userPrincipalName,id,accountEnabled';\n\nconst batchKeys = {\n  directReports: 'directReports',\n  files: 'files',\n  messages: 'messages',\n  people: 'people',\n  person: 'person'\n};\n\n/**\n * Get data to populate the person card\n *\n * @export\n * @param {IGraph} graph\n * @param {IDynamicPerson} personDetails\n * @param {boolean} isMe\n * @param {MgtPersonCardConfig} config\n * @return {*}  {Promise<MgtPersonCardState>}\n */\nexport const getPersonCardGraphData = async (\n  graph: IGraph,\n  personDetails: IDynamicPerson,\n  isMe: boolean\n): Promise<MgtPersonCardState> => {\n  const userId = personDetails.id;\n  const email = getEmailFromGraphEntity(personDetails);\n\n  const isContactOrGroup =\n    'classification' in personDetails ||\n    ('personType' in personDetails &&\n      (personDetails.personType.subclass === 'PersonalContact' || personDetails.personType.class === 'Group'));\n\n  const batch = graph.createBatch();\n\n  if (!isContactOrGroup) {\n    if (MgtPersonCardConfig.sections.organization) {\n      buildOrgStructureRequest(batch, userId);\n\n      if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n        buildWorksWithRequest(batch, userId);\n      }\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages && email) {\n    buildMessagesWithUserRequest(batch, email);\n  }\n\n  if (MgtPersonCardConfig.sections.files) {\n    buildFilesRequest(batch, isMe ? null : email);\n  }\n\n  let response: Map<string, BatchResponse>;\n  const data: MgtPersonCardState = {}; // TODO\n  try {\n    response = await batch.executeAll();\n  } catch {\n    // nop\n  }\n\n  if (response) {\n    for (const [key, value] of response) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n      data[key] = value.content?.value || value.content;\n    }\n  }\n\n  if (!isContactOrGroup && MgtPersonCardConfig.sections.profile) {\n    try {\n      const profile = await getProfile(graph, userId);\n      if (profile) {\n        data.profile = profile;\n      }\n    } catch {\n      // nop\n    }\n  }\n\n  // filter out disabled users from direct reports.\n  if (data.directReports && data.directReports.length > 0) {\n    data.directReports = data.directReports.filter(report => report.accountEnabled);\n  }\n\n  return data;\n};\n\nconst buildOrgStructureRequest = (batch: IBatch, userId: string) => {\n  const expandManagers = `manager($levels=max;$select=${userProperties})`;\n\n  batch.get(\n    batchKeys.person,\n    `users/${userId}?$expand=${expandManagers}&$select=${userProperties}&$count=true`,\n    validUserByIdScopes,\n    {\n      ConsistencyLevel: 'eventual'\n    }\n  );\n\n  batch.get(batchKeys.directReports, `users/${userId}/directReports?$select=${userProperties}`);\n};\n\nconst validPeopleScopes = ['People.Read.All'];\nconst buildWorksWithRequest = (batch: IBatch, userId: string) => {\n  batch.get(batchKeys.people, `users/${userId}/people?$filter=personType/class eq 'Person'`, validPeopleScopes);\n};\nconst validMailSearchScopes = ['Mail.ReadBasic', 'Mail.Read', 'Mail.ReadWrite'];\nconst buildMessagesWithUserRequest = (batch: IBatch, emailAddress: string) => {\n  batch.get(batchKeys.messages, `me/messages?$search=\"from:${emailAddress}\"`, validMailSearchScopes);\n};\n\nconst buildFilesRequest = (batch: IBatch, emailAddress?: string) => {\n  let request: string;\n\n  if (emailAddress) {\n    request = `me/insights/shared?$filter=lastshared/sharedby/address eq '${emailAddress}'`;\n  } else {\n    request = 'me/insights/used';\n  }\n\n  batch.get(batchKeys.files, request, validInsightScopes);\n};\n\nconst validProfileScopes = ['User.Read.All', 'User.ReadWrite.All'];\n/**\n * Get the profile for a user\n *\n * @param {IGraph} graph\n * @param {string} userId\n * @return {*}  {Promise<Profile>}\n */\nconst getProfile = async (graph: IGraph, userId: string): Promise<Profile> =>\n  (await graph\n    .api(`/users/${userId}/profile`)\n    .version('beta')\n    .middlewareOptions(prepScopes(validProfileScopes))\n    .get()) as Profile;\n\nconst validCreateChatScopes = ['Chat.Create', 'Chat.ReadWrite'];\n\n/**\n * Initiate a chat to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ chatType: string; members: [{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string},{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string}]  }} chatData\n * @return {*}  {Promise<Chat>}\n */\nexport const createChat = async (graph: IGraph, person: string, user: string): Promise<Chat> => {\n  const chatData = {\n    chatType: 'oneOnOne',\n    members: [\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${user}')`\n      },\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${person}')`\n      }\n    ]\n  };\n  return (await graph\n    .api('/chats')\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(validCreateChatScopes))\n    .post(chatData)) as Chat;\n};\n\nconst validSendChatMessageScopes = ['ChatMessage.Send', 'Chat.ReadWrite'];\n\n/**\n * Send a chat message to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ body: {\"content\": string}  }} messageData\n * @return {*}  {Promise<ChatMessage>}\n */\nexport const sendMessage = async (\n  graph: IGraph,\n  chatId: string,\n  messageData: Pick<ChatMessage, 'body'>\n): Promise<ChatMessage> =>\n  (await graph\n    .api(`/chats/${chatId}/messages`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes(validSendChatMessageScopes))\n    .post(messageData)) as ChatMessage;\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{box-shadow:var(--person-card-box-shadow,var(--elevation-shadow-card-rest));width:var(--mgt-flyout-set-width,375px);overflow:hidden;user-select:none;border-radius:8px;background-color:var(--person-card-background-color,var(--neutral-layer-floating));--file-list-background-color:transparent;--file-list-box-shadow:none;--file-item-background-color:transparent}:host .small{max-height:100vh;overflow:hidden auto}:host .nav{height:0;position:relative;z-index:100}:host .nav__back{padding-top:18px;padding-inline-start:12px;height:32px;width:32px}:host .nav__back svg{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .nav__back:hover{cursor:pointer}:host .nav__back:hover svg{fill:var(--person-card-nav-back-arrow-hover-color,var(--neutral-foreground-rest))}:host .close-card-container{position:relative;z-index:100}:host .close-card-container .close-button{position:absolute;right:10px;margin-top:9px;z-index:1;border:1px solid transparent}:host .close-card-container .close-button svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .close-card-container .close-button:hover svg path{fill:var(--person-card-close-button-hover-color,var(--neutral-foreground-rest))}:host .person-details-container{display:flex;flex-direction:column;padding-inline-start:22px;padding-block:36px;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .person-details-container .person-image{--person-avatar-top-spacing:var(--person-card-avatar-top-spacing, 15px);--person-details-left-spacing:var(--person-card-details-left-spacing, 15px);--person-details-bottom-spacing:var(--person-card-details-bottom-spacing, 0);--person-background-color:var(--person-card-background-color, var(--neutral-layer-floating));--person-line1-font-size:var(--person-card-line1-font-size, 20px);--person-line1-font-weight:var(--person-card-line1-font-weight, 600);--person-line1-text-line-height:var(--person-card-line1-line-height, 28px);--person-line1-text-color:var(--person-card-line1-text-color, var(--neutral-foreground-rest));--person-line2-font-size:var(--person-card-line2-font-size, 14px);--person-line2-font-weight:var(--person-card-line2-font-weight, 400);--person-line2-text-line-height:var(--person-card-line2-line-height, 20px);--person-line2-text-color:var(--person-card-line2-text-color, var(--neutral-foreground-hint));--person-line3-font-size:var(--person-card-line3-font-size, 14px);--person-line3-font-weight:var(--person-card-line3-font-weight, 400);--person-line3-text-line-height:var(--person-card-line3-line-height, 19px);--person-line3-text-color:var(--person-card-line3-text-color, var(--neutral-foreground-hint));--person-avatar-size:var(--person-card-avatar-size, 75px);--person-presence-wrapper-bottom:-15px}:host .person-details-container .base-icons{display:flex;align-items:center;margin-inline-start:var(--person-card-base-icons-left-spacing,calc(var(--person-card-avatar-size,75px) + var(--person-card-details-left-spacing,15px) - 8px));z-index:1}:host .person-details-container .base-icons .icon{display:flex;align-items:center;font-size:13px;white-space:nowrap}:host .person-details-container .base-icons .icon:not(:last-child){margin-inline-end:28px}:host .person-details-container .base-icons .icon svg .filled{display:none}:host .person-details-container .base-icons .icon svg .regular{display:block}:host .person-details-container .base-icons .icon svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .person-details-container .base-icons .icon:active svg .filled,:host .person-details-container .base-icons .icon:hover svg .filled{display:block}:host .person-details-container .base-icons .icon:active svg .regular,:host .person-details-container .base-icons .icon:hover svg .regular{display:none}:host .person-details-container .base-icons .icon:active svg path,:host .person-details-container .base-icons .icon:hover svg path{fill:var(--person-card-icon-hover-color,var(--accent-foreground-hover))}:host .expanded-details-container{display:flex;flex-direction:column;position:relative}:host .expanded-details-container .expanded-details-button{display:flex;justify-content:center;height:32px}:host .expanded-details-container .expanded-details-button svg path{stroke:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .expanded-details-container .expanded-details-button:hover{cursor:pointer;background-color:var(--person-card-expanded-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section{padding:20px 0;display:flex;flex-direction:column;position:relative}:host .expanded-details-container .sections .section:not(:last-child)::after{position:absolute;content:\"\";width:90%;transform:translateX(-50%);border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest));left:50%;bottom:0}:host .expanded-details-container .sections .section__header{display:flex;flex-direction:row;padding:0 20px}:host .expanded-details-container .sections .section__title{flex-grow:1;color:var(--person-card-line1-text-color,var(--neutral-foreground-rest));font-size:14px;font-weight:600;line-height:19px}:host .expanded-details-container .sections .section__show-more{font-size:12px;font-weight:600;align-self:center;vertical-align:top;--base-height-multiplier:6}:host .expanded-details-container .sections .section__show-more:hover{background-color:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section__content{margin-top:14px}:host .expanded-details-container .sections .section .additional-details{padding:0 20px}:host .expanded-details-container .divider{z-index:100;position:relative;width:375px;margin:0;border-style:none;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .expanded-details-container .section-nav{height:35px}:host .expanded-details-container .section-nav fluent-tabs{grid-template-columns:minmax(1px,.1fr)}:host .expanded-details-container .section-nav fluent-tabs.horizontal::part(activeIndicator){width:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel{max-height:360px;min-height:360px;overflow:hidden auto;padding:0;scrollbar-width:thin}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted{padding:20px 0;max-width:var(--mgt-flyout-set-width,375px);min-width:var(--mgt-flyout-set-width,360px);--file-list-box-shadow:none;--file-list-padding:0}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted .title{font-size:14px;font-weight:600;color:var(--title-color-subtitle,var(--neutral-foreground-rest,#1a1a1a));margin:0 20px 20px;line-height:19px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .overview-panel{max-width:var(--mgt-flyout-set-width,375px)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-button{height:1px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-track{border-radius:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab{padding-bottom:1px!important;border:1px solid transparent!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab:focus-visible{border:1px solid #2b2b2b!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon{cursor:pointer;box-sizing:border-box;width:53px;height:36px;display:flex;align-items:center;justify-content:center}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon svg{fill:var(--person-card-fluent-background-color,transparent)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon:hover{background:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover));border-radius:4px;z-index:0;position:relative}:host .expanded-details-container .section-host{min-height:360px;overflow:hidden auto}:host .expanded-details-container .section-host::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-host::-webkit-scrollbar-button{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-track{background:#fff;border-radius:10px}:host .expanded-details-container .section-host::-webkit-scrollbar-track-piece{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-host.small{overflow-y:hidden}:host .loading{margin:40px 20px;display:flex;justify-content:center;height:360px}:host .message-section{border-bottom:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint));display:flex}:host .message-section fluent-text-field{margin:10px 10px 10px 16px;--neutral-fill-input-rest:$person-card-background-color;--neutral-fill-input-hover:$person-card-chat-input-hover-color;--neutral-fill-input-focus:$person-card-chat-input-focus-color;width:300px;margin-inline-start:16px;border-radius:4px;border:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section .send-message-icon{max-width:15px;margin-top:10px}:host .message-section svg{height:17px;width:16px;fill:var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section svg:hover{filter:brightness(.5)}:host .message-section svg:disabled{filter:none}:host .person-root.large,:host .person-root.threelines{--person-avatar-size-3-lines:75px}:host fluent-button.close-button.lightweight::part(control),:host fluent-button.expanded-details-button::part(control),:host fluent-button.section__show-more.lightweight::part(control){background:var(--person-card-fluent-background-color,transparent)}:host fluent-button.icon::part(control),:host fluent-button.nav__back::part(control){border:none;padding:0;background:0 0}:host fluent-button.icon::part(control) :hover,:host fluent-button.nav__back::part(control) :hover{background:0 0}[dir=rtl] .base-icons{right:91px}[dir=rtl] .nav__back{width:20px!important;transform:scaleX(-1);filter:fliph;filter:FlipH}[dir=rtl] .close-card-container .close-button{right:auto;left:10px}[dir=rtl] .message-section svg{transform:scale(-1,1)}@media (forced-colors:active) and (prefers-color-scheme:dark){.root{border:1px solid #fff;border-radius:inherit}.root svg,.root svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root{border:1px solid #000;border-radius:inherit}.root svg,.root svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { MgtTemplatedTaskComponent, customElementHelper, mgtHtml } from '@microsoft/mgt-element';\nimport { html, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\n\nimport { IDynamicPerson } from '../graph/types';\nimport { MgtPersonCard } from './mgt-person-card/mgt-person-card';\n\nimport './sub-components/mgt-spinner/mgt-spinner';\n\n/**\n * Defines the interface for a person card section.\n * This allows us to avoid forced inheritance and allow for more flexibility in the future.\n */\nexport interface CardSection {\n  readonly cardTitle: string;\n  tagName: string;\n  asCompactView(): CardSection;\n  asFullView(): CardSection;\n  renderIcon(): TemplateResult;\n}\n\n/**\n * A base class for building person card subsections.\n *\n * @export\n * @class BasePersonCardSection\n * @extends {MgtTemplatedComponent}\n */\nexport abstract class BasePersonCardSection extends MgtTemplatedTaskComponent implements CardSection {\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof BasePersonCardSection\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public personDetails: IDynamicPerson | null = null;\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @abstract\n   * @type {string}\n   * @memberof BasePersonCardSection\n   */\n  public abstract get displayName(): string;\n\n  /**\n   * The title for using when rendering the full card.\n   *\n   * @readonly\n   * @abstract\n   * @memberof BasePersonCardSection\n   */\n  public abstract get cardTitle(): string;\n\n  /**\n   * Determines the appropriate view state: full or compact\n   *\n   * @protected\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  protected get isCompact(): boolean {\n    return this._isCompact;\n  }\n\n  @state()\n  private _isCompact: boolean;\n\n  constructor() {\n    super();\n    this._isCompact = false;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  public abstract renderIcon(): TemplateResult;\n\n  /**\n   * Set the section to compact view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asCompactView() {\n    this._isCompact = true;\n    return this;\n  }\n\n  /**\n   * Set the section to full view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asFullView() {\n    this._isCompact = false;\n    return this;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof BasePersonCardSection\n   */\n  protected clearState(): void {\n    this._isCompact = false;\n    this.personDetails = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    return this.isCompact ? this.renderCompactView() : this.renderFullView();\n  }\n\n  /**\n   * Render a spinner while the component loads state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected renderLoading = (): TemplateResult => {\n    return mgtHtml`\n      <div class=\"loading\">\n        <mgt-spinner></mgt-spinner>\n      </div>\n    `;\n  };\n\n  /**\n   * Render the section in a empty data state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardContact\n   */\n  protected renderNoData(): TemplateResult {\n    return html`\n      <div class=\"no-data\">No data</div>\n    `;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderCompactView(): TemplateResult;\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderFullView(): TemplateResult;\n\n  /**\n   * Navigate the card to a different user.\n   *\n   * @protected\n   * @memberof BasePersonCardSection\n   */\n  protected navigateCard(person: IDynamicPerson): void {\n    // Search for card parent and update it's personDetails object\n    let parent: ParentNode = this.parentNode;\n    while (parent) {\n      parent = parent.parentNode;\n\n      const shadowRoot = parent as ShadowRoot;\n      if (shadowRoot?.host?.tagName === `${customElementHelper.prefix}-PERSON-CARD`.toUpperCase()) {\n        parent = shadowRoot.host;\n        break;\n      }\n    }\n\n    const personCard = parent as MgtPersonCard;\n    personCard.navigate(person);\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root .part{display:grid;grid-template-columns:auto 1fr auto}:host .root .part .part__icon{display:flex;min-width:20px;width:20px;height:20px;align-items:center;justify-content:center;margin-left:20px;margin-top:10px;line-height:20px}:host .root .part .part__icon svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint))}:host .root .part .part__details{margin:10px 14px;overflow:hidden}:host .root .part .part__details .part__title{font-size:12px;color:var(--contact-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .part .part__details .part__value{grid-column:2;color:var(--contact-value-color,var(--neutral-foreground-rest));font-size:14px;font-weight:400;line-height:19px}:host .root .part .part__details .part__value .part__link{color:var(--contact-link-color,var(--accent-foreground-rest));font-size:14px;cursor:pointer;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;width:100%;display:inline-block}:host .root .part .part__details .part__value .part__link:hover{color:var(--contact-link-hover-color,var(--accent-foreground-hover))}:host .root .part .part__copy{width:32px;height:100%;background-color:var(--contact-background-color,transparent);visibility:hidden;display:flex;align-items:center;justify-content:flex-start}:host .root .part .part__copy svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint));cursor:pointer}:host .root .part:hover .part__copy{visibility:visible}:host .root.compact{padding:0}:host .root.compact .part{height:30px;align-items:center}:host .root.compact .part__details{margin:0}:host .root.compact .part__title{display:none}:host .root.compact .part__icon{margin-top:0;margin-right:6px;margin-bottom:2px}[dir=rtl] .part__link.phone{text-align:right;direction:ltr}[dir=rtl] .part__icon{margin:10px 20px 0 0!important}[dir=rtl].compact .part__icon{margin-left:6px!important;margin-top:0!important}@media (forced-colors:active) and (prefers-color-scheme:dark){.root svg{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root svg{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  contactSectionTitle: 'Contact',\n  emailTitle: 'Email',\n  chatTitle: 'Teams',\n  businessPhoneTitle: 'Business Phone',\n  cellPhoneTitle: 'Mobile Phone',\n  departmentTitle: 'Department',\n  personTitle: 'Title',\n  officeLocationTitle: 'Office Location',\n  copyToClipboardButton: 'Copy to clipboard'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { TeamsHelper, error } from '@microsoft/mgt-element';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { styles } from './mgt-contact-css';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * Represents a contact part and its metadata\n *\n * @interface IContactPart\n */\ninterface IContactPart {\n  icon: TemplateResult;\n  title: string;\n  value?: string;\n  onClick?: (e: Event) => void;\n  showCompact: boolean;\n}\n\ntype Protocol = 'mailto:' | 'tel:';\n\nexport const registerMgtContactComponent = () => {\n  registerComponent('contact', MgtContact);\n};\n\n/**\n * The contact details subsection of the person card\n *\n * @export\n * @class MgtContact\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtContact extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Returns true if the component has data it can render\n   *\n   * @readonly\n   * @abstract\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  public get hasData(): boolean {\n    if (!this._contactParts) {\n      return false;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    return !!availableParts.length;\n  }\n\n  private readonly _person?: User;\n\n  private readonly _contactParts: Record<string, IContactPart> = {\n    email: {\n      icon: getSvg(SvgIcon.Email),\n      onClick: () => this.sendEmail(getEmailFromGraphEntity(this._person)),\n      showCompact: true,\n      title: this.strings.emailTitle\n    },\n    chat: {\n      icon: getSvg(SvgIcon.Chat),\n      onClick: () => this.sendChat(this._person?.userPrincipalName),\n      showCompact: false,\n      title: this.strings.chatTitle\n    },\n    businessPhone: {\n      icon: getSvg(SvgIcon.Phone),\n      onClick: () => this.sendCall(this._person?.businessPhones?.length > 0 ? this._person.businessPhones[0] : null),\n      showCompact: true,\n      title: this.strings.businessPhoneTitle\n    },\n    cellPhone: {\n      icon: getSvg(SvgIcon.CellPhone),\n      onClick: () => this.sendCall(this._person?.mobilePhone),\n      showCompact: true,\n      title: this.strings.cellPhoneTitle\n    },\n    department: {\n      icon: getSvg(SvgIcon.Department),\n      showCompact: false,\n      title: this.strings.departmentTitle\n    },\n    title: {\n      icon: getSvg(SvgIcon.Person),\n      showCompact: false,\n      title: this.strings.personTitle\n    },\n    officeLocation: {\n      icon: getSvg(SvgIcon.OfficeLocation),\n      showCompact: true,\n      title: this.strings.officeLocationTitle\n    }\n  };\n\n  public constructor(person: User) {\n    super();\n    this._person = person;\n\n    this._contactParts.email.value = getEmailFromGraphEntity(this._person);\n    this._contactParts.chat.value = this._person.userPrincipalName;\n    this._contactParts.cellPhone.value = this._person.mobilePhone;\n    this._contactParts.department.value = this._person.department;\n    this._contactParts.title.value = this._person.jobTitle;\n    this._contactParts.officeLocation.value = this._person.officeLocation;\n\n    if (this._person.businessPhones?.length) {\n      this._contactParts.businessPhone.value = this._person.businessPhones[0];\n    }\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get displayName(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get cardTitle(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  // Defines the skeleton for what contact fields are available and what they do.\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Contact);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  public clearState() {\n    super.clearState();\n    for (const key of Object.keys(this._contactParts)) {\n      this._contactParts[key].value = null;\n    }\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderCompactView(): TemplateResult {\n    if (!this.hasData) {\n      return null;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    // Filter for compact mode parts with values\n    let compactParts: IContactPart[] = Object.values(availableParts).filter(\n      (p: IContactPart) => !!p.value && p.showCompact\n    );\n\n    if (!compactParts?.length) {\n      compactParts = Object.values(availableParts).slice(0, 2);\n    }\n\n    const contentTemplate = html`\n      ${compactParts.map(p => this.renderContactPart(p))}\n    `;\n\n    return html`\n      <div class=\"root compact\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.hasData) {\n      // Filter for parts with values only\n      const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n      contentTemplate = html`\n        ${availableParts.map(part => this.renderContactPart(part))}\n      `;\n    }\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a specific contact part\n   *\n   * @protected\n   * @param {IContactPart} part\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderContactPart(part: IContactPart): TemplateResult {\n    let isPhone = false;\n\n    if (part.title === 'Mobile Phone' || part.title === 'Business Phone') {\n      isPhone = true;\n    }\n\n    const partLinkClasses = {\n      part__link: true,\n      phone: isPhone\n    };\n\n    const valueTemplate = part.onClick\n      ? html`\n          <span class=${classMap(partLinkClasses)} @click=${(e: Event) => part.onClick(e)}>${part.value}</span>\n        `\n      : html`\n          ${part.value}\n        `;\n\n    return html`\n      <div class=\"part\" role=\"button\" @click=${(e: MouseEvent) => this.handlePartClick(e, part.value)} tabindex=\"0\">\n        <div class=\"part__icon\" aria-label=${part.title} title=${part.title}>${part.icon}</div>\n        <div class=\"part__details\">\n          <div class=\"part__title\">${part.title}</div>\n          <div class=\"part__value\" title=${part.title}>${valueTemplate}</div>\n        </div>\n        <div\n          class=\"part__copy\"\n          aria-label=${this.strings.copyToClipboardButton}\n          title=${this.strings.copyToClipboardButton}\n        >\n          ${getSvg(SvgIcon.Copy)}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Handle the click event for contact parts\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected handlePartClick(e: MouseEvent, value: string): void {\n    if (value) {\n      void navigator.clipboard.writeText(value);\n    }\n  }\n\n  private sendLink(protocol: Protocol, resource: string): void {\n    if (resource) {\n      window.open(`${protocol}${resource}`, '_blank', 'noreferrer');\n    } else {\n      error(`Target resource for ${protocol} link was not provided: resource: ${resource}`);\n    }\n  }\n\n  /**\n   * Send a chat message to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendChat(upn: string): void {\n    if (!upn) {\n      error(\" Can't send chat when upn is not provided\");\n      return;\n    }\n\n    const url = `https://teams.microsoft.com/l/chat/0/0?users=${upn}`;\n    const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n    if (TeamsHelper.isAvailable) {\n      TeamsHelper.executeDeepLink(url, (status: boolean) => {\n        if (!status) {\n          openWindow();\n        }\n      });\n    } else {\n      openWindow();\n    }\n  }\n\n  /**\n   * Send an email to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendEmail(email: string): void {\n    this.sendLink('mailto:', email);\n  }\n\n  /**\n   * Send a call to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendCall = (phone: string): void => {\n    this.sendLink('tel:', phone);\n  };\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root .message{padding:8px 20px;display:flex;align-items:center;justify-content:space-between}:host .root .message:hover{background-color:var(--message-hover-color,var(--neutral-fill-hover));cursor:pointer}:host .root .message:last-child{margin-bottom:unset}:host .root .message .message__detail{min-width:0;line-height:normal}:host .root .message .message__detail .message__subject{color:var(--message-subject-color,var(--neutral-foreground-color));font-size:var(--message-subject-font-size,14px);font-weight:var(--message-subject-font-weight,600);line-height:var(--message-subject-line-height,20px)}:host .root .message .message__detail .message__from{font-size:var(--message-from-font-size,12px);color:var(--message-from-color,var(--neutral-foreground-color));line-height:var(--message-from-line-height,16px);font-weight:var(--message-from-font-weight,400)}:host .root .message .message__detail .message__message{font-size:var(--message-from-font-size,12px);color:var(--message-color,var(--neutral-foreground-hint));line-height:var(--message-from-line-height,16px);font-weight:var(--message-from-font-weight,400)}:host .root .message .message__detail>div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .root .message .message__date{margin-top:8px;font-size:12px;color:var(--message-date-color,var(--neutral-foreground-hint));margin-left:10px;white-space:nowrap}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  emailsSectionTitle: 'Emails'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Message } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getRelativeDisplayDate } from '../../utils/Utils';\nimport { styles } from './mgt-messages-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { state } from 'lit/decorators.js';\n\nexport const registerMgtMessagesComponent = () => registerComponent('messages', MgtMessages);\n\n/**\n * The email messages subsection of the person card\n *\n * @export\n * @class MgtMessages\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtMessages extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  @state()\n  private _messages: Message[];\n\n  public constructor(messages: Message[]) {\n    super();\n    this._messages = messages;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtMessages\n   */\n  public get displayName(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._messages = [];\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Messages);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      const messageTemplates = this._messages\n        ? this._messages.slice(0, 3).map(message => this.renderMessage(message))\n        : [];\n      contentTemplate = html`\n         ${messageTemplates}\n       `;\n    }\n\n    return html`\n       <div class=\"root compact\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      contentTemplate = html`\n         ${this._messages.slice(0, 5).map(message => this.renderMessage(message))}\n       `;\n    }\n\n    return html`\n       <div class=\"root\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a message item\n   *\n   * @protected\n   * @param {IMessage} message\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderMessage(message: Message): TemplateResult {\n    return html`\n       <div class=\"message\" @click=${() => this.handleMessageClick(message)}>\n         <div class=\"message__detail\">\n           <div class=\"message__subject\">${message.subject}</div>\n           <div class=\"message__from\">${message.from.emailAddress.name}</div>\n           <div class=\"message__message\">${message.bodyPreview}</div>\n         </div>\n         <div class=\"message__date\">${getRelativeDisplayDate(new Date(message.receivedDateTime))}</div>\n       </div>\n     `;\n  }\n\n  private handleMessageClick(message: Message): void {\n    window.open(message.webLink, '_blank', 'noreferrer');\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root.compact .coworker .coworker__person-image{height:40px;width:40px;border-radius:40px;--person-avatar-size:40px;margin-right:12px}:host .root.compact .coworker .coworker__name{font-size:14px}:host .root.compact .coworker .coworker__title{font-size:12px}:host .root .subtitle{color:var(--organization-sub-title-color,var(--neutral-foreground-hint));font-size:14px;margin:0 20px 8px}:host .root .divider{display:flex;background:var(--organization-coworker-border-color,var(--neutral-stroke-rest));height:1px;margin:26px 20px 18px}:host .root .org-member{height:74px;box-sizing:border-box;border-radius:2px;padding:12px;display:flex;align-items:center;margin-inline:20px}:host .root .org-member.org-member--target{background-color:var(--organization-active-org-member-target-background-color,var(--neutral-fill-active));border:1px solid var(--organization-active-org-member-border-color,var(--accent-foreground-rest))}:host .root .org-member:not(.org-member--target){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest))}:host .root .org-member:not(.org-member--target):hover{cursor:pointer;background-color:var(--organization-hover-color,var(--neutral-fill-hover))}:host .root .org-member .org-member__person{flex-grow:1}:host .root .org-member .org-member__person .org-member__person-image{--person-avatar-size:var(--organization-member-person-avatar-size, 40px)}:host .root .org-member .org-member__details{flex-grow:1}:host .root .org-member .org-member__details .org-member__name{font-size:16px;color:var(--organization-title-color,var(--neutral-foreground-rest));font-weight:600}:host .root .org-member .org-member__details .org-member__department,:host .root .org-member .org-member__details .org-member__title{font-weight:14px;color:var(--organization-sub-title-color,var(--neutral-foreground-hint))}:host .root .org-member__separator:not(:last-child){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest));box-sizing:border-box;width:0;margin:0 50%;height:14px}:host .root .coworker{display:flex;align-items:center;padding:10px 20px}:host .root .coworker:hover{cursor:pointer;background-color:var(--organization-coworker-hover-color,var(--neutral-fill-hover))}:host .root .coworker .coworker__person{height:46px;border-radius:46px;margin-right:8px}:host .root .coworker .coworker__person .coworker__person-image{--person-avatar-size:var(--organization-coworker-person-avatar-size, 40px)}:host .root .direct-report__compact{padding:12px 20px}:host .root .direct-report__compact .direct-report{margin-right:4px}:host .root .direct-report-list{border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest));margin-inline:20px}:host .root .direct-report-list .org-member--direct-report{border:none;cursor:pointer;margin-inline:0}:host .root .direct-report-list .org-member--direct-report .direct-report__person-image{--person-avatar-size:var(--organization-direct-report-person-avatar-size, 38px)}[dir=rtl] .org-member .org-member__more{transform:scaleX(-1);filter:fliph;filter:FlipH}@media (forced-colors:active) and (prefers-color-scheme:dark){:host svg,:host svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host svg,:host svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  reportsToSectionTitle: 'Reports to',\n  directReportsSectionTitle: 'Direct reports',\n  organizationSectionTitle: 'Organization',\n  youWorkWithSubSectionTitle: 'You work with',\n  userWorksWithSubSectionTitle: 'works with'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { MgtPersonCardState, UserWithManager } from '../mgt-person-card/mgt-person-card.types';\nimport { styles } from './mgt-organization-css';\nimport { strings } from './strings';\nimport { mgtHtml } from '@microsoft/mgt-element';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { state } from 'lit/decorators.js';\n\nexport const registerMgtOrganizationComponent = () => {\n  registerMgtPersonComponent();\n  registerComponent('organization', MgtOrganization);\n};\n\n/**\n * The member organization subsection of the person card\n *\n * @export\n * @class MgtOrganization\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtOrganization extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * returns component strings\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  @state()\n  private _state?: MgtPersonCardState;\n  @state()\n  private _me?: User;\n\n  constructor(cardState: MgtPersonCardState, me: User) {\n    super();\n    this._state = cardState;\n    this._me = me;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._state = undefined;\n    this._me = undefined;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get displayName(): string {\n    const { person, directReports } = this._state;\n\n    if (!person.manager && directReports?.length) {\n      return `${this.strings.directReportsSectionTitle} (${directReports.length})`;\n    }\n\n    return this.strings.reportsToSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.organizationSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Organization);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports } = this._state;\n\n    if (!person) {\n      return null;\n    } else if (person.manager) {\n      contentTemplate = this.renderCoworker(person.manager);\n    } else if (directReports?.length) {\n      contentTemplate = this.renderCompactDirectReports();\n    }\n\n    return html`\n        <div class=\"root compact\">\n          ${contentTemplate}\n        </div>\n      `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports, people } = this._state;\n\n    if (!person && !directReports && !people) {\n      return null;\n    } else {\n      const managerTemplates = this.renderManagers();\n      const currentUserTemplate = this.renderCurrentUser();\n      const directReportsTemplate = this.renderDirectReports();\n      const coworkersTemplate = this.renderCoworkers();\n\n      contentTemplate = html`\n          ${managerTemplates} ${currentUserTemplate} ${directReportsTemplate} ${coworkersTemplate}\n        `;\n    }\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManager(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"org-member\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"org-member__person\">\n          <mgt-person\n            class=\"org-member__person-image\"\n            .personDetails=${person}\n            .fetchImage=${true}\n            view=\"twolines\"\n            .showPresence=${true}\n          ></mgt-person>\n        </div>\n        <div tabindex=\"0\" class=\"org-member__more\">\n          ${getSvg(SvgIcon.ExpandRight)}\n        </div>\n      </div>\n      <div class=\"org-member__separator\"></div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManagers(): TemplateResult[] {\n    const { person } = this._state;\n    if (!person?.manager) {\n      return null;\n    }\n\n    const managers: UserWithManager[] = [];\n    let currentManager = person;\n    while (currentManager.manager) {\n      managers.push(currentManager.manager);\n      currentManager = currentManager.manager;\n    }\n\n    if (!managers.length) {\n      return null;\n    }\n\n    return managers.reverse().map(manager => this.renderManager(manager));\n  }\n\n  /**\n   * Render a direct report\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n    if (!directReports?.length) {\n      return null;\n    }\n\n    return html`\n      <div class=\"org-member__separator\"></div>\n      <div class=\"direct-report-list\">\n        ${directReports.map(\n          person => mgtHtml`\n            <div\n              class=\"org-member org-member--direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <div class=\"org-member__person\">\n                <mgt-person\n                  class=\"org-member__person-image\"\n                  .personDetails=${person}\n                  .fetchImage=${true}\n                  .showPresence=${true}\n                  view=\"twolines\"\n                ></mgt-person>\n              </div>\n              <div tabindex=\"0\" class=\"org-member__more\">\n                ${getSvg(SvgIcon.ExpandRight)}\n              </div>\n            </div>\n          `\n        )}\n      </div>\n     `;\n  }\n\n  /**\n   * Render direct reports in compact view\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n\n    return html`\n      <div class=\"direct-report__compact\">\n        ${directReports.slice(0, 6).map(\n          person => mgtHtml`\n            <div\n              class=\"direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <mgt-person\n                class=\"direct-report__person-image\"\n                .personDetails=${person}\n                .fetchImage=${true}\n                .showPresence=${true}\n                view=\"twolines\"\n              ></mgt-person>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the user/self member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCurrentUser(): TemplateResult {\n    const { person } = this._state;\n    return mgtHtml`\n       <div class=\"org-member org-member--target\">\n         <div class=\"org-member__person\">\n           <mgt-person\n              class=\"org-member__person-image\"\n             .personDetails=${person}\n             .fetchImage=${true}\n             .showPresence=${true}\n             view=\"twolines\"\n           ></mgt-person>\n         </div>\n       </div>\n     `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworker(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"coworker\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"coworker__person\">\n          <mgt-person\n            class=\"coworker__person-image\"\n            .personDetails=${person}\n            .fetchImage=${true}\n            .showPresence=${true}\n            view=\"twolines\"\n          ></mgt-person>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworkers(): TemplateResult {\n    const { people } = this._state;\n    if (!people?.length) {\n      return null;\n    }\n\n    const subtitle =\n      this._me.id === this._state.person.id\n        ? this.strings.youWorkWithSubSectionTitle\n        : `${this._state.person.givenName} ${this.strings.userWorksWithSubSectionTitle}`;\n\n    return html`\n       <div class=\"divider\"></div>\n       <div class=\"subtitle\" tabindex=\"0\">${subtitle}</div>\n       <div>\n         ${people.slice(0, 6).map(person => this.renderCoworker(person))}\n       </div>\n     `;\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none;background-color:var(--profile-background-color,--neutral-layer-1)}:host .root{padding:20px 0}:host .root.compact{padding:0}:host .root .title{font-size:14px;font-weight:600;color:var(--profile-title-color,var(--neutral-foreground-rest));margin:0 20px 12px}:host .root section{margin-bottom:24px;padding:0 20px}:host .root section:last-child{margin:0}:host .root section .section__title{font-size:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root section .section__content{display:flex;flex-direction:column;margin-top:10px}:host .root .token-list{display:flex;flex-flow:row wrap;margin-top:-10px}:host .root .token-list .token-list__item{text-overflow:ellipsis;white-space:nowrap;display:inline-block;overflow:hidden;font-size:14px;align-items:center;background:var(--profile-token-item-background-color,var(--neutral-fill-secondary-rest));border-radius:2px;max-height:28px;padding:4px 8px;margin-right:10px;margin-top:10px;color:var(--profile-token-item-color,var(--neutral-foreground-rest))}:host .root .token-list .token-list__item:last-child{margin-right:initial}:host .root .token-list .token-list__item.overflow{display:none}:host .root .token-list .token-list__item.token-list__item--show-overflow{cursor:pointer;user-select:unset;background:0 0;color:var(--profile-token-overflow-color,var(--accent-foreground-rest))}:host .root .data-list__item{margin-bottom:20px}:host .root .data-list__item:last-child{margin-bottom:initial}:host .root .data-list__item .data-list__item__header{display:flex;justify-content:space-between;align-items:center}:host .root .data-list__item .data-list__item__content{font-size:12px;line-height:16px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));margin-top:4px}:host .root .data-list__item .data-list__item__title{font-size:14px;line-height:16px;color:var(--profile-title-color,var(--neutral-foreground-rest))}:host .root .data-list__item .data-list__item__date-range{color:var(--profile-section-title-color,var(--neutral-foreground-hint));font-size:10px;line-height:12px}:host .root .language__proficiency{opacity:.77}:host .root .work-position .work-position__company{color:#023b8f}:host .root .work-position .work-position__location{font-size:10px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .educational-activity .educational-activity__degree{font-size:12px;line-height:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root .birthday{display:flex;align-items:center;margin-top:-6px}:host .root .birthday .birthday__icon{margin-right:8px}:host .root .birthday .birthday__date{font-size:12px;color:var(--profile-title-color,var(--neutral-foreground-rest))}[dir=rtl] .token-list__item{margin-right:0!important}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  SkillsAndExperienceSectionTitle: 'Skills & Experience',\n  AboutCompactSectionTitle: 'About',\n  SkillsSubSectionTitle: 'Skills',\n  LanguagesSubSectionTitle: 'Languages',\n  WorkExperienceSubSectionTitle: 'Work Experience',\n  EducationSubSectionTitle: 'Education',\n  professionalInterestsSubSectionTitle: 'Professional Interests',\n  personalInterestsSubSectionTitle: 'Personal Interests',\n  birthdaySubSectionTitle: 'Birthday',\n  currentYearSubtitle: 'Current',\n  socialMediaSubSectionTitle: 'Social Media'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  EducationalActivity,\n  PersonAnnualEvent,\n  PersonInterest,\n  PhysicalAddress,\n  Profile\n} from '@microsoft/microsoft-graph-types-beta';\nimport { html, TemplateResult, nothing } from 'lit';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { styles } from './mgt-profile-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { property } from 'lit/decorators.js';\n\nexport const registerMgtProfileComponent = () => registerComponent('profile', MgtProfile);\n\n/**\n * The user profile subsection of the person card\n *\n * @export\n * @class MgtProfile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --token-overflow-color - {Color} Color of the text showing more undisplayed values i.e. +3 more\n */\nexport class MgtProfile extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtProfile\n   */\n  public get displayName(): string {\n    return this.strings.SkillsAndExperienceSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.AboutCompactSectionTitle;\n  }\n\n  /**\n   * Returns true if the profile contains data\n   * that can be rendered\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof MgtProfile\n   */\n  public get hasData(): boolean {\n    if (!this.profile) {\n      return false;\n    }\n\n    const { languages, skills, positions, educationalActivities } = this.profile;\n\n    return (\n      [\n        this._birthdayAnniversary,\n        this._personalInterests?.length,\n        this._professionalInterests?.length,\n        languages?.length,\n        skills?.length,\n        positions?.length,\n        educationalActivities?.length\n      ].filter(v => !!v).length > 0\n    );\n  }\n\n  /**\n   * The user's profile metadata\n   *\n   * @protected\n   * @type {IProfile}\n   * @memberof MgtProfile\n   */\n  protected get profile(): Profile {\n    return this._profile;\n  }\n  @property({ attribute: false })\n  protected set profile(value: Profile) {\n    if (value === this._profile) {\n      return;\n    }\n\n    this._profile = value;\n    this._birthdayAnniversary = value?.anniversaries ? value.anniversaries.find(this.isBirthdayAnniversary) : null;\n    this._personalInterests = value?.interests ? value.interests.filter(this.isPersonalInterest) : null;\n    this._professionalInterests = value?.interests ? value.interests.filter(this.isProfessionalInterest) : null;\n  }\n\n  private _profile: Profile;\n  private _personalInterests: PersonInterest[];\n  private _professionalInterests: PersonInterest[];\n  private _birthdayAnniversary: PersonAnnualEvent;\n\n  constructor(profile: Profile) {\n    super();\n\n    this.profile = profile;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Profile);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtProfile\n   */\n  public clearState(): void {\n    super.clearState();\n    this.profile = null;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderCompactView(): TemplateResult {\n    return html`\n       <div class=\"root compact\" dir=${this.direction}>\n         ${this.renderSubSections().slice(0, 2)}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderFullView() {\n    this.initPostRenderOperations();\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${this.renderSubSections()}\n       </div>\n     `;\n  }\n\n  /**\n   * Renders all subSections of the profile\n   * Defines order of how they render\n   *\n   * @protected\n   * @return {*}\n   * @memberof MgtProfile\n   */\n  protected renderSubSections() {\n    const subSections = [\n      this.renderSkills(),\n      this.renderBirthday(),\n      this.renderLanguages(),\n      this.renderWorkExperience(),\n      this.renderEducation(),\n      this.renderProfessionalInterests(),\n      this.renderPersonalInterests()\n    ];\n\n    return subSections.filter(s => !!s);\n  }\n\n  /**\n   * Render the user's known languages\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderLanguages(): TemplateResult {\n    const { languages } = this._profile;\n    if (!languages?.length) {\n      return null;\n    }\n\n    const languageItems: TemplateResult[] = [];\n    for (const language of languages) {\n      let proficiency = null;\n      if (language.proficiency?.length) {\n        proficiency = html`\n           <span class=\"language__proficiency\" tabindex=\"0\">\n             &nbsp;(${language.proficiency})\n           </span>\n         `;\n      }\n\n      languageItems.push(html`\n         <div class=\"token-list__item language\">\n           <span class=\"language__title\" tabindex=\"0\">${language.displayName}</span>\n           ${proficiency}\n         </div>\n       `);\n    }\n\n    const languageTitle = languageItems.length ? this.strings.LanguagesSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${languageTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${languageItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's skills\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderSkills(): TemplateResult {\n    const { skills } = this._profile;\n\n    if (!skills?.length) {\n      return null;\n    }\n\n    const skillItems: TemplateResult[] = [];\n    for (const skill of skills) {\n      skillItems.push(html`\n         <div class=\"token-list__item skill\" tabindex=\"0\">\n           ${skill.displayName}\n         </div>\n       `);\n    }\n\n    const skillsTitle = skillItems.length ? this.strings.SkillsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${skillsTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${skillItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's work experience timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderWorkExperience(): TemplateResult {\n    const { positions } = this._profile;\n\n    if (!positions?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const position of this._profile.positions) {\n      if (position.detail.description || position.detail.jobTitle !== '') {\n        positionItems.push(html`\n           <div class=\"data-list__item work-position\">\n             <div class=\"data-list__item__header\">\n               <div class=\"data-list__item__title\" tabindex=\"0\">${position.detail?.jobTitle}</div>\n               <div class=\"data-list__item__date-range\" tabindex=\"0\">\n                 ${this.getDisplayDateRange(position.detail)}\n               </div>\n             </div>\n             <div class=\"data-list__item__content\">\n               <div class=\"work-position__company\" tabindex=\"0\">\n                 ${position?.detail?.company?.displayName}\n               </div>\n               <div class=\"work-position__location\" tabindex=\"0\">\n                 ${this.displayLocation(position?.detail?.company?.address)}\n               </div>\n             </div>\n           </div>\n         `);\n      }\n    }\n    const workExperienceTitle = positionItems.length ? this.strings.WorkExperienceSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${workExperienceTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's education timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderEducation(): TemplateResult {\n    const { educationalActivities } = this._profile;\n\n    if (!educationalActivities?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const educationalActivity of educationalActivities) {\n      positionItems.push(html`\n         <div class=\"data-list__item educational-activity\">\n           <div class=\"data-list__item__header\">\n             <div class=\"data-list__item__title\" tabindex=\"0\">${educationalActivity.institution.displayName}</div>\n             <div class=\"data-list__item__date-range\" tabindex=\"0\">\n               ${this.getDisplayDateRange(educationalActivity)}\n             </div>\n           </div>\n           ${\n             educationalActivity.program.displayName\n               ? html`<div class=\"data-list__item__content\">\n                  <div class=\"educational-activity__degree\" tabindex=\"0\">\n                  ${educationalActivity.program.displayName}\n                </div>`\n               : nothing\n           }\n         </div>\n       `);\n    }\n\n    const educationTitle = positionItems.length ? this.strings.EducationSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${educationTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's professional interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderProfessionalInterests(): TemplateResult {\n    if (!this._professionalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._professionalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--professional\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const professionalInterests = interestItems.length ? this.strings.professionalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${professionalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's personal interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderPersonalInterests(): TemplateResult {\n    if (!this._personalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._personalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--personal\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const personalInterests = interestItems.length ? this.strings.personalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${personalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's birthday\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderBirthday(): TemplateResult {\n    if (!this._birthdayAnniversary?.date) {\n      return null;\n    }\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">Birthday</div>\n         <div class=\"section__content\">\n           <div class=\"birthday\">\n             <div class=\"birthday__icon\">\n               ${getSvg(SvgIcon.Birthday)}\n             </div>\n             <div class=\"birthday__date\" tabindex=\"0\">\n               ${this.getDisplayDate(new Date(this._birthdayAnniversary.date))}\n             </div>\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  private readonly isPersonalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('personal');\n  };\n\n  private readonly isProfessionalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('professional');\n  };\n\n  private readonly isBirthdayAnniversary = (anniversary: PersonAnnualEvent): boolean => {\n    return anniversary.type === 'birthday';\n  };\n\n  private getDisplayDate(date: Date): string {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'long'\n    });\n  }\n\n  private getDisplayDateRange(event: EducationalActivity): string | symbol {\n    // if startMonthYear is not defined, we do not show the date range (otherwise it will always start with 1970)\n    if (!event.startMonthYear) {\n      return nothing;\n    }\n\n    const start = new Date(event.startMonthYear).getFullYear();\n    // if the start year is 0 or 1 - it's probably an error or a strange \"undefined\"-value\n    if (start === 0 || start === 1) {\n      return nothing;\n    }\n\n    const end = event.endMonthYear ? new Date(event.endMonthYear).getFullYear() : this.strings.currentYearSubtitle;\n    return `${start} — ${end}`;\n  }\n\n  private displayLocation(address: PhysicalAddress | undefined): string | symbol {\n    if (address?.city) {\n      if (address.state) {\n        return `${address.city}, ${address.state}`;\n      }\n      return address.city;\n    }\n    return nothing;\n  }\n\n  private initPostRenderOperations(): void {\n    setTimeout(() => {\n      try {\n        const sections = this.shadowRoot.querySelectorAll('section');\n        sections.forEach(section => {\n          // Perform post render operations per section\n          this.handleTokenOverflow(section);\n        });\n      } catch {\n        // An exception may occur if the component is suddenly removed during post render operations.\n      }\n    }, 0);\n  }\n\n  private handleTokenOverflow(section: HTMLElement): void {\n    const tokenLists = section.querySelectorAll('.token-list');\n    if (!tokenLists?.length) {\n      return;\n    }\n\n    for (const tokenList of Array.from(tokenLists)) {\n      const items = tokenList.querySelectorAll('.token-list__item');\n      if (!items?.length) {\n        continue;\n      }\n\n      let overflowItems: Element[] = null;\n      let itemRect = items[0].getBoundingClientRect();\n      const tokenListRect = tokenList.getBoundingClientRect();\n      const maxtop = itemRect.height * 2 + tokenListRect.top;\n\n      // Use (items.length - 1) to prevent [+1 more] from appearing.\n      for (let i = 0; i < items.length - 1; i++) {\n        itemRect = items[i].getBoundingClientRect();\n        if (itemRect.top > maxtop) {\n          overflowItems = Array.from(items).slice(i, items.length);\n          break;\n        }\n      }\n\n      if (overflowItems) {\n        overflowItems.forEach(i => i.classList.add('overflow'));\n\n        const overflowToken = document.createElement('div');\n        overflowToken.classList.add('token-list__item');\n        overflowToken.classList.add('token-list__item--show-overflow');\n        overflowToken.tabIndex = 0;\n        overflowToken.innerText = `+ ${overflowItems.length} more`;\n\n        // On click or enter(accessibility), remove [+n more] token and reveal the hidden overflow tokens.\n        const revealOverflow = () => {\n          overflowToken.remove();\n          overflowItems.forEach(i => i.classList.remove('overflow'));\n        };\n        overflowToken.addEventListener('click', () => {\n          revealOverflow();\n        });\n        overflowToken.addEventListener('keydown', (e: KeyboardEvent) => {\n          if (e.code === 'Enter') {\n            revealOverflow();\n          }\n        });\n        tokenList.appendChild(overflowToken);\n      }\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  showMoreSectionButton: 'Show more',\n  endOfCard: 'End of the card',\n  quickMessage: 'Send a quick message',\n  expandDetailsLabel: 'Expand details',\n  sendMessageLabel: 'Send message',\n  emailButtonLabel: 'Email',\n  callButtonLabel: 'Call',\n  chatButtonLabel: 'Chat',\n  closeCardLabel: 'Close card',\n  videoButtonLabel: 'Video',\n  goBackLabel: 'Go Back'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, nothing, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  MgtTemplatedTaskComponent,\n  Providers,\n  ProviderState,\n  TeamsHelper,\n  mgtHtml,\n  customElementHelper\n} from '@microsoft/mgt-element';\nimport { IGraph } from '@microsoft/mgt-element';\nimport { Presence, User, Person } from '@microsoft/microsoft-graph-types';\n\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson } from '../../graph/types';\nimport { getPersonImage } from '../../graph/graph.photos';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { getPersonCardGraphData, createChat, sendMessage } from './mgt-person-card.graph';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { styles } from './mgt-person-card-css';\nimport { MgtContact, registerMgtContactComponent } from '../mgt-contact/mgt-contact';\nimport { MgtFileList, registerMgtFileListComponent } from '../mgt-file-list/mgt-file-list';\nimport { MgtMessages, registerMgtMessagesComponent } from '../mgt-messages/mgt-messages';\nimport { MgtOrganization, registerMgtOrganizationComponent } from '../mgt-organization/mgt-organization';\nimport { MgtProfile, registerMgtProfileComponent } from '../mgt-profile/mgt-profile';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\nimport { getMgtPersonCardScopes } from './getMgtPersonCardScopes';\nimport { strings } from './strings';\nimport { isUser } from '../../graph/entityType';\n\nimport '../sub-components/mgt-spinner/mgt-spinner';\n\nexport * from './mgt-person-card.types';\n\nimport {\n  fluentTabs,\n  fluentTab,\n  fluentTabPanel,\n  fluentButton,\n  fluentTextField,\n  fluentCard\n} from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { BasePersonCardSection, CardSection } from '../BasePersonCardSection';\nimport { buildComponentName, registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtSpinnerComponent } from '../sub-components/mgt-spinner/mgt-spinner';\nimport { IHistoryClearer, IExpandable } from './types';\n\ninterface MgtPersonCardStateHistory {\n  state: MgtPersonCardState;\n  personDetails: IDynamicPerson;\n  personImage: string;\n}\n\nexport const registerMgtPersonCardComponent = () => {\n  registerFluentComponents(fluentCard, fluentTabs, fluentTab, fluentTabPanel, fluentButton, fluentTextField);\n  // register self first to avoid infinite loop due to circular ref between person and person card and organization\n  registerComponent('person-card', MgtPersonCard);\n\n  registerMgtSpinnerComponent();\n  // these components newed up rather than created declaratively\n  registerMgtContactComponent();\n  registerMgtOrganizationComponent();\n  registerMgtMessagesComponent();\n  registerMgtFileListComponent();\n  registerMgtProfileComponent();\n  // only register person if not already registered\n  if (!customElements.get(buildComponentName('person'))) registerMgtPersonComponent();\n};\n\n/**\n * Web Component used to show detailed data for a person in the Microsoft Graph\n *\n * @export\n * @class MgtPersonCard\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<null>} expanded - Fired when expanded details section is opened\n *\n * @cssprop --person-card-line1-font-size - {Length} Font size of line 1\n * @cssprop --person-card-line1-font-weight - {FontWeight} Font weight of line 1\n * @cssprop --person-card-line1-line-height - {Length} Line height of line 1\n * @cssprop --person-card-line2-font-size - {Length} Font size of line 2\n * @cssprop --person-card-line2-font-weight - {FontWeight} Font weight of line 2\n * @cssprop --person-card-line2-line-height - {Length} Line height of line 2\n * @cssprop --person-card-line3-font-size - {Length} Font size of line 3\n * @cssprop --person-card-line3-font-weight - {FontWeight} Font weight of line 3\n * @cssprop --person-card-line3-line-height - {Length} Line height of line 3\n * @cssprop --person-card-avatar-size - {Length} Width and height of the avatar. Default is 75px\n * @cssprop --person-card-details-left-spacing - {Length} The space between the avatar and the person details. Default is 15px\n * @cssprop --person-card-avatar-top-spacing - {Length} The margin top of the avatar in person-card component\n * @cssprop --person-card-details-bottom-spacing - {Length} The margin bottom of the person details in person-card component\n * @cssprop --person-card-base-icons-left-spacing - {Length} The margin-inline-start of the base-icons in person-card component\n * @cssprop --person-card-background-color - {Color} The color of the person-card-component\n * @cssprop --person-card-expanded-background-color-hover - {Color} The hover color of the expanded details button of the person card component\n * @cssprop --person-card-nav-back-arrow-hover-color - {Color} The hover color of the back arrow of the person card component\n * @cssprop --person-card-icon-color - {Color} The color of the icons in the person card component\n * @cssprop --person-card-icon-hover-color - {Color} The hover color of the icons in the person card component\n * @cssprop --person-card-show-more-color - {Color} The color of the show more text in the person card component\n * @cssprop --person-card-show-more-hover-color - {Color} The hover color of the show more text in person card component\n * @cssprop --person-card-fluent-background-color - {Color} The background color of the fluent buttons in person card component\n * @cssprop --person-card-line1-text-color - {Color} The color of line 1 in person card\n * @cssprop --person-card-line2-text-color - {Color} The color of line 2 in person card\n * @cssprop --person-card-line3-text-color - {Color} The color of line 3 in person card\n * @cssprop --person-card-fluent-background-color-hover - {Color} The hover background color of the fluent buttons in person card component\n * @cssprop --person-card-chat-input-hover-color - {Color} The chat input hover color\n * @cssprop --person-card-chat-input-focus-color - {Color} The chat input focus color\n * @cssprop --contact-title-color - {Color} The color of the contact title in the contact section of the person card component\n * @cssprop --contact-value-color - {Color} The color of the contact value in the contact section of the person card component\n * @cssprop --contact-link-color - {Color} The color of the contact link in the contact section of the person card component\n * @cssprop --contact-link-hover-color - {Color} The hover color of the contact link in the contact section of the person card component\n * @cssprop --contact-background-color - {Color} The background color of the contact section in person card component\n * @cssprop --contact-copy-icon-color - {Color} The color of the copy icon in the contact section of the person card component\n * @cssprop --message-subject-font-size - {Length} The font size of the message subject in the message section of the person card component\n * @cssprop --message-subject-font-weight - {FontWeight} The font weight of the message subject in the message section of the person card component\n * @cssprop --message-subject-line-height - {Length} The line height of the message subject in the message section of the person card component\n * @cssprop --message-from-font-size - {Length} The font size of the message sender in the message section of the person card component\n * @cssprop --message-from-font-weight - {FontWeight} The font weight of the message sender in the message section of the person card component\n * @cssprop --message-subject-color - {Color} The color of the message subject in the message section of the person card component\n * @cssprop --message-from-color - {Color} The color of the message sender in the message section of the person card component\n * @cssprop --message-color - {Color} The color of the message in the message section of the person card component\n * @cssprop --message-hover-color - {Color} The hover color of the message section of the person card component\n * @cssprop --message-date-color - {Color} The color of the message date in the message section of the person card component\n * @cssprop --message-from-line-height - {Length} The line height of the message sender in the message section of the person card component\n * @cssprop --profile-background-color - {Color} The background color of the profile section in the person card component\n * @cssprop --profile-title-color - {Color} The color of the profile title in the profile section of the person card component\n * @cssprop --profile-section-title-color - {Color} The color of the profile section title in the profile section of the person card component\n * @cssprop --profile-token-item-color - {Color} The color of the profile token item in the profile section of the person card component\n * @cssprop --profile-token-item-background-color - {Color} The background color of the profile token item in the profile section of the person card component\n * @cssprop --profile-token-overflow-color - {Color} The color of the profile token overflow in the profile section of the person card component\n * @cssprop --organization-active-org-member-border-color - {Color} The border color of the active organization member in the organization section of the person card component\n * @cssprop --organization-active-org-member-target-background-color - {Color} The background color of the active organization member target in the organization section of the person card component\n * @cssprop --organization-coworker-hover-color - {Color} The hover color of the coworker in the organization section of the person card component\n * @cssprop --organization-coworker-border-color - {Color} The border color of the coworker in the organization section of the person card component\n * @cssprop --organization-coworker-person-avatar-size - {Length} The avatar size of the coworker in the organization section of the person card component\n * @cssprop --organization-member-person-avatar-size - {Length} The avatar size of the member in the organization section of the person card component\n * @cssprop --organization-direct-report-person-avatar-size - {Length} The avatar size of the direct report in the organization section of the person card component\n * @cssprop --organization-title-color - {Color} The color of the organization title in the organization section of the person card component\n * @cssprop --organization-sub-title-color - {Color} The color of the organization sub-title in the organization section of the person card component\n * @cssprop --organization-hover-color - {Color} The hover color of the organization section of the person card component\n * @cssprop --profile-background-color - {Color} The background color of the profile section in the person card component\n * @cssprop --profile-title-color - {Color} The color of the profile title in the profile section of the person card component\n * @cssprop --profile-section-title-color - {Color} The color of the profile section title of the person card component\n * @cssprop --profile-token-item-color - {Color} The color of the token item in the profile section of the person card component\n * @cssprop --profile-token-item-background-color - {Color} The background color of the token item in the profile section of the person card component\n * @cssprop --profile-token-overflow-color - {Color} The color of the token overflow in the profile section of the person card component\n *\n */\nexport class MgtPersonCard extends MgtTemplatedTaskComponent implements IHistoryClearer, IExpandable {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings to use for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Get the scopes required for the person card\n   * The scopes depend on what sections are shown\n   *\n   * Use the `MgtPersonCard.config` object to configure\n   * what sections are shown\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPersonCard\n   */\n  public static get requiredScopes(): string[] {\n    return getMgtPersonCardScopes();\n  }\n\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof MgtPersonCard\n   */\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this.personImage = this.getImage();\n  }\n\n  private _personQuery: string;\n  /**\n   * allows developer to define name of person for component\n   *\n   * @type {string}\n   */\n  public get personQuery(): string {\n    return this._personQuery;\n  }\n  @property({\n    attribute: 'person-query'\n  })\n  public set personQuery(value: string) {\n    if (this._personQuery === value) {\n      return;\n    }\n    this._personQuery = value;\n    this.personDetails = null;\n    this._cardState = null;\n  }\n\n  /**\n   * allows the locking of navigation using tabs to not flow out of the card section\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'lock-tab-navigation',\n    type: Boolean\n  })\n  public lockTabNavigation: boolean;\n\n  /**\n   * user-id property allows developer to use id value for component\n   *\n   * @type {string}\n   */\n  public get userId(): string {\n    return this._userId;\n  }\n  @property({\n    attribute: 'user-id'\n  })\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n    this._userId = value;\n    this.personDetails = null;\n    this._cardState = null;\n  }\n\n  /**\n   * Set the image of the person\n   * Set to '@' to look up image from the graph\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public personImage: string;\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetails\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Gets or sets whether expanded details section is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'is-expanded',\n    type: Boolean\n  })\n  public isExpanded: boolean;\n\n  /**\n   * Gets or sets whether person details should be inherited from an mgt-person parent\n   * Useful when used as template in an mgt-person component\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'inherit-details',\n    type: Boolean\n  })\n  public inheritDetails: boolean;\n\n  /**\n   * determines if person card component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public personPresence: Presence;\n\n  @state()\n  private isSendingMessage = false;\n\n  /**\n   * The subsections for display in the lower part of the card\n   *\n   * @protected\n   * @type {any[]}\n   * @memberof MgtPersonCard\n   */\n  protected sections: CardSection[];\n\n  @state() private _cardState: MgtPersonCardState;\n  @state() private _isStateLoading: boolean;\n\n  private _history: MgtPersonCardStateHistory[];\n  private _chatInput: string;\n  @state()\n  private _currentSection: CardSection;\n  private _personDetails: IDynamicPerson;\n  private _me: User;\n  private _smallView: boolean;\n  private _windowHeight;\n\n  private _userId: string;\n  private _graph: IGraph;\n\n  private get internalPersonDetails(): IDynamicPerson {\n    return this._cardState?.person || this.personDetails;\n  }\n\n  constructor() {\n    super();\n    this._chatInput = '';\n    this._currentSection = null;\n    this._history = [];\n    this.sections = [];\n    this._graph = null;\n  }\n\n  /**\n   * Navigate the card to a different person.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  public navigate(person: IDynamicPerson): void {\n    this._history.push({\n      personDetails: this.personDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n\n    this.personDetails = person;\n    this._cardState = null;\n    this.personImage = null;\n    this._currentSection = null;\n    this.sections = [];\n    this._chatInput = '';\n  }\n\n  /**\n   * Navigate the card back to the previous person\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public goBack = (): void => {\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history.pop();\n    this._currentSection = null;\n\n    // resets to first tab being selected\n    const firstTab: HTMLElement = this.renderRoot.querySelector('fluent-tab');\n    if (firstTab) {\n      firstTab.click();\n    }\n    this._cardState = historyState.state;\n    this._personDetails = historyState.state.person;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  };\n\n  /**\n   * Navigate the card back to first person and clear history\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public clearHistory(): void {\n    this._currentSection = null;\n\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history[0];\n    this._history = [];\n\n    this._cardState = historyState.state;\n    this._personDetails = historyState.personDetails;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  }\n\n  protected args(): unknown[] {\n    return [this.providerState, this.personDetails, this.personQuery, this.personImage, this.userId];\n  }\n\n  /**\n   * Invoked from the base class when the loadState promise has completed.\n   */\n  protected readonly renderContent = () => {\n    // Handle no data\n    if (!this.internalPersonDetails) {\n      return this.renderNoData();\n    }\n\n    const person = this.internalPersonDetails;\n    const image = this.getImage();\n\n    // Check for a default template.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n    if (this.hasTemplate('default')) {\n      return this.renderTemplate('default', {\n        person: this.internalPersonDetails,\n        personImage: image\n      });\n    }\n\n    let ariaLabel: string;\n\n    ariaLabel = this.strings.closeCardLabel;\n\n    const closeCardTemplate = this.isExpanded\n      ? html`\n           <div class=\"close-card-container\">\n             <fluent-button \n              appearance=\"lightweight\" \n              class=\"close-button\" \n              aria-label=${ariaLabel}\n              @click=${this.closeCard} >\n               ${getSvg(SvgIcon.Close)}\n             </fluent-button>\n           </div>\n         `\n      : null;\n\n    ariaLabel = this.strings.goBackLabel;\n    const navigationTemplate = this._history?.length\n      ? html`\n            <div class=\"nav\">\n              <fluent-button \n                appearance=\"lightweight\"\n                class=\"nav__back\" \n                aria-label=${ariaLabel} \n                @keydown=${this.handleGoBack}\n                @click=${this.goBack}>${getSvg(SvgIcon.Back)}\n               </fluent-button>\n            </div>\n          `\n      : null;\n\n    // Check for a person-details template\n    let personDetailsTemplate = this.renderTemplate('person-details', {\n      person: this.internalPersonDetails,\n      personImage: image\n    });\n    if (!personDetailsTemplate) {\n      const personTemplate = this.renderPerson();\n      const contactIconsTemplate = this.renderContactIcons(person);\n\n      personDetailsTemplate = html`\n         ${personTemplate} ${contactIconsTemplate}\n       `;\n    }\n\n    const expandedDetailsTemplate = this.isExpanded ? this.renderExpandedDetails() : this.renderExpandedDetailsButton();\n    this._windowHeight =\n      window.innerHeight && document.documentElement.clientHeight\n        ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n        : window.innerHeight || document.documentElement.clientHeight;\n\n    if (this._windowHeight < 250) {\n      this._smallView = true;\n    }\n    const tabLocker = this.lockTabNavigation\n      ? html`<div @keydown=${this.handleEndOfCard} aria-label=${this.strings.endOfCard} tabindex=\"0\" id=\"end-of-container\"></div>`\n      : html``;\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=${classMap({ small: this._smallView })}>\n          ${navigationTemplate}\n          ${closeCardTemplate}\n          <div class=\"person-details-container\">${personDetailsTemplate}</div>\n          <div class=\"expanded-details-container\">${expandedDetailsTemplate}</div>\n          ${tabLocker}\n        </div>\n      </div>\n     `;\n  };\n\n  private readonly handleEndOfCard = (e: KeyboardEvent) => {\n    if (e && e.code === 'Tab') {\n      const endOfCardEl = this.renderRoot.querySelector<HTMLElement>('#end-of-container');\n      if (endOfCardEl) {\n        endOfCardEl.blur();\n        const imageCardEl = this.renderRoot.querySelector<HTMLElement>('mgt-person');\n        if (imageCardEl) {\n          imageCardEl.focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected closeCard = () => {\n    // reset tabs\n    this.updateCurrentSection(null);\n    this.isExpanded = false;\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render a display image for the person.\n   *\n   * @protected\n   * @param {*} image\n   * @memberof MgtPersonCard\n   */\n  protected renderPerson(): TemplateResult {\n    return mgtHtml`\n      <mgt-person\n        tabindex=\"0\"\n        class=\"person-image\"\n        .personDetails=${this.internalPersonDetails}\n        .personImage=${this.getImage()}\n        .personPresence=${this.personPresence}\n        .showPresence=${this.showPresence}\n        view=\"threelines\"\n      ></mgt-person>\n    `;\n  }\n\n  /**\n   * Render person subtitle.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderPersonSubtitle(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    if (!isUser(person) || !person.department) {\n      return;\n    }\n    return html`\n       <div class=\"department\">${person.department}</div>\n     `;\n  }\n\n  /**\n   * Render the various icons for contacting the person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderContactIcons(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    const userPerson = person as User;\n\n    let ariaLabel: string;\n\n    // Email\n    let email: TemplateResult;\n    if (getEmailFromGraphEntity(person)) {\n      ariaLabel = `${this.strings.emailButtonLabel} ${person.displayName}`;\n      email = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.emailUser}>\n          ${getSvg(SvgIcon.SmallEmail)}\n        </fluent-button>\n      `;\n    }\n\n    // Chat\n    let chat: TemplateResult;\n    if (userPerson?.userPrincipalName) {\n      ariaLabel = `${this.strings.chatButtonLabel} ${person.displayName}`;\n      chat = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.chatUser}>\n          ${getSvg(SvgIcon.SmallChat)}\n        </fluent-button>\n       `;\n    }\n\n    // Video\n\n    ariaLabel = `${this.strings.videoButtonLabel} ${person.displayName}`;\n    const video: TemplateResult = html`\n      <fluent-button class=\"icon\"\n        aria-label=${ariaLabel}\n        @click=${this.videoCallUser}>\n        ${getSvg(SvgIcon.Video)}\n      </fluent-button>\n    `;\n\n    // Call\n    let call: TemplateResult;\n    if (userPerson.userPrincipalName) {\n      ariaLabel = `${this.strings.callButtonLabel} ${person.displayName}`;\n      call = html`\n         <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.callUser}>\n          ${getSvg(SvgIcon.Call)}\n        </fluent-button>\n       `;\n    }\n\n    return html`\n       <div class=\"base-icons\">\n         ${email} ${chat} ${video} ${call}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the button used to expand the expanded details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetailsButton(): TemplateResult {\n    return html`\n      <fluent-button\n        aria-label=${this.strings.expandDetailsLabel}\n        class=\"expanded-details-button\"\n        @click=${this.showExpandedDetails}\n      >\n        ${getSvg(SvgIcon.ExpandDown)}\n      </fluent-button>\n     `;\n  }\n\n  /**\n   * Render expanded details.\n   *\n   * @protected\n   * @param {IDynamicPerson} [person]\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetails(): TemplateResult {\n    if (!this._cardState && this._isStateLoading) {\n      return mgtHtml`\n         <div class=\"loading\">\n           <mgt-spinner></mgt-spinner>\n         </div>\n       `;\n    }\n    // load sections when details are expanded\n    // when not singed in\n    const provider = Providers.globalProvider;\n    if (provider.state === ProviderState.SignedOut) {\n      this.loadSections();\n    }\n\n    const sectionNavTemplate = this.renderSectionNavigation();\n\n    return html`\n      <div class=\"section-nav\">\n        ${sectionNavTemplate}\n      </div>\n      <hr class=\"divider\"/>\n      <div\n        class=\"section-host ${this._smallView ? 'small' : ''} ${this._smallView ? 'small' : ''}\"\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n        tabindex=0\n      ></div>\n    `;\n  }\n\n  /**\n   * Render the navigation ribbon for subsections\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderSectionNavigation(): TemplateResult {\n    if (!this.sections || (this.sections.length < 2 && !this.hasTemplate('additional-details'))) {\n      return;\n    }\n\n    const currentSectionIndex = this._currentSection ? this.sections.indexOf(this._currentSection) : -1;\n\n    const additionalSectionTemplates = this.sections.map((section, i) => {\n      const name = section.tagName.toLowerCase();\n      const classes = classMap({\n        active: i === currentSectionIndex,\n        'section-nav__icon': true\n      });\n\n      return html`\n        <fluent-tab\n          id=\"${name}-Tab\"\n          class=${classes}\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(section)}\"\n          @click=${() => this.updateCurrentSection(section)}\n        >\n          ${section.renderIcon()}\n        </fluent-tab>\n      `;\n    });\n\n    const additionalPanelTemplates = this.sections.map(section => {\n      return html`\n        <fluent-tab-panel slot=\"tabpanel\">\n          <div class=\"inserted\">\n            <div class=\"title\">${section.cardTitle}</div>\n            ${this._currentSection ? section.asFullView() : null}\n          </div>\n        </fluent-tab-panel>\n      `;\n    });\n\n    const overviewClasses = classMap({\n      active: currentSectionIndex === -1,\n      'section-nav__icon': true,\n      overviewTab: true\n    });\n\n    return html`\n      <fluent-tabs\n        orientation=\"horizontal\"\n        activeindicator\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n      >\n        <fluent-tab\n          class=\"${overviewClasses}\"\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(null)}\"\n          @click=${() => this.updateCurrentSection(null)}\n        >\n          <div>${getSvg(SvgIcon.Overview)}</div>\n        </fluent-tab>\n        ${additionalSectionTemplates}\n        <fluent-tab-panel slot=\"tabpanel\" >\n          <div class=\"overview-panel\">${!this._currentSection ? this.renderOverviewSection() : null}</div>\n        </fluent-tab-panel>\n        ${additionalPanelTemplates}\n      </fluent-tabs>\n    `;\n  }\n\n  /**\n   * Render the default section with compact views for each subsection.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderOverviewSection(): TemplateResult {\n    const compactTemplates = this.sections.map(\n      (section: BasePersonCardSection) => html`\n        <div class=\"section\">\n          <div class=\"section__header\">\n            <div class=\"section__title\" tabindex=0>${section.displayName}</div>\n              <fluent-button\n                appearance=\"lightweight\"\n                class=\"section__show-more\"\n                @click=${() => this.updateCurrentSection(section)}\n              >\n                ${this.strings.showMoreSectionButton}\n              </fluent-button>\n          </div>\n          <div class=\"section__content\">${section.asCompactView()}</div>\n        </div>\n      `\n    );\n\n    const additionalDetails = this.renderTemplate('additional-details', {\n      person: this.internalPersonDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n    if (additionalDetails) {\n      compactTemplates.splice(\n        1,\n        0,\n        html`\n           <div class=\"section\">\n             <div class=\"additional-details\">${additionalDetails}</div>\n           </div>\n         `\n      );\n    }\n\n    return html`\n       <div class=\"sections\">\n          ${this.renderMessagingSection()}\n          ${compactTemplates}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the actively selected section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderCurrentSection(): TemplateResult {\n    if (!this.sections?.length && !this.hasTemplate('additional-details')) {\n      return;\n    }\n\n    if (this.sections.length === 1 && !this.hasTemplate('additional-details')) {\n      return html`\n         ${this.sections[0].asFullView()}\n       `;\n    }\n\n    if (!this._currentSection) {\n      return this.renderOverviewSection();\n    }\n\n    return html`\n       ${this._currentSection.asFullView()}\n     `;\n  }\n\n  /**\n   * Render the messaging section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderMessagingSection() {\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    const chatInput = this._chatInput;\n    if (person?.userPrincipalName === user) {\n      return;\n    } else {\n      return MgtPersonCardConfig.isSendMessageVisible\n        ? html`\n      <div class=\"message-section\">\n        <fluent-text-field\n          autocomplete=\"off\"\n          appearance=\"outline\"\n          placeholder=\"${this.strings.quickMessage}\"\n          .value=${chatInput}\n          @input=${(e: Event) => {\n            this._chatInput = (e.target as HTMLInputElement).value;\n            this.requestUpdate();\n          }}\n          @keydown=\"${(e: KeyboardEvent) => this.sendQuickMessageOnEnter(e)}\">\n        </fluent-text-field>\n        <fluent-button class=\"send-message-icon\"\n          aria-label=${this.strings.sendMessageLabel}\n          @click=${this.sendQuickMessage}\n          ?disabled=${this.isSendingMessage}>\n          ${!this.isSendingMessage ? getSvg(SvgIcon.Send) : getSvg(SvgIcon.Confirmation)}\n        </fluent-button>\n      </div>\n      `\n        : nothing;\n    }\n  }\n\n  /**\n   * load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCard\n   */\n  protected async loadState() {\n    if (this._cardState) {\n      return;\n    }\n\n    if (!this.personDetails && this.inheritDetails) {\n      // User person details inherited from parent tree\n      let parent = this.parentElement;\n      while (parent && parent.tagName !== `${customElementHelper.prefix}-PERSON`.toUpperCase()) {\n        parent = parent.parentElement;\n      }\n\n      const parentPerson: IDynamicPerson =\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        (parent as MgtPerson).personDetails || (parent as MgtPerson)['personDetailsInternal'];\n\n      if (parent && parentPerson) {\n        this.personDetails = parentPerson;\n        this.personImage = (parent as MgtPerson).personImage;\n      }\n    }\n\n    const provider = Providers.globalProvider;\n\n    // check if user is signed in\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    this._graph = graph;\n\n    this._isStateLoading = true;\n\n    if (!this._me) {\n      this._me = await Providers.me();\n    }\n\n    // check if personDetail already populated\n    if (this.personDetails) {\n      const user = this.personDetails;\n      let id: string;\n      if (isUser(user)) {\n        id = user.userPrincipalName || user.id;\n      }\n\n      // if we have an id but no email, we should get data from the graph\n      // in some graph calls, the user object does not contain the email\n      if (id && !getEmailFromGraphEntity(user)) {\n        const person = await getUserWithPhoto(graph, id);\n        this.personDetails = person;\n        this.personImage = this.getImage();\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      const person = await getUserWithPhoto(graph, this.userId);\n      this.personDetails = person;\n      this.personImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      const people = await findPeople(graph, this.personQuery, 1);\n\n      if (people?.length) {\n        this.personDetails = people[0];\n        await getPersonImage(graph, this.personDetails, MgtPersonCardConfig.useContactApis).then(image => {\n          if (image) {\n            this.personDetails.personImage = image;\n            this.personImage = image;\n          }\n        });\n      }\n    }\n\n    // populate presence\n    const defaultPresence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (!this.personPresence && this.showPresence) {\n      try {\n        if (this.personDetails?.id) {\n          this.personPresence = await getUserPresence(graph, this.personDetails.id);\n        } else {\n          this.personPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this.personPresence = defaultPresence;\n      }\n    }\n\n    // populate state\n    if (this.personDetails?.id) {\n      this._cardState = await getPersonCardGraphData(graph, this.personDetails, this._me === this.personDetails.id);\n    }\n\n    this.loadSections();\n\n    this._isStateLoading = false;\n  }\n\n  /**\n   * Send a chat message to the user from the quick message input.\n   *\n   * @protected\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  protected sendQuickMessage = async (): Promise<void> => {\n    const message = this._chatInput.trim();\n    if (!message?.length) {\n      return;\n    }\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    this.isSendingMessage = true;\n\n    const chat = await createChat(this._graph, person.userPrincipalName, user);\n\n    const messageData = {\n      body: {\n        content: message\n      }\n    };\n    await sendMessage(this._graph, chat.id, messageData);\n    this.isSendingMessage = false;\n    this.clearInputData();\n  };\n\n  /**\n   * Use the mailto: protocol to initiate a new email to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected emailUser = () => {\n    const user = this.internalPersonDetails;\n    if (user) {\n      const email = getEmailFromGraphEntity(user);\n      if (email) {\n        window.open('mailto:' + email, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  private get hasPhone(): boolean {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n    return Boolean(user?.businessPhones?.length) || Boolean(person?.phones?.length);\n  }\n\n  /**\n   * Use the tel: protocol to initiate a new call to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected callUser = () => {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n\n    if (user?.businessPhones?.length) {\n      const phone = user.businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    } else if (person?.phones?.length) {\n      const businessPhones = this.getPersonBusinessPhones(person);\n      const phone = businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  /**\n   * Initiate a chat message to the user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected chatUser = (message: string = null) => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      let url = `https://teams.microsoft.com/l/chat/0/0?users=${users}`;\n      if (message?.length) {\n        url += `&message=${message}`;\n      }\n\n      const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Initiate a teams call with video with a user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected videoCallUser = () => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      const url = `https://teams.microsoft.com/l/call/0/0?users=${users}&withVideo=true`;\n\n      const openWindow = () => window.open(url, '_blank');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Display the expanded details panel.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected showExpandedDetails = () => {\n    const root = this.renderRoot.querySelector('.root');\n    if (root?.animate) {\n      // play back\n      root.animate(\n        [\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          },\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          }\n        ],\n        {\n          duration: 1000,\n          easing: 'ease-in-out',\n          fill: 'both'\n        }\n      );\n    }\n    this.isExpanded = true;\n\n    this.fireCustomEvent('expanded', null, true);\n  };\n\n  private loadSections() {\n    this.sections = [];\n\n    if (!this.internalPersonDetails) {\n      return;\n    }\n\n    const contactSections = new MgtContact(this.internalPersonDetails as User);\n    if (contactSections.hasData) {\n      this.sections.push(contactSections);\n    }\n\n    if (!this._cardState) {\n      return;\n    }\n\n    const { person, directReports, messages, files, profile } = this._cardState;\n\n    if (MgtPersonCardConfig.sections.organization && (person?.manager || directReports?.length)) {\n      this.sections.push(new MgtOrganization(this._cardState, this._me));\n    }\n\n    if (MgtPersonCardConfig.sections.mailMessages && messages?.length) {\n      this.sections.push(new MgtMessages(messages));\n    }\n\n    if (MgtPersonCardConfig.sections.files && files?.length) {\n      this.sections.push(new MgtFileList());\n    }\n\n    if (MgtPersonCardConfig.sections.profile && profile) {\n      const profileSection = new MgtProfile(profile);\n      if (profileSection.hasData) {\n        this.sections.push(profileSection);\n      }\n    }\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    const person = this.personDetails;\n    return person?.personImage ? person.personImage : null;\n  }\n\n  private clearInputData() {\n    this._chatInput = '';\n    this.requestUpdate();\n  }\n\n  private getPersonBusinessPhones(person: Person): string[] {\n    const phones = person.phones;\n    const businessPhones: string[] = [];\n    for (const p of phones) {\n      if (p.type === 'business') {\n        businessPhones.push(p.number);\n      }\n    }\n    return businessPhones;\n  }\n\n  private updateCurrentSection(section: CardSection) {\n    if (section) {\n      const sectionName = section.tagName.toLowerCase();\n      const tabs: HTMLElement = this.renderRoot.querySelector(`#${sectionName}-Tab`);\n      tabs.click();\n    }\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      target.scrollTop = 0;\n    }\n    this._currentSection = section;\n    this.requestUpdate();\n  }\n\n  private handleSectionScroll(e: WheelEvent) {\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      if (target) {\n        if (\n          !(e.deltaY < 0 && target.scrollTop === 0) &&\n          !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n        ) {\n          e.stopPropagation();\n        }\n      }\n    }\n  }\n\n  private readonly sendQuickMessageOnEnter = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.sendQuickMessage();\n    }\n  };\n\n  private readonly handleGoBack = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.goBack();\n    }\n  };\n}\n"],"names":["MgtPersonCardConfig","_createClass","_classCallCheck","sections","files","mailMessages","organization","showWorksWith","profile","useContactApis","isSendMessageVisible","getMgtPersonCardScopes","scopes","push","indexOf","_toConsumableArray","Set","TeamsHelper","key","get","this","_microsoftTeamsLib","window","microsoftTeams","set","value","microsoftTeamsLib","parent","self","nativeInterface","name","deeplink","onComplete","teams","initialize","executeDeepLink","userProperties","batchKeys","getPersonCardGraphData","graph","personDetails","isMe","__awaiter","_regeneratorRuntime","mark","_callee","_a","userId","email","isContactOrGroup","batch","response","data","_iterator","_step","_step$value","wrap","_context","prev","next","id","getEmailFromGraphEntity","personType","subclass","class","createBatch","buildOrgStructureRequest","buildWorksWithRequest","buildMessagesWithUserRequest","buildFilesRequest","executeAll","sent","t0","_createForOfIteratorHelper","s","n","done","_slicedToArray","content","err","e","f","getProfile","t1","directReports","length","filter","report","accountEnabled","abrupt","stop","expandManagers","concat","validUserByIdScopes","ConsistencyLevel","validPeopleScopes","validMailSearchScopes","emailAddress","request","validInsightScopes","validProfileScopes","_callee2","_context2","api","version","middlewareOptions","prepScopes","validCreateChatScopes","createChat","person","user","_callee3","chatData","_context3","chatType","members","roles","header","post","validSendChatMessageScopes","sendMessage","chatId","messageData","_callee4","_context4","styles","css","_templateObject","_taggedTemplateLiteral","BasePersonCardSection","_MgtTemplatedTaskComp","_this","_callSuper","renderLoading","mgtHtml","_isCompact","_inherits","isCompact","renderCompactView","renderFullView","html","_templateObject2","parentNode","shadowRoot","host","tagName","customElementHelper","prefix","toUpperCase","navigate","MgtTemplatedTaskComponent","__decorate","property","attribute","type","Object","state","strings","contactSectionTitle","emailTitle","chatTitle","businessPhoneTitle","cellPhoneTitle","departmentTitle","personTitle","officeLocationTitle","copyToClipboardButton","MgtContact","_BasePersonCardSectio","_contactParts","icon","getSvg","SvgIcon","Email","onClick","sendEmail","_person","showCompact","title","chat","Chat","sendChat","userPrincipalName","businessPhone","Phone","_b","sendCall","businessPhones","cellPhone","CellPhone","mobilePhone","department","Department","Person","officeLocation","OfficeLocation","phone","sendLink","jobTitle","values","p","Contact","_get","_getPrototypeOf","prototype","call","_i","_Object$keys","keys","_this2","hasData","availableParts","compactParts","slice","contentTemplate","map","renderContactPart","direction","_this3","_templateObject3","part","_templateObject4","_this4","isPhone","partLinkClasses","part__link","valueTemplate","_templateObject5","classMap","_templateObject6","_templateObject7","handlePartClick","Copy","navigator","clipboard","writeText","protocol","resource","open","error","upn","url","openWindow","isAvailable","status","emailsSectionTitle","MgtMessages","messages","_messages","Messages","messageTemplates","message","renderMessage","renderNoData","handleMessageClick","subject","from","bodyPreview","getRelativeDisplayDate","Date","receivedDateTime","webLink","reportsToSectionTitle","directReportsSectionTitle","organizationSectionTitle","youWorkWithSubSectionTitle","userWorksWithSubSectionTitle","MgtOrganization","cardState","me","_state","_me","undefined","_this$_state","manager","Organization","_this$_state2","renderCoworker","renderCompactDirectReports","_this$_state3","people","managerTemplates","renderManagers","currentUserTemplate","renderCurrentUser","directReportsTemplate","renderDirectReports","coworkersTemplate","renderCoworkers","code","navigateCard","ExpandRight","managers","currentManager","reverse","renderManager","_this5","_templateObject8","_templateObject9","_this6","_templateObject10","_this7","subtitle","givenName","_templateObject11","SkillsAndExperienceSectionTitle","AboutCompactSectionTitle","SkillsSubSectionTitle","LanguagesSubSectionTitle","WorkExperienceSubSectionTitle","EducationSubSectionTitle","professionalInterestsSubSectionTitle","personalInterestsSubSectionTitle","birthdaySubSectionTitle","currentYearSubtitle","socialMediaSubSectionTitle","MgtProfile","isPersonalInterest","interest","categories","includes","isProfessionalInterest","isBirthdayAnniversary","anniversary","_this$profile","languages","skills","positions","educationalActivities","_birthdayAnniversary","_personalInterests","_professionalInterests","v","_profile","anniversaries","find","interests","Profile","renderSubSections","initPostRenderOperations","renderSkills","renderBirthday","renderLanguages","renderWorkExperience","renderEducation","renderProfessionalInterests","renderPersonalInterests","languageItems","language","proficiency","displayName","languageTitle","_step2","skillItems","_iterator2","skill","skillsTitle","_step3","positionItems","_iterator3","position","detail","description","getDisplayDateRange","_c","company","displayLocation","_e","_d","address","workExperienceTitle","_step4","_iterator4","educationalActivity","institution","program","_templateObject12","nothing","educationTitle","_step5","interestItems","_iterator5","_templateObject14","professionalInterests","_templateObject13","_step6","_iterator6","_templateObject16","personalInterests","_templateObject15","date","_templateObject17","Birthday","getDisplayDate","toLocaleString","day","month","event","startMonthYear","start","getFullYear","end","endMonthYear","city","setTimeout","querySelectorAll","forEach","section","handleTokenOverflow","tokenLists","_loop","tokenList","_Array$from","items","overflowItems","itemRect","getBoundingClientRect","tokenListRect","maxtop","height","top","i","Array","classList","add","overflowToken","document","createElement","tabIndex","innerText","revealOverflow","remove","addEventListener","appendChild","showMoreSectionButton","endOfCard","quickMessage","expandDetailsLabel","sendMessageLabel","emailButtonLabel","callButtonLabel","chatButtonLabel","closeCardLabel","videoButtonLabel","goBackLabel","registerMgtPersonCardComponent","registerFluentComponents","fluentCard","fluentTabs","fluentTab","fluentTabPanel","fluentButton","fluentTextField","registerComponent","MgtPersonCard","registerMgtSpinnerComponent","registerMgtPersonComponent","registerMgtFileListComponent","customElements","buildComponentName","isSendingMessage","goBack","_history","historyState","pop","_currentSection","firstTab","renderRoot","querySelector","click","_cardState","_personDetails","personImage","loadSections","renderContent","internalPersonDetails","ariaLabel","image","getImage","hasTemplate","renderTemplate","closeCardTemplate","isExpanded","closeCard","Close","navigationTemplate","handleGoBack","Back","personDetailsTemplate","personTemplate","renderPerson","contactIconsTemplate","renderContactIcons","expandedDetailsTemplate","renderExpandedDetails","renderExpandedDetailsButton","_windowHeight","innerHeight","documentElement","clientHeight","Math","min","_smallView","tabLocker","lockTabNavigation","handleEndOfCard","small","endOfCardEl","blur","imageCardEl","focus","updateCurrentSection","sendQuickMessage","_assertThisInitialized","_chatInput","trim","_graph","body","clearInputData","emailUser","callUser","phones","getPersonBusinessPhones","chatUser","arguments","users","videoCallUser","showExpandedDetails","root","animate","transformOrigin","duration","easing","fill","fireCustomEvent","sendQuickMessageOnEnter","_personQuery","_userId","providerState","personQuery","personPresence","showPresence","isUser","userPerson","SmallEmail","SmallChat","video","Video","Call","ExpandDown","_isStateLoading","Providers","globalProvider","ProviderState","SignedOut","sectionNavTemplate","renderSectionNavigation","handleSectionScroll","currentSectionIndex","additionalSectionTemplates","toLowerCase","classes","active","_templateObject18","renderIcon","additionalPanelTemplates","_templateObject19","cardTitle","asFullView","overviewClasses","overviewTab","_templateObject20","Overview","renderOverviewSection","compactTemplates","_templateObject21","asCompactView","additionalDetails","splice","_templateObject22","_templateObject23","renderMessagingSection","_templateObject25","_templateObject24","chatInput","_templateObject26","target","requestUpdate","Confirmation","Send","inheritDetails","parentElement","parentPerson","provider","SignedIn","forComponent","getUserWithPhoto","findPeople","getPersonImage","then","defaultPresence","activity","availability","getUserPresence","Boolean","contactSections","_this$_cardState","MgtFileList","profileSection","number","sectionName","panels","scrollTop","deltaY","scrollHeight","stopPropagation","String"],"sourceRoot":""}