{"version":3,"file":"static/js/85.a73315cb.chunk.js","mappings":"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","sources":["../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/getMgtPersonCardScopes.ts","../../../packages/mgt-element/dist/es6/utils/src/utils/TeamsHelper.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.graph.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card-css.ts","../../../packages/mgt-components/dist/es6/components/src/components/BasePersonCardSection.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-contact/src/components/mgt-contact/mgt-contact.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-messages/src/components/mgt-messages/mgt-messages.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-organization/src/components/mgt-organization/mgt-organization.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile-css.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-profile/src/components/mgt-profile/mgt-profile.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/strings.ts","../../../packages/mgt-components/dist/es6/components/mgt-person-card/src/components/mgt-person-card/mgt-person-card.ts"],"sourcesContent":["import { MgtPersonCardConfig } from './MgtPersonCardConfig';\n\n/**\n * Scopes used to fetch data for the mgt-person-card component\n *\n * @static\n * @return {*}  {string[]}\n * @memberof MgtPersonCard\n */\n\nexport const getMgtPersonCardScopes = (): string[] => {\n  const scopes: string[] = [];\n\n  if (MgtPersonCardConfig.sections.files) {\n    scopes.push('Sites.Read.All');\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages) {\n    scopes.push('Mail.Read');\n    scopes.push('Mail.ReadBasic');\n  }\n\n  if (MgtPersonCardConfig.sections.organization) {\n    scopes.push('User.Read.All');\n\n    if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n      scopes.push('People.Read.All');\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.profile) {\n    scopes.push('User.Read.All');\n  }\n\n  if (MgtPersonCardConfig.useContactApis) {\n    scopes.push('Contacts.Read');\n  }\n\n  if (scopes.indexOf('User.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('User.ReadBasic.All');\n    scopes.push('User.Read');\n  }\n\n  if (scopes.indexOf('People.Read.All') < 0) {\n    // at minimum, we need these scopes\n    scopes.push('People.Read');\n  }\n\n  if (MgtPersonCardConfig.isSendMessageVisible) {\n    // Chat.ReadWrite can create a chat and send a message, so just request one scope instead of two\n    scopes.push('Chat.ReadWrite');\n  }\n\n  // return unique\n  return [...new Set(scopes)];\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport interface loginContext {\n  loginHint: string;\n}\n\nexport interface TeamsLib {\n  initialize(): void;\n  executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void;\n  authentication: {\n    authenticate(authConfig: {\n      failureCallback: (reason) => void;\n      successCallback: (result) => void;\n      url: string;\n    }): void;\n    getAuthToken(authCallback: { failureCallback: (reason) => void; successCallback: (result) => void }): void;\n    notifySuccess(message?: string): void;\n    notifyFailure(message: string): void;\n  };\n  getContext(callback?: (context: loginContext) => void): Promise<loginContext>;\n}\n\n/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\ntype TeamsWindow = Window &\n  typeof globalThis & {\n    microsoftTeams: TeamsLib;\n    nativeInterface: unknown;\n  };\n\n/**\n * A helper class for interacting with the Teams Client SDK.\n *\n * @export\n * @class TeamsHelper\n */\nexport class TeamsHelper {\n  /**\n   * Optional entry point to the teams library\n   * If this value is not set, the provider will attempt to use\n   * the microsoftTeams global variable.\n   *\n   * @static\n   * @type {TeamsLib}\n   * @memberof TeamsHelper\n   */\n  public static get microsoftTeamsLib(): TeamsLib {\n    return this._microsoftTeamsLib || (window as TeamsWindow).microsoftTeams;\n  }\n  public static set microsoftTeamsLib(value: TeamsLib) {\n    this._microsoftTeamsLib = value;\n  }\n\n  /**\n   * Gets whether the Teams provider can be used in the current context\n   * (Whether the app is running in Microsoft Teams)\n   *\n   * @readonly\n   * @static\n   * @memberof TeamsHelper\n   */\n  public static get isAvailable(): boolean {\n    if (!this.microsoftTeamsLib) {\n      return false;\n    }\n    if (window.parent === window.self && (window as TeamsWindow).nativeInterface) {\n      // In Teams mobile client\n      return true;\n    } else if (window.name === 'embedded-page-container' || window.name === 'extension-tab-frame') {\n      // In Teams web/desktop client\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Execute a deeplink against the Teams lib.\n   *\n   * @static\n   * @param {string} deeplink\n   * @param {(status: boolean, reason?: string) => void} [onComplete]\n   * @memberof TeamsHelper\n   */\n  public static executeDeepLink(deeplink: string, onComplete?: (status: boolean, reason?: string) => void): void {\n    const teams: TeamsLib = this.microsoftTeamsLib;\n    teams.initialize();\n    teams.executeDeepLink(deeplink, onComplete);\n  }\n\n  private static _microsoftTeamsLib: TeamsLib;\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { BatchResponse, IBatch, IGraph, prepScopes } from '@microsoft/mgt-element';\nimport { Chat, ChatMessage } from '@microsoft/microsoft-graph-types';\nimport { Profile } from '@microsoft/microsoft-graph-types-beta';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson } from '../../graph/types';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\n\nconst userProperties =\n  'businessPhones,companyName,department,displayName,givenName,jobTitle,mail,mobilePhone,officeLocation,preferredLanguage,surname,userPrincipalName,id,accountEnabled';\n\nconst batchKeys = {\n  directReports: 'directReports',\n  files: 'files',\n  messages: 'messages',\n  people: 'people',\n  person: 'person'\n};\n\n/**\n * Get data to populate the person card\n *\n * @export\n * @param {IGraph} graph\n * @param {IDynamicPerson} personDetails\n * @param {boolean} isMe\n * @param {MgtPersonCardConfig} config\n * @return {*}  {Promise<MgtPersonCardState>}\n */\nexport const getPersonCardGraphData = async (\n  graph: IGraph,\n  personDetails: IDynamicPerson,\n  isMe: boolean\n): Promise<MgtPersonCardState> => {\n  const userId = personDetails.id;\n  const email = getEmailFromGraphEntity(personDetails);\n\n  const isContactOrGroup =\n    'classification' in personDetails ||\n    ('personType' in personDetails &&\n      (personDetails.personType.subclass === 'PersonalContact' || personDetails.personType.class === 'Group'));\n\n  const batch = graph.createBatch();\n\n  if (!isContactOrGroup) {\n    if (MgtPersonCardConfig.sections.organization) {\n      buildOrgStructureRequest(batch, userId);\n\n      if (MgtPersonCardConfig.sections.organization.showWorksWith) {\n        buildWorksWithRequest(batch, userId);\n      }\n    }\n  }\n\n  if (MgtPersonCardConfig.sections.mailMessages && email) {\n    buildMessagesWithUserRequest(batch, email);\n  }\n\n  if (MgtPersonCardConfig.sections.files) {\n    buildFilesRequest(batch, isMe ? null : email);\n  }\n\n  let response: Map<string, BatchResponse>;\n  const data: MgtPersonCardState = {}; // TODO\n  try {\n    response = await batch.executeAll();\n  } catch {\n    // nop\n  }\n\n  if (response) {\n    for (const [key, value] of response) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n      data[key] = value.content?.value || value.content;\n    }\n  }\n\n  if (!isContactOrGroup && MgtPersonCardConfig.sections.profile) {\n    try {\n      const profile = await getProfile(graph, userId);\n      if (profile) {\n        data.profile = profile;\n      }\n    } catch {\n      // nop\n    }\n  }\n\n  // filter out disabled users from direct reports.\n  if (data.directReports && data.directReports.length > 0) {\n    data.directReports = data.directReports.filter(report => report.accountEnabled);\n  }\n\n  return data;\n};\n\nconst buildOrgStructureRequest = (batch: IBatch, userId: string) => {\n  const expandManagers = `manager($levels=max;$select=${userProperties})`;\n\n  batch.get(\n    batchKeys.person,\n    `users/${userId}?$expand=${expandManagers}&$select=${userProperties}&$count=true`,\n    ['user.read.all'],\n    {\n      ConsistencyLevel: 'eventual'\n    }\n  );\n\n  batch.get(batchKeys.directReports, `users/${userId}/directReports?$select=${userProperties}`);\n};\n\nconst buildWorksWithRequest = (batch: IBatch, userId: string) => {\n  batch.get(batchKeys.people, `users/${userId}/people?$filter=personType/class eq 'Person'`, ['People.Read.All']);\n};\n\nconst buildMessagesWithUserRequest = (batch: IBatch, emailAddress: string) => {\n  batch.get(batchKeys.messages, `me/messages?$search=\"from:${emailAddress}\"`, ['Mail.ReadBasic']);\n};\n\nconst buildFilesRequest = (batch: IBatch, emailAddress?: string) => {\n  let request: string;\n\n  if (emailAddress) {\n    request = `me/insights/shared?$filter=lastshared/sharedby/address eq '${emailAddress}'`;\n  } else {\n    request = 'me/insights/used';\n  }\n\n  batch.get(batchKeys.files, request, ['Sites.Read.All']);\n};\n\n/**\n * Get the profile for a user\n *\n * @param {IGraph} graph\n * @param {string} userId\n * @return {*}  {Promise<Profile>}\n */\nconst getProfile = async (graph: IGraph, userId: string): Promise<Profile> =>\n  (await graph.api(`/users/${userId}/profile`).version('beta').get()) as Profile;\n\n/**\n * Initiate a chat to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ chatType: string; members: [{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string},{\"@odata.type\": string,\"roles\": [\"owner\"],\"user@odata.bind\": string}]  }} chatData\n * @return {*}  {Promise<Chat>}\n */\nexport const createChat = async (graph: IGraph, person: string, user: string): Promise<Chat> => {\n  const chatData = {\n    chatType: 'oneonOne',\n    members: [\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${user}')`\n      },\n      {\n        '@odata.type': '#microsoft.graph.aadUserConversationMember',\n        roles: ['owner'],\n        'user@odata.bind': `https://graph.microsoft.com/v1.0/users('${person}')`\n      }\n    ]\n  };\n  return (await graph\n    .api('/chats')\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes('Chat.Create', 'Chat.ReadWrite'))\n    .post(chatData)) as Chat;\n};\n\n/**\n * Send a chat message to a user\n *\n * @export\n * @param {IGraph} graph\n * @param {{ body: {\"content\": string}  }} messageData\n * @return {*}  {Promise<ChatMessage>}\n */\nexport const sendMessage = async (\n  graph: IGraph,\n  chatId: string,\n  messageData: Pick<ChatMessage, 'body'>\n): Promise<ChatMessage> =>\n  (await graph\n    .api(`/chats/${chatId}/messages`)\n    .header('Cache-Control', 'no-store')\n    .middlewareOptions(prepScopes('Chat.ReadWrite', 'ChatMessage.Send'))\n    .post(messageData)) as ChatMessage;\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{box-shadow:var(--person-card-box-shadow,var(--elevation-shadow-card-rest));width:var(--mgt-flyout-set-width,375px);overflow:hidden;user-select:none;border-radius:8px;background-color:var(--person-card-background-color,var(--neutral-layer-floating));--file-list-background-color:transparent;--file-list-box-shadow:none;--file-item-background-color:transparent}:host .small{max-height:100vh;overflow:hidden auto}:host .nav{height:0;position:relative;z-index:100}:host .nav__back{padding-top:18px;padding-inline-start:12px;height:32px;width:32px}:host .nav__back svg{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .nav__back:hover{cursor:pointer}:host .nav__back:hover svg{fill:var(--person-card-nav-back-arrow-hover-color,var(--neutral-foreground-rest))}:host .close-card-container{position:relative;z-index:100}:host .close-card-container .close-button{position:absolute;right:10px;margin-top:9px;z-index:1;border:1px solid transparent}:host .close-card-container .close-button svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .close-card-container .close-button:hover svg path{fill:var(--person-card-close-button-hover-color,var(--neutral-foreground-rest))}:host .person-details-container{display:flex;flex-direction:column;padding-inline-start:22px;padding-block:36px;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .person-details-container .person-image{--person-avatar-top-spacing:var(--person-card-avatar-top-spacing, 15px);--person-details-left-spacing:var(--person-card-details-left-spacing, 15px);--person-details-bottom-spacing:var(--person-card-details-bottom-spacing, 0);--person-background-color:var(--person-card-background-color, var(--neutral-layer-floating));--person-line1-font-size:var(--person-card-line1-font-size, 20px);--person-line1-font-weight:var(--person-card-line1-font-weight, 600);--person-line1-text-line-height:var(--person-card-line1-line-height, 28px);--person-line1-text-color:var(--person-card-line1-text-color, var(--neutral-foreground-rest));--person-line2-font-size:var(--person-card-line2-font-size, 14px);--person-line2-font-weight:var(--person-card-line2-font-weight, 400);--person-line2-text-line-height:var(--person-card-line2-line-height, 20px);--person-line2-text-color:var(--person-card-line2-text-color, var(--neutral-foreground-hint));--person-line3-font-size:var(--person-card-line3-font-size, 14px);--person-line3-font-weight:var(--person-card-line3-font-weight, 400);--person-line3-text-line-height:var(--person-card-line3-line-height, 19px);--person-line3-text-color:var(--person-card-line3-text-color, var(--neutral-foreground-hint));--person-avatar-size:var(--person-card-avatar-size, 75px);--person-presence-wrapper-bottom:-15px}:host .person-details-container .base-icons{display:flex;align-items:center;margin-inline-start:var(--person-card-base-icons-left-spacing,calc(var(--person-card-avatar-size,75px) + var(--person-card-details-left-spacing,15px) - 8px));z-index:1}:host .person-details-container .base-icons .icon{display:flex;align-items:center;font-size:13px;white-space:nowrap}:host .person-details-container .base-icons .icon:not(:last-child){margin-inline-end:28px}:host .person-details-container .base-icons .icon svg .filled{display:none}:host .person-details-container .base-icons .icon svg .regular{display:block}:host .person-details-container .base-icons .icon svg path{fill:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .person-details-container .base-icons .icon:active svg .filled,:host .person-details-container .base-icons .icon:hover svg .filled{display:block}:host .person-details-container .base-icons .icon:active svg .regular,:host .person-details-container .base-icons .icon:hover svg .regular{display:none}:host .person-details-container .base-icons .icon:active svg path,:host .person-details-container .base-icons .icon:hover svg path{fill:var(--person-card-icon-hover-color,var(--accent-foreground-hover))}:host .expanded-details-container{display:flex;flex-direction:column;position:relative}:host .expanded-details-container .expanded-details-button{display:flex;justify-content:center;height:32px}:host .expanded-details-container .expanded-details-button svg path{stroke:var(--person-card-icon-color,var(--accent-foreground-rest))}:host .expanded-details-container .expanded-details-button:hover{cursor:pointer;background-color:var(--person-card-expanded-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section{padding:20px 0;display:flex;flex-direction:column;position:relative}:host .expanded-details-container .sections .section:not(:last-child)::after{position:absolute;content:\"\";width:90%;transform:translateX(-50%);border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest));left:50%;bottom:0}:host .expanded-details-container .sections .section__header{display:flex;flex-direction:row;padding:0 20px}:host .expanded-details-container .sections .section__title{flex-grow:1;color:var(--person-card-line1-text-color,var(--neutral-foreground-rest));font-size:14px;font-weight:600;line-height:19px}:host .expanded-details-container .sections .section__show-more{font-size:12px;font-weight:600;align-self:center;vertical-align:top;--base-height-multiplier:6}:host .expanded-details-container .sections .section__show-more:hover{background-color:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover))}:host .expanded-details-container .sections .section__content{margin-top:14px}:host .expanded-details-container .sections .section .additional-details{padding:0 20px}:host .expanded-details-container .divider{z-index:100;position:relative;width:375px;margin:0;border-style:none;border-bottom:1px solid var(--person-card-border-color,var(--neutral-stroke-rest))}:host .expanded-details-container .section-nav{height:35px}:host .expanded-details-container .section-nav fluent-tabs{grid-template-columns:minmax(1px,.1fr)}:host .expanded-details-container .section-nav fluent-tabs.horizontal::part(activeIndicator){width:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel{max-height:360px;min-height:360px;overflow:hidden auto;padding:0;scrollbar-width:thin}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted{padding:20px 0;max-width:var(--mgt-flyout-set-width,375px);min-width:var(--mgt-flyout-set-width,360px);--file-list-box-shadow:none;--file-list-padding:0}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .inserted .title{font-size:14px;font-weight:600;color:var(--title-color-subtitle,var(--neutral-foreground-rest,#1a1a1a));margin:0 20px 20px;line-height:19px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel .overview-panel{max-width:var(--mgt-flyout-set-width,375px)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-button{height:1px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-track{border-radius:10px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab-panel::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-nav fluent-tabs fluent-tab{padding-bottom:1px!important;border:1px solid transparent!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab:focus-visible{border:1px solid #2b2b2b!important}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon{cursor:pointer;box-sizing:border-box;width:53px;height:36px;display:flex;align-items:center;justify-content:center}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon svg{fill:var(--person-card-fluent-background-color,transparent)}:host .expanded-details-container .section-nav fluent-tabs fluent-tab.section-nav__icon:hover{background:var(--person-card-fluent-background-color-hover,var(--neutral-fill-hover));border-radius:4px;z-index:0;position:relative}:host .expanded-details-container .section-host{min-height:360px;overflow:hidden auto}:host .expanded-details-container .section-host::-webkit-scrollbar{height:4em;width:4px;border-radius:11px}:host .expanded-details-container .section-host::-webkit-scrollbar-button{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-track{background:#fff;border-radius:10px}:host .expanded-details-container .section-host::-webkit-scrollbar-track-piece{background:#fff}:host .expanded-details-container .section-host::-webkit-scrollbar-thumb{background:grey;border-radius:10px;height:4px}:host .expanded-details-container .section-host.small{overflow-y:hidden}:host .loading{margin:40px 20px;display:flex;justify-content:center;height:360px}:host .message-section{border-bottom:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint));display:flex}:host .message-section fluent-text-field{margin:10px 10px 10px 16px;--neutral-fill-input-rest:$person-card-background-color;--neutral-fill-input-hover:$person-card-chat-input-hover-color;--neutral-fill-input-focus:$person-card-chat-input-focus-color;width:300px;margin-inline-start:16px;border-radius:4px;border:1px solid var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section .send-message-icon{max-width:15px;margin-top:10px}:host .message-section svg{height:17px;width:16px;fill:var(--person-card-chat-input-border-color,var(--neutral-foreground-hint))}:host .message-section svg:hover{filter:brightness(.5)}:host .message-section svg:disabled{filter:none}:host .person-root.large,:host .person-root.threelines{--person-avatar-size-3-lines:75px}:host fluent-button.close-button.lightweight::part(control),:host fluent-button.expanded-details-button::part(control),:host fluent-button.section__show-more.lightweight::part(control){background:var(--person-card-fluent-background-color,transparent)}:host fluent-button.icon::part(control),:host fluent-button.nav__back::part(control){border:none;padding:0;background:0 0}:host fluent-button.icon::part(control) :hover,:host fluent-button.nav__back::part(control) :hover{background:0 0}[dir=rtl] .base-icons{right:91px}[dir=rtl] .nav__back{width:20px!important;transform:scaleX(-1);filter:fliph;filter:FlipH}[dir=rtl] .close-card-container .close-button{right:auto;left:10px}[dir=rtl] .message-section svg{transform:scale(-1,1)}@media (forced-colors:active) and (prefers-color-scheme:dark){.root{border:1px solid #fff;border-radius:inherit}.root svg,.root svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root{border:1px solid #000;border-radius:inherit}.root svg,.root svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.expanded-details-container>svg,.expanded-details-container>svg>path,svg,svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { MgtTemplatedComponent, customElementHelper, mgtHtml } from '@microsoft/mgt-element';\nimport { html, TemplateResult } from 'lit';\nimport { property } from 'lit/decorators.js';\n\nimport { IDynamicPerson } from '../graph/types';\nimport { MgtPersonCard } from './mgt-person-card/mgt-person-card';\n\nimport './sub-components/mgt-spinner/mgt-spinner';\n\n/**\n * Defines the interface for a person card section.\n * This allows us to avoid forced inheritance and allow for more flexibility in the future.\n */\nexport interface CardSection {\n  readonly cardTitle: string;\n  tagName: string;\n  asCompactView(): CardSection;\n  asFullView(): CardSection;\n  renderIcon(): TemplateResult;\n}\n\n/**\n * A base class for building person card subsections.\n *\n * @export\n * @class BasePersonCardSection\n * @extends {MgtTemplatedComponent}\n */\nexport abstract class BasePersonCardSection extends MgtTemplatedComponent implements CardSection {\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof BasePersonCardSection\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @abstract\n   * @type {string}\n   * @memberof BasePersonCardSection\n   */\n  public abstract get displayName(): string;\n\n  /**\n   * The title for using when rendering the full card.\n   *\n   * @readonly\n   * @abstract\n   * @memberof BasePersonCardSection\n   */\n  public abstract get cardTitle(): string;\n\n  /**\n   * Determines the appropriate view state: full or compact\n   *\n   * @protected\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  protected get isCompact(): boolean {\n    return this._isCompact;\n  }\n\n  private _isCompact: boolean;\n  private _personDetails: IDynamicPerson;\n\n  constructor() {\n    super();\n    this._isCompact = false;\n    this._personDetails = null;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  public abstract renderIcon(): TemplateResult;\n\n  /**\n   * Set the section to compact view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asCompactView() {\n    this._isCompact = true;\n    this.requestUpdate();\n    return this;\n  }\n\n  /**\n   * Set the section to full view mode\n   *\n   * @returns\n   * @memberof BasePersonCardSection\n   */\n  public asFullView() {\n    this._isCompact = false;\n    this.requestUpdate();\n    return this;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @abstract\n   * @memberof BasePersonCardSection\n   */\n  protected clearState(): void {\n    this._isCompact = false;\n    this._personDetails = null;\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    return this.isCompact ? this.renderCompactView() : this.renderFullView();\n  }\n\n  /**\n   * Render a spinner while the component loads state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected renderLoading(): TemplateResult {\n    return mgtHtml`\n      <div class=\"loading\">\n        <mgt-spinner></mgt-spinner>\n      </div>\n    `;\n  }\n\n  /**\n   * Render the section in a empty data state\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCardContact\n   */\n  protected renderNoData(): TemplateResult {\n    return html`\n      <div class=\"no-data\">No data</div>\n    `;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderCompactView(): TemplateResult;\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @abstract\n   * @returns {TemplateResult}\n   * @memberof BasePersonCardSection\n   */\n  protected abstract renderFullView(): TemplateResult;\n\n  /**\n   * Navigate the card to a different user.\n   *\n   * @protected\n   * @memberof BasePersonCardSection\n   */\n  protected navigateCard(person: IDynamicPerson): void {\n    // Search for card parent and update it's personDetails object\n    let parent: ParentNode = this.parentNode;\n    while (parent) {\n      parent = parent.parentNode;\n\n      const shadowRoot = parent as ShadowRoot;\n      if (shadowRoot?.host?.tagName === `${customElementHelper.prefix}-PERSON-CARD`.toUpperCase()) {\n        parent = shadowRoot.host;\n        break;\n      }\n    }\n\n    const personCard = parent as MgtPersonCard;\n    personCard.navigate(person);\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root .part{display:grid;grid-template-columns:auto 1fr auto}:host .root .part .part__icon{display:flex;min-width:20px;width:20px;height:20px;align-items:center;justify-content:center;margin-left:20px;margin-top:10px;line-height:20px}:host .root .part .part__icon svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint))}:host .root .part .part__details{margin:10px 14px;overflow:hidden}:host .root .part .part__details .part__title{font-size:12px;color:var(--contact-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .part .part__details .part__value{grid-column:2;color:var(--contact-value-color,var(--neutral-foreground-rest));font-size:14px;font-weight:400;line-height:19px}:host .root .part .part__details .part__value .part__link{color:var(--contact-link-color,var(--accent-foreground-rest));font-size:14px;cursor:pointer;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;width:100%;display:inline-block}:host .root .part .part__details .part__value .part__link:hover{color:var(--contact-link-hover-color,var(--accent-foreground-hover))}:host .root .part .part__copy{width:32px;height:100%;background-color:var(--contact-background-color,transparent);visibility:hidden;display:flex;align-items:center;justify-content:flex-start}:host .root .part .part__copy svg{fill:var(--contact-copy-icon-color,var(--neutral-foreground-hint));cursor:pointer}:host .root .part:hover .part__copy{visibility:visible}:host .root.compact{padding:0}:host .root.compact .part{height:30px;align-items:center}:host .root.compact .part__details{margin:0}:host .root.compact .part__title{display:none}:host .root.compact .part__icon{margin-top:0;margin-right:6px;margin-bottom:2px}[dir=rtl] .part__link.phone{text-align:right;direction:ltr}[dir=rtl] .part__icon{margin:10px 20px 0 0!important}[dir=rtl].compact .part__icon{margin-left:6px!important;margin-top:0!important}@media (forced-colors:active) and (prefers-color-scheme:dark){.root svg{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){.root svg{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}.root svg path,.root svg rect{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  contactSectionTitle: 'Contact',\n  emailTitle: 'Email',\n  chatTitle: 'Teams',\n  businessPhoneTitle: 'Business Phone',\n  cellPhoneTitle: 'Mobile Phone',\n  departmentTitle: 'Department',\n  titleTitle: 'Title',\n  officeLocationTitle: 'Office Location',\n  copyToClipboardButton: 'Copy to clipboard'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\nimport { TeamsHelper, error } from '@microsoft/mgt-element';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { styles } from './mgt-contact-css';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\n/**\n * Represents a contact part and its metadata\n *\n * @interface IContactPart\n */\ninterface IContactPart {\n  icon: TemplateResult;\n  title: string;\n  value?: string;\n  onClick?: (e: Event) => void;\n  showCompact: boolean;\n}\n\ntype Protocol = 'mailto:' | 'tel:';\n\nexport const registerMgtContactComponent = () => {\n  registerComponent('contact', MgtContact);\n};\n\n/**\n * The contact details subsection of the person card\n *\n * @export\n * @class MgtContact\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtContact extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Returns true if the component has data it can render\n   *\n   * @readonly\n   * @abstract\n   * @type {boolean}\n   * @memberof BasePersonCardSection\n   */\n  public get hasData(): boolean {\n    if (!this._contactParts) {\n      return false;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    return !!availableParts.length;\n  }\n\n  private readonly _person?: User;\n\n  private readonly _contactParts: Record<string, IContactPart> = {\n    email: {\n      icon: getSvg(SvgIcon.Email),\n      onClick: () => this.sendEmail(getEmailFromGraphEntity(this._person)),\n      showCompact: true,\n      title: this.strings.emailTitle\n    },\n    chat: {\n      icon: getSvg(SvgIcon.Chat),\n      onClick: () => this.sendChat(this._person?.userPrincipalName),\n      showCompact: false,\n      title: this.strings.chatTitle\n    },\n    businessPhone: {\n      icon: getSvg(SvgIcon.Phone),\n      onClick: () => this.sendCall(this._person?.businessPhones?.length > 0 ? this._person.businessPhones[0] : null),\n      showCompact: true,\n      title: this.strings.businessPhoneTitle\n    },\n    cellPhone: {\n      icon: getSvg(SvgIcon.CellPhone),\n      onClick: () => this.sendCall(this._person?.mobilePhone),\n      showCompact: true,\n      title: this.strings.cellPhoneTitle\n    },\n    department: {\n      icon: getSvg(SvgIcon.Department),\n      showCompact: false,\n      title: this.strings.departmentTitle\n    },\n    title: {\n      icon: getSvg(SvgIcon.Person),\n      showCompact: false,\n      title: this.strings.titleTitle\n    },\n    officeLocation: {\n      icon: getSvg(SvgIcon.OfficeLocation),\n      showCompact: true,\n      title: this.strings.officeLocationTitle\n    }\n  };\n\n  public constructor(person: User) {\n    super();\n    this._person = person;\n\n    this._contactParts.email.value = getEmailFromGraphEntity(this._person);\n    this._contactParts.chat.value = this._person.userPrincipalName;\n    this._contactParts.cellPhone.value = this._person.mobilePhone;\n    this._contactParts.department.value = this._person.department;\n    this._contactParts.title.value = this._person.jobTitle;\n    this._contactParts.officeLocation.value = this._person.officeLocation;\n\n    if (this._person.businessPhones?.length) {\n      this._contactParts.businessPhone.value = this._person.businessPhones[0];\n    }\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get displayName(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtContact\n   */\n  public get cardTitle(): string {\n    return this.strings.contactSectionTitle;\n  }\n\n  // Defines the skeleton for what contact fields are available and what they do.\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Contact);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  public clearState() {\n    super.clearState();\n    for (const key of Object.keys(this._contactParts)) {\n      this._contactParts[key].value = null;\n    }\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderCompactView(): TemplateResult {\n    if (!this.hasData) {\n      return null;\n    }\n\n    const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n\n    // Filter for compact mode parts with values\n    let compactParts: IContactPart[] = Object.values(availableParts).filter(\n      (p: IContactPart) => !!p.value && p.showCompact\n    );\n\n    if (!compactParts?.length) {\n      compactParts = Object.values(availableParts).slice(0, 2);\n    }\n\n    const contentTemplate = html`\n      ${compactParts.map(p => this.renderContactPart(p))}\n    `;\n\n    return html`\n      <div class=\"root compact\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.hasData) {\n      // Filter for parts with values only\n      const availableParts: IContactPart[] = Object.values(this._contactParts).filter((p: IContactPart) => !!p.value);\n      contentTemplate = html`\n        ${availableParts.map(part => this.renderContactPart(part))}\n      `;\n    }\n\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        ${contentTemplate}\n      </div>\n    `;\n  }\n\n  /**\n   * Render a specific contact part\n   *\n   * @protected\n   * @param {IContactPart} part\n   * @returns {TemplateResult}\n   * @memberof MgtContact\n   */\n  protected renderContactPart(part: IContactPart): TemplateResult {\n    let isPhone = false;\n\n    if (part.title === 'Mobile Phone' || part.title === 'Business Phone') {\n      isPhone = true;\n    }\n\n    const partLinkClasses = {\n      part__link: true,\n      phone: isPhone\n    };\n\n    const valueTemplate = part.onClick\n      ? html`\n          <span class=${classMap(partLinkClasses)} @click=${(e: Event) => part.onClick(e)}>${part.value}</span>\n        `\n      : html`\n          ${part.value}\n        `;\n\n    return html`\n      <div class=\"part\" role=\"button\" @click=${(e: MouseEvent) => this.handlePartClick(e, part.value)} tabindex=\"0\">\n        <div class=\"part__icon\" aria-label=${part.title} title=${part.title}>${part.icon}</div>\n        <div class=\"part__details\">\n          <div class=\"part__title\">${part.title}</div>\n          <div class=\"part__value\" title=${part.title}>${valueTemplate}</div>\n        </div>\n        <div\n          class=\"part__copy\"\n          aria-label=${this.strings.copyToClipboardButton}\n          title=${this.strings.copyToClipboardButton}\n        >\n          ${getSvg(SvgIcon.Copy)}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Handle the click event for contact parts\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected handlePartClick(e: MouseEvent, value: string): void {\n    if (value) {\n      void navigator.clipboard.writeText(value);\n    }\n  }\n\n  private sendLink(protocol: Protocol, resource: string): void {\n    if (resource) {\n      window.open(`${protocol}${resource}`, '_blank', 'noreferrer');\n    } else {\n      error(`Target resource for ${protocol} link was not provided: resource: ${resource}`);\n    }\n  }\n\n  /**\n   * Send a chat message to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendChat(upn: string): void {\n    if (!upn) {\n      error(\" Can't send chat when upn is not provided\");\n      return;\n    }\n\n    const url = `https://teams.microsoft.com/l/chat/0/0?users=${upn}`;\n    const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n    if (TeamsHelper.isAvailable) {\n      TeamsHelper.executeDeepLink(url, (status: boolean) => {\n        if (!status) {\n          openWindow();\n        }\n      });\n    } else {\n      openWindow();\n    }\n  }\n\n  /**\n   * Send an email to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendEmail(email: string): void {\n    this.sendLink('mailto:', email);\n  }\n\n  /**\n   * Send a call to the user\n   *\n   * @protected\n   * @memberof MgtContact\n   */\n  protected sendCall = (phone: string): void => {\n    this.sendLink('tel:', phone);\n  };\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root .message{padding:8px 20px;display:flex;align-items:center;justify-content:space-between}:host .root .message:hover{background-color:var(--message-hover-color,var(--neutral-fill-hover));cursor:pointer}:host .root .message:last-child{margin-bottom:unset}:host .root .message .message__detail{min-width:0;line-height:normal}:host .root .message .message__detail .message__subject{color:var(--message-subject-color,var(--neutral-foreground-color));font-size:var(--message-subject-font-size,14px);font-weight:var(--message-subject-font-weight,600);line-height:var(--message-subject-line-height,20px)}:host .root .message .message__detail .message__from{font-size:var(--message-subject-font-size,12px);color:var(--message-from-color,var(--neutral-foreground-color));line-height:var(--message-subject-line-height,16px);font-weight:var(--message-subject-font-weight,400)}:host .root .message .message__detail .message__message{font-size:var(--message-subject-font-size,12px);color:var(--message-color,var(--neutral-foreground-hint));line-height:var(--message-subject-line-height,16px);font-weight:var(--message-subject-font-weight,400)}:host .root .message .message__detail>div{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host .root .message .message__date{margin-top:8px;font-size:12px;color:var(--message-date,var(--neutral-foreground-hint));margin-left:10px;white-space:nowrap}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  emailsSectionTitle: 'Emails'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { Message } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getRelativeDisplayDate } from '../../utils/Utils';\nimport { styles } from './mgt-messages-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtMessagesComponent = () => registerComponent('messages', MgtMessages);\n\n/**\n * The email messages subsection of the person card\n *\n * @export\n * @class MgtMessages\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtMessages extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  private _messages: Message[];\n\n  public constructor(messages: Message[]) {\n    super();\n    this._messages = messages;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtMessages\n   */\n  public get displayName(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.emailsSectionTitle;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._messages = [];\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Messages);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  public renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      const messageTemplates = this._messages\n        ? this._messages.slice(0, 3).map(message => this.renderMessage(message))\n        : [];\n      contentTemplate = html`\n         ${messageTemplates}\n       `;\n    }\n\n    return html`\n       <div class=\"root compact\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (this.isLoadingState) {\n      contentTemplate = this.renderLoading();\n    } else if (!this._messages?.length) {\n      contentTemplate = this.renderNoData();\n    } else {\n      contentTemplate = html`\n         ${this._messages.slice(0, 5).map(message => this.renderMessage(message))}\n       `;\n    }\n\n    return html`\n       <div class=\"root\">\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a message item\n   *\n   * @protected\n   * @param {IMessage} message\n   * @returns {TemplateResult}\n   * @memberof MgtMessages\n   */\n  protected renderMessage(message: Message): TemplateResult {\n    return html`\n       <div class=\"message\" @click=${() => this.handleMessageClick(message)}>\n         <div class=\"message__detail\">\n           <div class=\"message__subject\">${message.subject}</div>\n           <div class=\"message__from\">${message.from.emailAddress.name}</div>\n           <div class=\"message__message\">${message.bodyPreview}</div>\n         </div>\n         <div class=\"message__date\">${getRelativeDisplayDate(new Date(message.receivedDateTime))}</div>\n       </div>\n     `;\n  }\n\n  private handleMessageClick(message: Message): void {\n    window.open(message.webLink, '_blank', 'noreferrer');\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none}:host .root.compact{padding:0}:host .root.compact .coworker .coworker__image{height:40px;width:40px;border-radius:40px;--avatar-size:40px;--avatar-size-s:40px;margin-right:12px}:host .root.compact .coworker .coworker__name{font-size:14px}:host .root.compact .coworker .coworker__title{font-size:12px}:host .root .subtitle{color:var(--organization-sub-title-color,var(--neutral-foreground-hint));font-size:14px;margin:0 20px 8px}:host .root .divider{display:flex;background:var(--organization-coworker-border-color,var(--neutral-stroke-rest));height:1px;margin:26px 20px 18px}:host .root .org-member{height:74px;box-sizing:border-box;border-radius:2px;padding:12px;display:flex;align-items:center;margin-left:20px;margin-right:20px}:host .root .org-member.org-member--target{background-color:var(--organization-active-org-member-target-background-color,var(--neutral-fill-active));border:1px solid var(--organization-active-org-member-border-color,var(--accent-foreground-rest))}:host .root .org-member:not(.org-member--target){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest))}:host .root .org-member:not(.org-member--target):hover{cursor:pointer;background-color:var(--organization-hover-color,var(--neutral-fill-hover))}:host .root .org-member .org-member__person{flex-grow:1}:host .root .org-member .org-member__details{flex-grow:1}:host .root .org-member .org-member__details .org-member__name{font-size:16px;color:var(--organization-title-color,var(--neutral-foreground-rest));font-weight:600}:host .root .org-member .org-member__details .org-member__department,:host .root .org-member .org-member__details .org-member__title{font-weight:14px;color:var(--organization-sub-title-color,var(--neutral-foreground-hint))}:host .root .org-member__separator:not(:last-child){border:1px solid var(--organization-coworker-border-color,var(--neutral-stroke-rest));box-sizing:border-box;width:0;margin:0 50%;height:14px}:host .root .coworker{display:flex;align-items:center;padding:10px 20px}:host .root .coworker:hover{cursor:pointer;background-color:var(--organization-coworker-hover-color,var(--neutral-fill-hover))}:host .root .coworker .coworker__person{height:46px;border-radius:46px;margin-right:8px}:host .root .direct-report__compact{padding:12px 20px}:host .root .direct-report__compact .direct-report{cursor:pointer;width:38px;margin-right:4px;display:inline;--avatar-size:38px}[dir=rtl] .org-member .org-member__more{transform:scaleX(-1);filter:fliph;filter:FlipH}@media (forced-colors:active) and (prefers-color-scheme:dark){:host svg,:host svg>path{fill:#fff!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}@media (forced-colors:active) and (prefers-color-scheme:light){:host svg,:host svg>path{fill:#000!important;fill-rule:nonzero!important;clip-rule:nonzero!important}}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  reportsToSectionTitle: 'Reports to',\n  directReportsSectionTitle: 'Direct reports',\n  organizationSectionTitle: 'Organization',\n  youWorkWithSubSectionTitle: 'You work with',\n  userWorksWithSubSectionTitle: 'works with'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { html, TemplateResult } from 'lit';\n\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { MgtPersonCardState, UserWithManager } from '../mgt-person-card/mgt-person-card.types';\nimport { styles } from './mgt-organization-css';\nimport { strings } from './strings';\nimport { ViewType } from '../../graph/types';\nimport { mgtHtml } from '@microsoft/mgt-element';\nimport { registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtPersonComponent } from '../mgt-person/mgt-person';\n\nexport const registerMgtOrganizationComponent = () => {\n  registerMgtPersonComponent();\n  registerComponent('organization', MgtOrganization);\n};\n\n/**\n * The member organization subsection of the person card\n *\n * @export\n * @class MgtOrganization\n * @extends {MgtTemplatedComponent}\n */\nexport class MgtOrganization extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * returns component strings\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  private _state: MgtPersonCardState;\n  private _me: User;\n\n  constructor(state: MgtPersonCardState, me: User) {\n    super();\n    this._state = state;\n    this._me = me;\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtPersonCardMessages\n   */\n  public clearState(): void {\n    super.clearState();\n    this._state = null;\n    this._me = null;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get displayName(): string {\n    const { person, directReports } = this._state;\n\n    if (!person.manager && directReports?.length) {\n      return `${this.strings.directReportsSectionTitle} (${directReports.length})`;\n    }\n\n    return this.strings.reportsToSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.organizationSectionTitle;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Organization);\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports } = this._state;\n\n    if (!person) {\n      return null;\n    } else if (person.manager) {\n      contentTemplate = this.renderCoworker(person.manager);\n    } else if (directReports?.length) {\n      contentTemplate = this.renderCompactDirectReports();\n    }\n\n    return html`\n        <div class=\"root compact\">\n          ${contentTemplate}\n        </div>\n      `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderFullView(): TemplateResult {\n    let contentTemplate: TemplateResult;\n\n    if (!this._state?.person) {\n      return null;\n    }\n\n    const { person, directReports, people } = this._state;\n\n    if (!person && !directReports && !people) {\n      return null;\n    } else {\n      const managerTemplates = this.renderManagers();\n      const currentUserTemplate = this.renderCurrentUser();\n      const directReportsTemplate = this.renderDirectReports();\n      const coworkersTemplate = this.renderCoworkers();\n\n      contentTemplate = html`\n          ${managerTemplates} ${currentUserTemplate} ${directReportsTemplate} ${coworkersTemplate}\n        `;\n    }\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${contentTemplate}\n       </div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManager(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"org-member\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"org-member__person\">\n          <mgt-person\n            .personDetails=${person}\n            .fetchImage=${true}\n            .view=${ViewType.twolines}\n            .showPresence=${true}\n          ></mgt-person>\n        </div>\n        <div tabindex=\"0\" class=\"org-member__more\">\n          ${getSvg(SvgIcon.ExpandRight)}\n        </div>\n      </div>\n      <div class=\"org-member__separator\"></div>\n     `;\n  }\n\n  /**\n   * Render a manager org member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderManagers(): TemplateResult[] {\n    const { person } = this._state;\n    if (!person?.manager) {\n      return null;\n    }\n\n    const managers: UserWithManager[] = [];\n    let currentManager = person;\n    while (currentManager.manager) {\n      managers.push(currentManager.manager);\n      currentManager = currentManager.manager;\n    }\n\n    if (!managers.length) {\n      return null;\n    }\n\n    return managers.reverse().map(manager => this.renderManager(manager));\n  }\n\n  /**\n   * Render a direct report\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n    if (!directReports?.length) {\n      return null;\n    }\n\n    return html`\n      <div class=\"org-member__separator\"></div>\n      <div>\n        ${directReports.map(\n          person => mgtHtml`\n            <div\n              class=\"org-member org-member--direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <div class=\"org-member__person\">\n                <mgt-person\n                  .personDetails=${person}\n                  .fetchImage=${true}\n                  .showPresence=${true}\n                  .view=${ViewType.twolines}\n                ></mgt-person>\n              </div>\n              <div tabindex=\"0\" class=\"org-member__more\">\n                ${getSvg(SvgIcon.ExpandRight)}\n              </div>\n            </div>\n            <div class=\"org-member__separator\"></div>\n          `\n        )}\n      </div>\n     `;\n  }\n\n  /**\n   * Render direct reports in compact view\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCompactDirectReports(): TemplateResult {\n    const { directReports } = this._state;\n\n    return html`\n      <div class=\"direct-report__compact\">\n        ${directReports.slice(0, 6).map(\n          person => mgtHtml`\n            <div\n              class=\"direct-report\"\n              @keydown=${(e: KeyboardEvent) => {\n                if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n              }}\n              @click=${() => this.navigateCard(person)}\n            >\n              <mgt-person\n                .personDetails=${person}\n                .fetchImage=${true}\n                .showPresence=${true}\n                .view=${ViewType.twolines}\n              ></mgt-person>\n            </div>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Render the user/self member\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCurrentUser(): TemplateResult {\n    const { person } = this._state;\n    return mgtHtml`\n       <div class=\"org-member org-member--target\">\n         <div class=\"org-member__person\">\n           <mgt-person\n             .personDetails=${person}\n             .fetchImage=${true}\n             .showPresence=${true}\n             .view=${ViewType.twolines}\n           ></mgt-person>\n         </div>\n       </div>\n     `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworker(person: User): TemplateResult {\n    return mgtHtml`\n      <div\n        class=\"coworker\"\n        @keydown=${(e: KeyboardEvent) => {\n          if (e.code === 'Enter' || e.code === ' ') this.navigateCard(person);\n        }}\n        @click=${() => this.navigateCard(person)}\n      >\n        <div class=\"coworker__person\">\n          <mgt-person\n            .personDetails=${person}\n            .fetchImage=${true}\n            .showPresence=${true}\n            .view=${ViewType.twolines}\n          ></mgt-person>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Render a coworker org member\n   *\n   * @protected\n   * @param {User} person\n   * @returns {TemplateResult}\n   * @memberof MgtOrganization\n   */\n  protected renderCoworkers(): TemplateResult {\n    const { people } = this._state;\n    if (!people?.length) {\n      return null;\n    }\n\n    const subtitle =\n      this._me.id === this._state.person.id\n        ? this.strings.youWorkWithSubSectionTitle\n        : `${this._state.person.givenName} ${this.strings.userWorksWithSubSectionTitle}`;\n\n    return html`\n       <div class=\"divider\"></div>\n       <div class=\"subtitle\" tabindex=\"0\">${subtitle}</div>\n       <div>\n         ${people.slice(0, 6).map(person => this.renderCoworker(person))}\n       </div>\n     `;\n  }\n}\n","// THIS FILE IS AUTO GENERATED\n// ANY CHANGES WILL BE LOST DURING BUILD\n// MODIFY THE .SCSS FILE INSTEAD\n\nimport { css, CSSResult } from 'lit';\n/**\n * exports lit-element css\n * @export styles\n */\nexport const styles: CSSResult[] = [\n  css`\n:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host .loading,:host .no-data{margin:0 20px;display:flex;justify-content:center}:host .no-data{font-style:normal;font-weight:600;font-size:14px;color:var(--font-color,#323130);line-height:19px}:host([hidden]){display:none}:host{display:block;font-family:var(--default-font-family, \"Segoe UI\", \"Segoe UI Web (West European)\", \"Segoe UI\", -apple-system, \"BlinkMacSystemFont\", \"Roboto\", \"Helvetica Neue\", sans-serif);font-size:var(--default-font-size,14px);--theme-primary-color:#0078d7;--theme-dark-color:#005a9e}:focus-visible{outline-color:var(--focus-ring-color,Highlight);outline-color:var(--focus-ring-color,-webkit-focus-ring-color);outline-style:var(--focus-ring-style,auto)}.ms-icon{display:inline-block;font-family:FabricMDL2Icons;font-style:normal;font-weight:400;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;margin:4px 0}.error{background-color:#fde7e9;padding-block:8px;padding-inline:8px 12px}.ms-icon-chevron-down::before{content:\"\\\\\\e70d\"}.ms-icon-chevron-up::before{content:\"\\\\\\e70e\"}.ms-icon-contact::before{content:\"\\\\\\e77b\"}.ms-icon-add-friend::before{content:\"\\\\\\e8fa\"}.ms-icon-outlook-logo-inverser::before{content:\"\\\\\\eb6d\"}:host{position:relative;user-select:none;background-color:var(--profile-background-color,--neutral-layer-1)}:host .root{padding:20px 0}:host .root.compact{padding:0}:host .root .title{font-size:14px;font-weight:600;color:var(--profile-title-color,var(--neutral-foreground-rest));margin:0 20px 12px}:host .root section{margin-bottom:24px;padding:0 20px}:host .root section:last-child{margin:0}:host .root section .section__title{font-size:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root section .section__content{display:flex;flex-direction:column;margin-top:10px}:host .root .token-list{display:flex;flex-flow:row wrap;margin-top:-10px}:host .root .token-list .token-list__item{text-overflow:ellipsis;white-space:nowrap;display:inline-block;overflow:hidden;font-size:14px;align-items:center;background:var(--profile-token-item-background-color,var(--neutral-fill-secondary-rest));border-radius:2px;max-height:28px;padding:4px 8px;margin-right:10px;margin-top:10px;color:var(--profile-token-item-color,var(--neutral-foreground-rest))}:host .root .token-list .token-list__item:last-child{margin-right:initial}:host .root .token-list .token-list__item.overflow{display:none}:host .root .token-list .token-list__item.token-list__item--show-overflow{cursor:pointer;user-select:unset;background:0 0;color:var(--profile-token-overflow-color,var(--accent-foreground-rest))}:host .root .data-list__item{margin-bottom:20px}:host .root .data-list__item:last-child{margin-bottom:initial}:host .root .data-list__item .data-list__item__header{display:flex;justify-content:space-between;align-items:center}:host .root .data-list__item .data-list__item__content{font-size:12px;line-height:16px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));margin-top:4px}:host .root .data-list__item .data-list__item__title{font-size:14px;line-height:16px;color:var(--profile-title-color,var(--neutral-foreground-rest))}:host .root .data-list__item .data-list__item__date-range{color:var(--profile-section-title-color,var(--neutral-foreground-hint));font-size:10px;line-height:12px}:host .root .language__proficiency{opacity:.77}:host .root .work-position .work-position__company{color:#023b8f}:host .root .work-position .work-position__location{font-size:10px;color:var(--profile-section-title-color,var(--neutral-foreground-hint));line-height:16px}:host .root .educational-activity .educational-activity__degree{font-size:12px;line-height:14px;color:var(--profile-section-title-color,var(--neutral-foreground-hint))}:host .root .birthday{display:flex;align-items:center;margin-top:-6px}:host .root .birthday .birthday__icon{margin-right:8px}:host .root .birthday .birthday__date{font-size:12px;color:var(--profile-title-color,var(--neutral-foreground-rest))}[dir=rtl] .token-list__item{margin-right:0!important}\n`];","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  SkillsAndExperienceSectionTitle: 'Skills & Experience',\n  AboutCompactSectionTitle: 'About',\n  SkillsSubSectionTitle: 'Skills',\n  LanguagesSubSectionTitle: 'Languages',\n  WorkExperienceSubSectionTitle: 'Work Experience',\n  EducationSubSectionTitle: 'Education',\n  professionalInterestsSubSectionTitle: 'Professional Interests',\n  personalInterestsSubSectionTitle: 'Personal Interests',\n  birthdaySubSectionTitle: 'Birthday',\n  currentYearSubtitle: 'Current',\n  socialMediaSubSectionTitle: 'Social Media'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport {\n  EducationalActivity,\n  PersonAnnualEvent,\n  PersonInterest,\n  PhysicalAddress,\n  Profile\n} from '@microsoft/microsoft-graph-types-beta';\nimport { html, TemplateResult, nothing } from 'lit';\nimport { BasePersonCardSection } from '../BasePersonCardSection';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { styles } from './mgt-profile-css';\nimport { strings } from './strings';\nimport { registerComponent } from '@microsoft/mgt-element';\n\nexport const registerMgtProfileComponent = () => registerComponent('profile', MgtProfile);\n\n/**\n * The user profile subsection of the person card\n *\n * @export\n * @class MgtProfile\n * @extends {MgtTemplatedComponent}\n *\n * @cssprop --token-overflow-color - {Color} Color of the text showing more undisplayed values i.e. +3 more\n */\nexport class MgtProfile extends BasePersonCardSection {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * The name for display in the overview section.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtProfile\n   */\n  public get displayName(): string {\n    return this.strings.SkillsAndExperienceSectionTitle;\n  }\n\n  /**\n   * The title for display when rendered as a full card.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof MgtOrganization\n   */\n  public get cardTitle(): string {\n    return this.strings.AboutCompactSectionTitle;\n  }\n\n  /**\n   * Returns true if the profile contains data\n   * that can be rendered\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof MgtProfile\n   */\n  public get hasData(): boolean {\n    if (!this.profile) {\n      return false;\n    }\n\n    const { languages, skills, positions, educationalActivities } = this.profile;\n\n    return (\n      [\n        this._birthdayAnniversary,\n        this._personalInterests?.length,\n        this._professionalInterests?.length,\n        languages?.length,\n        skills?.length,\n        positions?.length,\n        educationalActivities?.length\n      ].filter(v => !!v).length > 0\n    );\n  }\n\n  /**\n   * The user's profile metadata\n   *\n   * @protected\n   * @type {IProfile}\n   * @memberof MgtProfile\n   */\n  protected get profile(): Profile {\n    return this._profile;\n  }\n  protected set profile(value: Profile) {\n    if (value === this._profile) {\n      return;\n    }\n\n    this._profile = value;\n    this._birthdayAnniversary = value?.anniversaries ? value.anniversaries.find(this.isBirthdayAnniversary) : null;\n    this._personalInterests = value?.interests ? value.interests.filter(this.isPersonalInterest) : null;\n    this._professionalInterests = value?.interests ? value.interests.filter(this.isProfessionalInterest) : null;\n  }\n\n  private _profile: Profile;\n  private _personalInterests: PersonInterest[];\n  private _professionalInterests: PersonInterest[];\n  private _birthdayAnniversary: PersonAnnualEvent;\n\n  constructor(profile: Profile) {\n    super();\n\n    this.profile = profile;\n  }\n\n  /**\n   * Render the icon for display in the navigation ribbon.\n   *\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  public renderIcon(): TemplateResult {\n    return getSvg(SvgIcon.Profile);\n  }\n\n  /**\n   * Reset any state in the section\n   *\n   * @protected\n   * @memberof MgtProfile\n   */\n  public clearState(): void {\n    super.clearState();\n    this.profile = null;\n  }\n\n  /**\n   * Render the compact view\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderCompactView(): TemplateResult {\n    return html`\n       <div class=\"root compact\" dir=${this.direction}>\n         ${this.renderSubSections().slice(0, 2)}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the full view\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderFullView() {\n    this.initPostRenderOperations();\n\n    return html`\n       <div class=\"root\" dir=${this.direction}>\n         ${this.renderSubSections()}\n       </div>\n     `;\n  }\n\n  /**\n   * Renders all subSections of the profile\n   * Defines order of how they render\n   *\n   * @protected\n   * @return {*}\n   * @memberof MgtProfile\n   */\n  protected renderSubSections() {\n    const subSections = [\n      this.renderSkills(),\n      this.renderBirthday(),\n      this.renderLanguages(),\n      this.renderWorkExperience(),\n      this.renderEducation(),\n      this.renderProfessionalInterests(),\n      this.renderPersonalInterests()\n    ];\n\n    return subSections.filter(s => !!s);\n  }\n\n  /**\n   * Render the user's known languages\n   *\n   * @protected\n   * @returns\n   * @memberof MgtProfile\n   */\n  protected renderLanguages(): TemplateResult {\n    const { languages } = this._profile;\n    if (!languages?.length) {\n      return null;\n    }\n\n    const languageItems: TemplateResult[] = [];\n    for (const language of languages) {\n      let proficiency = null;\n      if (language.proficiency?.length) {\n        proficiency = html`\n           <span class=\"language__proficiency\" tabindex=\"0\">\n             &nbsp;(${language.proficiency})\n           </span>\n         `;\n      }\n\n      languageItems.push(html`\n         <div class=\"token-list__item language\">\n           <span class=\"language__title\" tabindex=\"0\">${language.displayName}</span>\n           ${proficiency}\n         </div>\n       `);\n    }\n\n    const languageTitle = languageItems.length ? this.strings.LanguagesSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${languageTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${languageItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's skills\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderSkills(): TemplateResult {\n    const { skills } = this._profile;\n\n    if (!skills?.length) {\n      return null;\n    }\n\n    const skillItems: TemplateResult[] = [];\n    for (const skill of skills) {\n      skillItems.push(html`\n         <div class=\"token-list__item skill\" tabindex=\"0\">\n           ${skill.displayName}\n         </div>\n       `);\n    }\n\n    const skillsTitle = skillItems.length ? this.strings.SkillsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${skillsTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${skillItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's work experience timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderWorkExperience(): TemplateResult {\n    const { positions } = this._profile;\n\n    if (!positions?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const position of this._profile.positions) {\n      if (position.detail.description || position.detail.jobTitle !== '') {\n        positionItems.push(html`\n           <div class=\"data-list__item work-position\">\n             <div class=\"data-list__item__header\">\n               <div class=\"data-list__item__title\" tabindex=\"0\">${position.detail?.jobTitle}</div>\n               <div class=\"data-list__item__date-range\" tabindex=\"0\">\n                 ${this.getDisplayDateRange(position.detail)}\n               </div>\n             </div>\n             <div class=\"data-list__item__content\">\n               <div class=\"work-position__company\" tabindex=\"0\">\n                 ${position?.detail?.company?.displayName}\n               </div>\n               <div class=\"work-position__location\" tabindex=\"0\">\n                 ${this.displayLocation(position?.detail?.company?.address)}\n               </div>\n             </div>\n           </div>\n         `);\n      }\n    }\n    const workExperienceTitle = positionItems.length ? this.strings.WorkExperienceSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${workExperienceTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's education timeline\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderEducation(): TemplateResult {\n    const { educationalActivities } = this._profile;\n\n    if (!educationalActivities?.length) {\n      return null;\n    }\n\n    const positionItems: TemplateResult[] = [];\n    for (const educationalActivity of educationalActivities) {\n      positionItems.push(html`\n         <div class=\"data-list__item educational-activity\">\n           <div class=\"data-list__item__header\">\n             <div class=\"data-list__item__title\" tabindex=\"0\">${educationalActivity.institution.displayName}</div>\n             <div class=\"data-list__item__date-range\" tabindex=\"0\">\n               ${this.getDisplayDateRange(educationalActivity)}\n             </div>\n           </div>\n           ${\n             educationalActivity.program.displayName\n               ? html`<div class=\"data-list__item__content\">\n                  <div class=\"educational-activity__degree\" tabindex=\"0\">\n                  ${educationalActivity.program.displayName}\n                </div>`\n               : nothing\n           }\n         </div>\n       `);\n    }\n\n    const educationTitle = positionItems.length ? this.strings.EducationSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${educationTitle}</div>\n         <div class=\"section__content\">\n           <div class=\"data-list\">\n             ${positionItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's professional interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderProfessionalInterests(): TemplateResult {\n    if (!this._professionalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._professionalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--professional\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const professionalInterests = interestItems.length ? this.strings.professionalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${professionalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's personal interests\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderPersonalInterests(): TemplateResult {\n    if (!this._personalInterests?.length) {\n      return null;\n    }\n\n    const interestItems: TemplateResult[] = [];\n    for (const interest of this._personalInterests) {\n      interestItems.push(html`\n         <div class=\"token-list__item interest interest--personal\" tabindex=\"0\">\n           ${interest.displayName}\n         </div>\n       `);\n    }\n\n    const personalInterests = interestItems.length ? this.strings.personalInterestsSubSectionTitle : '';\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">${personalInterests}</div>\n         <div class=\"section__content\">\n           <div class=\"token-list\">\n             ${interestItems}\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  /**\n   * Render the user's birthday\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtProfile\n   */\n  protected renderBirthday(): TemplateResult {\n    if (!this._birthdayAnniversary?.date) {\n      return null;\n    }\n\n    return html`\n       <section>\n         <div class=\"section__title\" tabindex=\"0\">Birthday</div>\n         <div class=\"section__content\">\n           <div class=\"birthday\">\n             <div class=\"birthday__icon\">\n               ${getSvg(SvgIcon.Birthday)}\n             </div>\n             <div class=\"birthday__date\" tabindex=\"0\">\n               ${this.getDisplayDate(new Date(this._birthdayAnniversary.date))}\n             </div>\n           </div>\n         </div>\n       </section>\n     `;\n  }\n\n  private readonly isPersonalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('personal');\n  };\n\n  private readonly isProfessionalInterest = (interest: PersonInterest): boolean => {\n    return interest.categories?.includes('professional');\n  };\n\n  private readonly isBirthdayAnniversary = (anniversary: PersonAnnualEvent): boolean => {\n    return anniversary.type === 'birthday';\n  };\n\n  private getDisplayDate(date: Date): string {\n    return date.toLocaleString('default', {\n      day: 'numeric',\n      month: 'long'\n    });\n  }\n\n  private getDisplayDateRange(event: EducationalActivity): string | symbol {\n    // if startMonthYear is not defined, we do not show the date range (otherwise it will always start with 1970)\n    if (!event.startMonthYear) {\n      return nothing;\n    }\n\n    const start = new Date(event.startMonthYear).getFullYear();\n    // if the start year is 0 or 1 - it's probably an error or a strange \"undefined\"-value\n    if (start === 0 || start === 1) {\n      return nothing;\n    }\n\n    const end = event.endMonthYear ? new Date(event.endMonthYear).getFullYear() : this.strings.currentYearSubtitle;\n    return `${start} — ${end}`;\n  }\n\n  private displayLocation(address: PhysicalAddress | undefined): string | symbol {\n    if (address?.city) {\n      if (address.state) {\n        return `${address.city}, ${address.state}`;\n      }\n      return address.city;\n    }\n    return nothing;\n  }\n\n  private initPostRenderOperations(): void {\n    setTimeout(() => {\n      try {\n        const sections = this.shadowRoot.querySelectorAll('section');\n        sections.forEach(section => {\n          // Perform post render operations per section\n          this.handleTokenOverflow(section);\n        });\n      } catch {\n        // An exception may occur if the component is suddenly removed during post render operations.\n      }\n    }, 0);\n  }\n\n  private handleTokenOverflow(section: HTMLElement): void {\n    const tokenLists = section.querySelectorAll('.token-list');\n    if (!tokenLists?.length) {\n      return;\n    }\n\n    for (const tokenList of Array.from(tokenLists)) {\n      const items = tokenList.querySelectorAll('.token-list__item');\n      if (!items?.length) {\n        continue;\n      }\n\n      let overflowItems: Element[] = null;\n      let itemRect = items[0].getBoundingClientRect();\n      const tokenListRect = tokenList.getBoundingClientRect();\n      const maxtop = itemRect.height * 2 + tokenListRect.top;\n\n      // Use (items.length - 1) to prevent [+1 more] from appearing.\n      for (let i = 0; i < items.length - 1; i++) {\n        itemRect = items[i].getBoundingClientRect();\n        if (itemRect.top > maxtop) {\n          overflowItems = Array.from(items).slice(i, items.length);\n          break;\n        }\n      }\n\n      if (overflowItems) {\n        overflowItems.forEach(i => i.classList.add('overflow'));\n\n        const overflowToken = document.createElement('div');\n        overflowToken.classList.add('token-list__item');\n        overflowToken.classList.add('token-list__item--show-overflow');\n        overflowToken.tabIndex = 0;\n        overflowToken.innerText = `+ ${overflowItems.length} more`;\n\n        // On click or enter(accessibility), remove [+n more] token and reveal the hidden overflow tokens.\n        const revealOverflow = () => {\n          overflowToken.remove();\n          overflowItems.forEach(i => i.classList.remove('overflow'));\n        };\n        overflowToken.addEventListener('click', () => {\n          revealOverflow();\n        });\n        overflowToken.addEventListener('keydown', (e: KeyboardEvent) => {\n          if (e.code === 'Enter') {\n            revealOverflow();\n          }\n        });\n        tokenList.appendChild(overflowToken);\n      }\n    }\n  }\n}\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nexport const strings = {\n  showMoreSectionButton: 'Show more',\n  endOfCard: 'End of the card',\n  quickMessage: 'Send a quick message',\n  expandDetailsLabel: 'Expand details',\n  sendMessageLabel: 'Send message',\n  emailButtonLabel: 'Email',\n  callButtonLabel: 'Call',\n  chatButtonLabel: 'Chat',\n  closeCardLabel: 'Close card',\n  videoButtonLabel: 'Video',\n  goBackLabel: 'Go Back'\n};\n","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { html, nothing, TemplateResult } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport {\n  MgtTemplatedComponent,\n  Providers,\n  ProviderState,\n  TeamsHelper,\n  mgtHtml,\n  customElementHelper\n} from '@microsoft/mgt-element';\nimport { IGraph } from '@microsoft/mgt-element';\nimport { Presence, User, Person } from '@microsoft/microsoft-graph-types';\n\nimport { findPeople, getEmailFromGraphEntity } from '../../graph/graph.people';\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { getPersonImage } from '../../graph/graph.photos';\nimport { getUserWithPhoto } from '../../graph/graph.userWithPhoto';\nimport { getSvg, SvgIcon } from '../../utils/SvgHelper';\nimport { getUserPresence } from '../../graph/graph.presence';\nimport { getPersonCardGraphData, createChat, sendMessage } from './mgt-person-card.graph';\nimport { MgtPerson, registerMgtPersonComponent } from '../mgt-person/mgt-person';\nimport { styles } from './mgt-person-card-css';\nimport { MgtContact, registerMgtContactComponent } from '../mgt-contact/mgt-contact';\nimport { MgtFileList, registerMgtFileListComponent } from '../mgt-file-list/mgt-file-list';\nimport { MgtMessages, registerMgtMessagesComponent } from '../mgt-messages/mgt-messages';\nimport { MgtOrganization, registerMgtOrganizationComponent } from '../mgt-organization/mgt-organization';\nimport { MgtProfile, registerMgtProfileComponent } from '../mgt-profile/mgt-profile';\nimport { MgtPersonCardState } from './mgt-person-card.types';\nimport { MgtPersonCardConfig } from './MgtPersonCardConfig';\nimport { getMgtPersonCardScopes } from './getMgtPersonCardScopes';\nimport { strings } from './strings';\nimport { isUser } from '../../graph/entityType';\n\nimport '../sub-components/mgt-spinner/mgt-spinner';\n\nexport * from './mgt-person-card.types';\n\nimport {\n  fluentTabs,\n  fluentTab,\n  fluentTabPanel,\n  fluentButton,\n  fluentTextField,\n  fluentCard\n} from '@fluentui/web-components';\nimport { registerFluentComponents } from '../../utils/FluentComponents';\nimport { BasePersonCardSection, CardSection } from '../BasePersonCardSection';\nimport { buildComponentName, registerComponent } from '@microsoft/mgt-element';\nimport { registerMgtSpinnerComponent } from '../sub-components/mgt-spinner/mgt-spinner';\nimport { IHistoryClearer, IExpandable } from './types';\n\ninterface MgtPersonCardStateHistory {\n  state: MgtPersonCardState;\n  personDetails: IDynamicPerson;\n  personImage: string;\n}\n\nexport const registerMgtPersonCardComponent = () => {\n  registerFluentComponents(fluentCard, fluentTabs, fluentTab, fluentTabPanel, fluentButton, fluentTextField);\n  // register self first to avoid infinite loop due to circular ref between person and person card and organization\n  registerComponent('person-card', MgtPersonCard);\n\n  registerMgtSpinnerComponent();\n  // these components newed up rather than created declaratively\n  registerMgtContactComponent();\n  registerMgtOrganizationComponent();\n  registerMgtMessagesComponent();\n  registerMgtFileListComponent();\n  registerMgtProfileComponent();\n  // only register person if not already registered\n  if (!customElements.get(buildComponentName('person'))) registerMgtPersonComponent();\n};\n\n/**\n * Web Component used to show detailed data for a person in the Microsoft Graph\n *\n * @export\n * @class MgtPersonCard\n * @extends {MgtTemplatedComponent}\n *\n * @fires {CustomEvent<null>} expanded - Fired when expanded details section is opened\n *\n * @cssprop --person-card-line1-font-size - {Length} Font size of line 1\n * @cssprop --person-card-line1-font-weight - {FontWeight} Font weight of line 1\n * @cssprop --person-card-line1-line-height - {Length} Line height of line 1\n * @cssprop --person-card-line2-font-size - {Length} Font size of line 2\n * @cssprop --person-card-line2-font-weight - {FontWeight} Font weight of line 2\n * @cssprop --person-card-line2-line-height - {Length} Line height of line 2\n * @cssprop --person-card-line3-font-size - {Length} Font size of line 3\n * @cssprop --person-card-line3-font-weight - {FontWeight} Font weight of line 3\n * @cssprop --person-card-line3-line-height - {Length} Line height of line 3\n * @cssprop --person-card-avatar-size - {Length} Width and height of the avatar. Default is 75px\n * @cssprop --person-card-details-left-spacing - {Length} The space between the avatar and the person details. Default is 15px\n * @cssprop --person-card-avatar-top-spacing - {Length} The margin top of the avatar in person-card component\n * @cssprop --person-card-details-bottom-spacing - {Length} The margin bottom of the person details in person-card component\n * @cssprop --person-card-base-icons-left-spacing - {Length} The margin-inline-start of the base-icons in person-card component\n * @cssprop --person-card-background-color - {Color} The color of the person-card-component\n * @cssprop --person-card-expanded-background-color-hover - {Color} The hover color of the expanded details button of the person card component\n * @cssprop --person-card-nav-back-arrow-hover-color - {Color} The hover color of the back arrow of the person card component\n * @cssprop --person-card-icon-color - {Color} The color of the icons in the person card component\n * @cssprop --person-card-icon-hover-color - {Color} The hover color of the icons in the person card component\n * @cssprop --person-card-show-more-color - {Color} The color of the show more text in the person card component\n * @cssprop --person-card-show-more-hover-color - {Color} The hover color of the show more text in person card component\n * @cssprop --person-card-fluent-background-color - {Color} The background color of the fluent buttons in person card component\n * @cssprop --person-card-line1-text-color - {Color} The color of line 1 in person card\n * @cssprop --person-card-line2-text-color - {Color} The color of line 2 in person card\n * @cssprop --person-card-line3-text-color - {Color} The color of line 3 in person card\n * @cssprop --person-card-fluent-background-color-hover - {Color} The hover background color of the fluent buttons in person card component\n * @cssprop --person-card-chat-input-hover-color - {Color} The chat input hover color\n * @cssprop --person-card-chat-input-focus-color - {Color} The chat input focus color\n */\nexport class MgtPersonCard extends MgtTemplatedComponent implements IHistoryClearer, IExpandable {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  /**\n   * Strings to use for localization\n   *\n   * @readonly\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Get the scopes required for the person card\n   * The scopes depend on what sections are shown\n   *\n   * Use the `MgtPersonCard.config` object to configure\n   * what sections are shown\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPersonCard\n   */\n  public static get requiredScopes(): string[] {\n    return getMgtPersonCardScopes();\n  }\n\n  /**\n   * Set the person details to render\n   *\n   * @type {IDynamicPerson}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-details',\n    type: Object\n  })\n  public get personDetails(): IDynamicPerson {\n    return this._personDetails;\n  }\n  public set personDetails(value: IDynamicPerson) {\n    if (this._personDetails === value) {\n      return;\n    }\n\n    this._personDetails = value;\n    this.personImage = this.getImage();\n    void this.requestStateUpdate();\n  }\n  /**\n   * allows developer to define name of person for component\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'person-query'\n  })\n  public personQuery: string;\n\n  /**\n   * allows the locking of navigation using tabs to not flow out of the card section\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'lock-tab-navigation',\n    type: Boolean\n  })\n  public lockTabNavigation: boolean;\n\n  /**\n   * user-id property allows developer to use id value for component\n   *\n   * @type {string}\n   */\n  @property({\n    attribute: 'user-id'\n  })\n  public get userId(): string {\n    return this._userId;\n  }\n  public set userId(value: string) {\n    if (value === this._userId) {\n      return;\n    }\n    this._userId = value;\n    this.personDetails = null;\n    this._cardState = null;\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Set the image of the person\n   * Set to '@' to look up image from the graph\n   *\n   * @type {string}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'person-image',\n    type: String\n  })\n  public personImage: string;\n\n  /**\n   * Sets whether the person image should be fetched\n   * from the Microsoft Graph based on the personDetails\n   * provided by the user\n   *\n   * @type {boolean}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'fetch-image',\n    type: Boolean\n  })\n  public fetchImage: boolean;\n\n  /**\n   * Gets or sets whether expanded details section is rendered\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'is-expanded',\n    type: Boolean\n  })\n  public isExpanded: boolean;\n\n  /**\n   * Gets or sets whether person details should be inherited from an mgt-person parent\n   * Useful when used as template in an mgt-person component\n   *\n   * @type {boolean}\n   * @memberof MgtPersonCard\n   */\n  @property({\n    attribute: 'inherit-details',\n    type: Boolean\n  })\n  public inheritDetails: boolean;\n\n  /**\n   * determines if person card component renders presence\n   *\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'show-presence',\n    type: Boolean\n  })\n  public showPresence: boolean;\n\n  /**\n   * Gets or sets presence of person\n   *\n   * @type {MicrosoftGraph.Presence}\n   * @memberof MgtPerson\n   */\n  @property({\n    attribute: 'person-presence',\n    type: Object\n  })\n  public personPresence: Presence;\n\n  @state()\n  private isSending = false;\n\n  /**\n   * The subsections for display in the lower part of the card\n   *\n   * @protected\n   * @type {any[]}\n   * @memberof MgtPersonCard\n   */\n  protected sections: CardSection[];\n\n  @state() private _cardState: MgtPersonCardState;\n  @state() private _isStateLoading: boolean;\n\n  private _history: MgtPersonCardStateHistory[];\n  private _chatInput: string;\n  private _currentSection: CardSection;\n  private _personDetails: IDynamicPerson;\n  private _me: User;\n  private _smallView: boolean;\n  private _windowHeight;\n\n  private _userId: string;\n  private _graph: IGraph;\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private get internalPersonDetails(): IDynamicPerson {\n    return this._cardState?.person || this.personDetails;\n  }\n\n  constructor() {\n    super();\n    this._chatInput = '';\n    this._currentSection = null;\n    this._history = [];\n    this.sections = [];\n    this._graph = null;\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * @param {*} name\n   * @param {*} oldValue\n   * @param {*} newValue\n   * @memberof MgtPersonCard\n   */\n  public attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n\n    if (oldValue === newValue) {\n      return;\n    }\n\n    switch (name) {\n      case 'person-query':\n        this.personDetails = null;\n        this._cardState = null;\n        void this.requestStateUpdate();\n        break;\n    }\n  }\n\n  /**\n   * Navigate the card to a different person.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  public navigate(person: IDynamicPerson): void {\n    this._history.push({\n      personDetails: this.personDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n\n    this._personDetails = person;\n    this._cardState = null;\n    this.personImage = null;\n    this._currentSection = null;\n    this.sections = [];\n    this._chatInput = '';\n    void this.requestStateUpdate();\n  }\n\n  /**\n   * Navigate the card back to the previous person\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public goBack = (): void => {\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history.pop();\n    this._currentSection = null;\n\n    // resets to first tab being selected\n    const firstTab: HTMLElement = this.renderRoot.querySelector('fluent-tab');\n    if (firstTab) {\n      firstTab.click();\n    }\n    this._cardState = historyState.state;\n    this._personDetails = historyState.state.person;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  };\n\n  /**\n   * Navigate the card back to first person and clear history\n   *\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  public clearHistory(): void {\n    this._currentSection = null;\n\n    if (!this._history?.length) {\n      return;\n    }\n\n    const historyState = this._history[0];\n    this._history = [];\n\n    this._cardState = historyState.state;\n    this._personDetails = historyState.personDetails;\n    this.personImage = historyState.personImage;\n    this.loadSections();\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render() {\n    // Handle no data\n    if (!this.internalPersonDetails) {\n      return this.renderNoData();\n    }\n\n    const person = this.internalPersonDetails;\n    const image = this.getImage();\n\n    // Check for a default template.\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/dot-notation\n    if (this.hasTemplate('default')) {\n      return this.renderTemplate('default', {\n        person: this.internalPersonDetails,\n        personImage: image\n      });\n    }\n\n    let ariaLabel: string;\n\n    ariaLabel = this.strings.closeCardLabel;\n\n    const closeCardTemplate = this.isExpanded\n      ? html`\n           <div class=\"close-card-container\">\n             <fluent-button \n              appearance=\"lightweight\" \n              class=\"close-button\" \n              aria-label=${ariaLabel}\n              @click=${this.closeCard} >\n               ${getSvg(SvgIcon.Close)}\n             </fluent-button>\n           </div>\n         `\n      : null;\n\n    ariaLabel = this.strings.goBackLabel;\n    const navigationTemplate = this._history?.length\n      ? html`\n            <div class=\"nav\">\n              <fluent-button \n                appearance=\"lightweight\"\n                class=\"nav__back\" \n                aria-label=${ariaLabel} \n                @keydown=${this.handleGoBack}\n                @click=${this.goBack}>${getSvg(SvgIcon.Back)}\n               </fluent-button>\n            </div>\n          `\n      : null;\n\n    // Check for a person-details template\n    let personDetailsTemplate = this.renderTemplate('person-details', {\n      person: this.internalPersonDetails,\n      personImage: image\n    });\n    if (!personDetailsTemplate) {\n      const personTemplate = this.renderPerson();\n      const contactIconsTemplate = this.renderContactIcons(person);\n\n      personDetailsTemplate = html`\n         ${personTemplate} ${contactIconsTemplate}\n       `;\n    }\n\n    const expandedDetailsTemplate = this.isExpanded ? this.renderExpandedDetails() : this.renderExpandedDetailsButton();\n    this._windowHeight =\n      window.innerHeight && document.documentElement.clientHeight\n        ? Math.min(window.innerHeight, document.documentElement.clientHeight)\n        : window.innerHeight || document.documentElement.clientHeight;\n\n    if (this._windowHeight < 250) {\n      this._smallView = true;\n    }\n    const tabLocker = this.lockTabNavigation\n      ? html`<div @keydown=${this.handleEndOfCard} aria-label=${this.strings.endOfCard} tabindex=\"0\" id=\"end-of-container\"></div>`\n      : html``;\n    return html`\n      <div class=\"root\" dir=${this.direction}>\n        <div class=${classMap({ small: this._smallView })}>\n          ${navigationTemplate}\n          ${closeCardTemplate}\n          <div class=\"person-details-container\">${personDetailsTemplate}</div>\n          <div class=\"expanded-details-container\">${expandedDetailsTemplate}</div>\n          ${tabLocker}\n        </div>\n      </div>\n     `;\n  }\n\n  private readonly handleEndOfCard = (e: KeyboardEvent) => {\n    if (e && e.code === 'Tab') {\n      const endOfCardEl = this.renderRoot.querySelector<HTMLElement>('#end-of-container');\n      if (endOfCardEl) {\n        endOfCardEl.blur();\n        const imageCardEl = this.renderRoot.querySelector<HTMLElement>('mgt-person');\n        if (imageCardEl) {\n          imageCardEl.focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected closeCard = () => {\n    // reset tabs\n    this.updateCurrentSection(null);\n    this.isExpanded = false;\n  };\n\n  /**\n   * Render the state when no data is available.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderNoData(): TemplateResult {\n    return this.renderTemplate('no-data', null) || html``;\n  }\n\n  /**\n   * Render a display image for the person.\n   *\n   * @protected\n   * @param {*} image\n   * @memberof MgtPersonCard\n   */\n  protected renderPerson(): TemplateResult {\n    return mgtHtml`\n      <mgt-person\n        tabindex=\"0\"\n        class=\"person-image\"\n        .personDetails=${this.internalPersonDetails}\n        .personImage=${this.getImage()}\n        .personPresence=${this.personPresence}\n        .showPresence=${this.showPresence}\n        .view=${ViewType.threelines}\n      ></mgt-person>\n    `;\n  }\n\n  /**\n   * Render person subtitle.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderPersonSubtitle(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    if (!isUser(person) || !person.department) {\n      return;\n    }\n    return html`\n       <div class=\"department\">${person.department}</div>\n     `;\n  }\n\n  /**\n   * Render the various icons for contacting the person.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderContactIcons(person?: IDynamicPerson): TemplateResult {\n    person = person || this.internalPersonDetails;\n    const userPerson = person as User;\n\n    let ariaLabel: string;\n\n    // Email\n    let email: TemplateResult;\n    if (getEmailFromGraphEntity(person)) {\n      ariaLabel = `${this.strings.emailButtonLabel} ${person.displayName}`;\n      email = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.emailUser}>\n          ${getSvg(SvgIcon.SmallEmail)}\n        </fluent-button>\n      `;\n    }\n\n    // Chat\n    let chat: TemplateResult;\n    if (userPerson?.userPrincipalName) {\n      ariaLabel = `${this.strings.chatButtonLabel} ${person.displayName}`;\n      chat = html`\n        <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.chatUser}>\n          ${getSvg(SvgIcon.SmallChat)}\n        </fluent-button>\n       `;\n    }\n\n    // Video\n\n    ariaLabel = `${this.strings.videoButtonLabel} ${person.displayName}`;\n    const video: TemplateResult = html`\n      <fluent-button class=\"icon\"\n        aria-label=${ariaLabel}\n        @click=${this.videoCallUser}>\n        ${getSvg(SvgIcon.Video)}\n      </fluent-button>\n    `;\n\n    // Call\n    let call: TemplateResult;\n    if (userPerson.userPrincipalName) {\n      ariaLabel = `${this.strings.callButtonLabel} ${person.displayName}`;\n      call = html`\n         <fluent-button class=\"icon\"\n          aria-label=${ariaLabel}\n          @click=${this.callUser}>\n          ${getSvg(SvgIcon.Call)}\n        </fluent-button>\n       `;\n    }\n\n    return html`\n       <div class=\"base-icons\">\n         ${email} ${chat} ${video} ${call}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the button used to expand the expanded details.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetailsButton(): TemplateResult {\n    return html`\n      <fluent-button\n        aria-label=${this.strings.expandDetailsLabel}\n        class=\"expanded-details-button\"\n        @click=${this.showExpandedDetails}\n      >\n        ${getSvg(SvgIcon.ExpandDown)}\n      </fluent-button>\n     `;\n  }\n\n  /**\n   * Render expanded details.\n   *\n   * @protected\n   * @param {IDynamicPerson} [person]\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderExpandedDetails(): TemplateResult {\n    if (!this._cardState && this._isStateLoading) {\n      return mgtHtml`\n         <div class=\"loading\">\n           <mgt-spinner></mgt-spinner>\n         </div>\n       `;\n    }\n    // load sections when details are expanded\n    // when not singed in\n    const provider = Providers.globalProvider;\n    if (provider.state === ProviderState.SignedOut) {\n      this.loadSections();\n    }\n\n    const sectionNavTemplate = this.renderSectionNavigation();\n\n    return html`\n      <div class=\"section-nav\">\n        ${sectionNavTemplate}\n      </div>\n      <hr class=\"divider\"/>\n      <div\n        class=\"section-host ${this._smallView ? 'small' : ''} ${this._smallView ? 'small' : ''}\"\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n        tabindex=0\n      ></div>\n    `;\n  }\n\n  /**\n   * Render the navigation ribbon for subsections\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderSectionNavigation(): TemplateResult {\n    if (!this.sections || (this.sections.length < 2 && !this.hasTemplate('additional-details'))) {\n      return;\n    }\n\n    const currentSectionIndex = this._currentSection ? this.sections.indexOf(this._currentSection) : -1;\n\n    const additionalSectionTemplates = this.sections.map((section, i) => {\n      const name = section.tagName.toLowerCase();\n      const classes = classMap({\n        active: i === currentSectionIndex,\n        'section-nav__icon': true\n      });\n\n      return html`\n        <fluent-tab\n          id=\"${name}-Tab\"\n          class=${classes}\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(section)}\"\n          @click=${() => this.updateCurrentSection(section)}\n        >\n          ${section.renderIcon()}\n        </fluent-tab>\n      `;\n    });\n\n    const additionalPanelTemplates = this.sections.map(section => {\n      return html`\n        <fluent-tab-panel slot=\"tabpanel\">\n          <div class=\"inserted\">\n            <div class=\"title\">${section.cardTitle}</div>\n            ${this._currentSection ? section.asFullView() : null}\n          </div>\n        </fluent-tab-panel>\n      `;\n    });\n\n    const overviewClasses = classMap({\n      active: currentSectionIndex === -1,\n      'section-nav__icon': true,\n      overviewTab: true\n    });\n\n    return html`\n      <fluent-tabs\n        orientation=\"horizontal\"\n        activeindicator\n        @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}\n      >\n        <fluent-tab\n          class=\"${overviewClasses}\"\n          slot=\"tab\"\n          @keyup=\"${() => this.updateCurrentSection(null)}\"\n          @click=${() => this.updateCurrentSection(null)}\n        >\n          <div>${getSvg(SvgIcon.Overview)}</div>\n        </fluent-tab>\n        ${additionalSectionTemplates}\n        <fluent-tab-panel slot=\"tabpanel\" >\n          <div class=\"overview-panel\">${!this._currentSection ? this.renderOverviewSection() : null}</div>\n        </fluent-tab-panel>\n        ${additionalPanelTemplates}\n      </fluent-tabs>\n    `;\n  }\n\n  /**\n   * Render the default section with compact views for each subsection.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderOverviewSection(): TemplateResult {\n    const compactTemplates = this.sections.map(\n      (section: BasePersonCardSection) => html`\n        <div class=\"section\">\n          <div class=\"section__header\">\n            <div class=\"section__title\" tabindex=0>${section.displayName}</div>\n              <fluent-button\n                appearance=\"lightweight\"\n                class=\"section__show-more\"\n                @click=${() => this.updateCurrentSection(section)}\n              >\n                ${this.strings.showMoreSectionButton}\n              </fluent-button>\n          </div>\n          <div class=\"section__content\">${section.asCompactView()}</div>\n        </div>\n      `\n    );\n\n    const additionalDetails = this.renderTemplate('additional-details', {\n      person: this.internalPersonDetails,\n      personImage: this.getImage(),\n      state: this._cardState\n    });\n    if (additionalDetails) {\n      compactTemplates.splice(\n        1,\n        0,\n        html`\n           <div class=\"section\">\n             <div class=\"additional-details\">${additionalDetails}</div>\n           </div>\n         `\n      );\n    }\n\n    return html`\n       <div class=\"sections\">\n          ${this.renderMessagingSection()}\n          ${compactTemplates}\n       </div>\n     `;\n  }\n\n  /**\n   * Render the actively selected section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderCurrentSection(): TemplateResult {\n    if (!this.sections?.length && !this.hasTemplate('additional-details')) {\n      return;\n    }\n\n    if (this.sections.length === 1 && !this.hasTemplate('additional-details')) {\n      return html`\n         ${this.sections[0].asFullView()}\n       `;\n    }\n\n    if (!this._currentSection) {\n      return this.renderOverviewSection();\n    }\n\n    return html`\n       ${this._currentSection.asFullView()}\n     `;\n  }\n\n  /**\n   * Render the messaging section.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPersonCard\n   */\n  protected renderMessagingSection() {\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    const chatInput = this._chatInput;\n    if (person?.userPrincipalName === user) {\n      return;\n    } else {\n      return MgtPersonCardConfig.isSendMessageVisible\n        ? html`\n      <div class=\"message-section\">\n        <fluent-text-field\n          autocomplete=\"off\"\n          appearance=\"outline\"\n          placeholder=\"${this.strings.quickMessage}\"\n          .value=${chatInput}\n          @input=${(e: Event) => {\n            this._chatInput = (e.target as HTMLInputElement).value;\n            this.requestUpdate();\n          }}\n          @keydown=\"${(e: KeyboardEvent) => this.sendQuickMessageOnEnter(e)}\">\n        </fluent-text-field>\n        <fluent-button class=\"send-message-icon\"\n          aria-label=${this.strings.sendMessageLabel}\n          @click=${this.sendQuickMessage}\n          ?disabled=${this.isSending}>\n          ${!this.isSending ? getSvg(SvgIcon.Send) : getSvg(SvgIcon.Confirmation)}\n        </fluent-button>\n      </div>\n      `\n        : nothing;\n    }\n  }\n\n  /**\n   * load state into the component\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPersonCard\n   */\n  protected async loadState() {\n    if (this._cardState) {\n      return;\n    }\n\n    if (!this.personDetails && this.inheritDetails) {\n      // User person details inherited from parent tree\n      let parent = this.parentElement;\n      while (parent && parent.tagName !== `${customElementHelper.prefix}-PERSON`.toUpperCase()) {\n        parent = parent.parentElement;\n      }\n\n      const parentPerson: IDynamicPerson =\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        (parent as MgtPerson).personDetails || (parent as MgtPerson)['personDetailsInternal'];\n\n      if (parent && parentPerson) {\n        this.personDetails = parentPerson;\n        this.personImage = (parent as MgtPerson).personImage;\n      }\n    }\n\n    const provider = Providers.globalProvider;\n\n    // check if user is signed in\n    if (!provider || provider.state !== ProviderState.SignedIn) {\n      return;\n    }\n\n    const graph = provider.graph.forComponent(this);\n    this._graph = graph;\n\n    this._isStateLoading = true;\n\n    if (!this._me) {\n      this._me = await Providers.me();\n    }\n\n    // check if personDetail already populated\n    if (this.personDetails) {\n      const user = this.personDetails;\n      let id: string;\n      if (isUser(user)) {\n        id = user.userPrincipalName || user.id;\n      }\n\n      // if we have an id but no email, we should get data from the graph\n      // in some graph calls, the user object does not contain the email\n      if (id && !getEmailFromGraphEntity(user)) {\n        const person = await getUserWithPhoto(graph, id);\n        this.personDetails = person;\n        this.personImage = this.getImage();\n      }\n    } else if (this.userId || this.personQuery === 'me') {\n      // Use userId or 'me' query to get the person and image\n      const person = await getUserWithPhoto(graph, this.userId);\n      this.personDetails = person;\n      this.personImage = this.getImage();\n    } else if (this.personQuery) {\n      // Use the personQuery to find our person.\n      const people = await findPeople(graph, this.personQuery, 1);\n\n      if (people?.length) {\n        this.personDetails = people[0];\n        await getPersonImage(graph, this.personDetails, MgtPersonCardConfig.useContactApis).then(image => {\n          if (image) {\n            this.personDetails.personImage = image;\n            this.personImage = image;\n          }\n        });\n      }\n    }\n\n    // populate presence\n    const defaultPresence = {\n      activity: 'Offline',\n      availability: 'Offline',\n      id: null\n    };\n    if (!this.personPresence && this.showPresence) {\n      try {\n        if (this.personDetails?.id) {\n          this.personPresence = await getUserPresence(graph, this.personDetails.id);\n        } else {\n          this.personPresence = defaultPresence;\n        }\n      } catch (_) {\n        // set up a default Presence in case beta api changes or getting error code\n        this.personPresence = defaultPresence;\n      }\n    }\n\n    // populate state\n    if (this.personDetails?.id) {\n      this._cardState = await getPersonCardGraphData(graph, this.personDetails, this._me === this.personDetails.id);\n    }\n\n    this.loadSections();\n\n    this._isStateLoading = false;\n  }\n\n  /**\n   * Send a chat message to the user from the quick message input.\n   *\n   * @protected\n   * @returns {void}\n   * @memberof MgtPersonCard\n   */\n  protected sendQuickMessage = async (): Promise<void> => {\n    const message = this._chatInput.trim();\n    if (!message?.length) {\n      return;\n    }\n    const person = this.personDetails as User;\n    const user = this._me.userPrincipalName;\n    this.isSending = true;\n\n    const chat = await createChat(this._graph, person.userPrincipalName, user);\n\n    const messageData = {\n      body: {\n        content: message\n      }\n    };\n    await sendMessage(this._graph, chat.id, messageData);\n    this.isSending = false;\n    this.clearInputData();\n  };\n\n  /**\n   * Use the mailto: protocol to initiate a new email to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected emailUser = () => {\n    const user = this.internalPersonDetails;\n    if (user) {\n      const email = getEmailFromGraphEntity(user);\n      if (email) {\n        window.open('mailto:' + email, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  private get hasPhone(): boolean {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n    return Boolean(user?.businessPhones?.length) || Boolean(person?.phones?.length);\n  }\n\n  /**\n   * Use the tel: protocol to initiate a new call to the user.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected callUser = () => {\n    const user = this.personDetails as User;\n    const person = this.personDetails as microsoftgraph.Person;\n\n    if (user?.businessPhones?.length) {\n      const phone = user.businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    } else if (person?.phones?.length) {\n      const businessPhones = this.getPersonBusinessPhones(person);\n      const phone = businessPhones[0];\n      if (phone) {\n        window.open('tel:' + phone, '_blank', 'noreferrer');\n      }\n    }\n  };\n\n  /**\n   * Initiate a chat message to the user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected chatUser = (message: string = null) => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      let url = `https://teams.microsoft.com/l/chat/0/0?users=${users}`;\n      if (message?.length) {\n        url += `&message=${message}`;\n      }\n\n      const openWindow = () => window.open(url, '_blank', 'noreferrer');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Initiate a teams call with video with a user via deeplink.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected videoCallUser = () => {\n    const user = this.personDetails as User;\n    if (user?.userPrincipalName) {\n      const users: string = user.userPrincipalName;\n\n      const url = `https://teams.microsoft.com/l/call/0/0?users=${users}&withVideo=true`;\n\n      const openWindow = () => window.open(url, '_blank');\n\n      if (TeamsHelper.isAvailable) {\n        TeamsHelper.executeDeepLink(url, (status: boolean) => {\n          if (!status) {\n            openWindow();\n          }\n        });\n      } else {\n        openWindow();\n      }\n    }\n  };\n\n  /**\n   * Display the expanded details panel.\n   *\n   * @protected\n   * @memberof MgtPersonCard\n   */\n  protected showExpandedDetails = () => {\n    const root = this.renderRoot.querySelector('.root');\n    if (root?.animate) {\n      // play back\n      root.animate(\n        [\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          },\n          {\n            height: 'auto',\n            transformOrigin: 'top left'\n          }\n        ],\n        {\n          duration: 1000,\n          easing: 'ease-in-out',\n          fill: 'both'\n        }\n      );\n    }\n    this.isExpanded = true;\n\n    this.fireCustomEvent('expanded', null, true);\n  };\n\n  private loadSections() {\n    this.sections = [];\n\n    if (!this.internalPersonDetails) {\n      return;\n    }\n\n    const contactSections = new MgtContact(this.internalPersonDetails as User);\n    if (contactSections.hasData) {\n      this.sections.push(contactSections);\n    }\n\n    if (!this._cardState) {\n      return;\n    }\n\n    const { person, directReports, messages, files, profile } = this._cardState;\n\n    if (MgtPersonCardConfig.sections.organization && (person?.manager || directReports?.length)) {\n      this.sections.push(new MgtOrganization(this._cardState, this._me));\n    }\n\n    if (MgtPersonCardConfig.sections.mailMessages && messages?.length) {\n      this.sections.push(new MgtMessages(messages));\n    }\n\n    if (MgtPersonCardConfig.sections.files && files?.length) {\n      this.sections.push(new MgtFileList());\n    }\n\n    if (MgtPersonCardConfig.sections.profile && profile) {\n      const profileSection = new MgtProfile(profile);\n      if (profileSection.hasData) {\n        this.sections.push(profileSection);\n      }\n    }\n  }\n\n  private getImage(): string {\n    if (this.personImage) {\n      return this.personImage;\n    }\n\n    const person = this.personDetails;\n    return person?.personImage ? person.personImage : null;\n  }\n\n  private clearInputData() {\n    this._chatInput = '';\n    this.requestUpdate();\n  }\n\n  private getPersonBusinessPhones(person: Person): string[] {\n    const phones = person.phones;\n    const businessPhones: string[] = [];\n    for (const p of phones) {\n      if (p.type === 'business') {\n        businessPhones.push(p.number);\n      }\n    }\n    return businessPhones;\n  }\n\n  private updateCurrentSection(section: CardSection) {\n    if (section) {\n      const sectionName = section.tagName.toLowerCase();\n      const tabs: HTMLElement = this.renderRoot.querySelector(`#${sectionName}-Tab`);\n      tabs.click();\n    }\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      target.scrollTop = 0;\n    }\n    this._currentSection = section;\n    this.requestUpdate();\n  }\n\n  private handleSectionScroll(e: WheelEvent) {\n    const panels = this.renderRoot.querySelectorAll('fluent-tab-panel');\n    for (const target of panels) {\n      if (target) {\n        if (\n          !(e.deltaY < 0 && target.scrollTop === 0) &&\n          !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n        ) {\n          e.stopPropagation();\n        }\n      }\n    }\n  }\n\n  private readonly sendQuickMessageOnEnter = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.sendQuickMessage();\n    }\n  };\n\n  private readonly handleGoBack = (e: KeyboardEvent) => {\n    if (e.code === 'Enter') {\n      void this.goBack();\n    }\n  };\n}\n"],"names":["getMgtPersonCardScopes","scopes","MgtPersonCardConfig","sections","files","push","mailMessages","organization","showWorksWith","profile","useContactApis","indexOf","isSendMessageVisible","_toConsumableArray","Set","TeamsHelper","_classCallCheck","_createClass","key","get","this","_microsoftTeamsLib","window","microsoftTeams","set","value","microsoftTeamsLib","parent","self","nativeInterface","name","deeplink","onComplete","teams","initialize","executeDeepLink","userProperties","batchKeys","getPersonCardGraphData","graph","personDetails","isMe","__awaiter","_regeneratorRuntime","mark","_callee","_a","userId","email","isContactOrGroup","batch","response","data","_iterator","_step","_step$value","wrap","_context","prev","next","id","getEmailFromGraphEntity","personType","subclass","class","createBatch","buildOrgStructureRequest","buildWorksWithRequest","buildMessagesWithUserRequest","buildFilesRequest","executeAll","sent","t0","_createForOfIteratorHelper","s","n","done","_slicedToArray","content","err","e","f","getProfile","t1","directReports","length","filter","report","accountEnabled","abrupt","stop","expandManagers","concat","ConsistencyLevel","emailAddress","request","_callee2","_context2","api","version","createChat","person","user","_callee3","chatData","_context3","chatType","members","roles","header","middlewareOptions","prepScopes","post","sendMessage","chatId","messageData","_callee4","_context4","styles","css","_templateObject","_taggedTemplateLiteral","BasePersonCardSection","_MgtTemplatedComponen","_inherits","_super","_createSuper","_this","call","_isCompact","_personDetails","requestStateUpdate","requestUpdate","isCompact","renderCompactView","renderFullView","mgtHtml","html","_templateObject2","parentNode","shadowRoot","host","tagName","customElementHelper","prefix","toUpperCase","navigate","MgtTemplatedComponent","__decorate","property","attribute","type","Object","strings","contactSectionTitle","emailTitle","chatTitle","businessPhoneTitle","cellPhoneTitle","departmentTitle","titleTitle","officeLocationTitle","copyToClipboardButton","MgtContact","_BasePersonCardSectio","_contactParts","icon","getSvg","SvgIcon","Email","onClick","sendEmail","_person","showCompact","title","chat","Chat","sendChat","userPrincipalName","businessPhone","Phone","_b","sendCall","businessPhones","cellPhone","CellPhone","mobilePhone","department","Department","Person","officeLocation","OfficeLocation","phone","sendLink","jobTitle","values","p","Contact","_get","_getPrototypeOf","prototype","_i","_Object$keys","keys","_this2","hasData","availableParts","compactParts","slice","contentTemplate","map","renderContactPart","direction","_this3","_templateObject3","part","_templateObject4","_this4","isPhone","partLinkClasses","part__link","valueTemplate","_templateObject5","classMap","_templateObject6","_templateObject7","handlePartClick","Copy","navigator","clipboard","writeText","protocol","resource","open","error","upn","url","openWindow","isAvailable","status","emailsSectionTitle","MgtMessages","messages","_messages","Messages","isLoadingState","renderLoading","messageTemplates","message","renderMessage","renderNoData","handleMessageClick","subject","from","bodyPreview","getRelativeDisplayDate","Date","receivedDateTime","webLink","reportsToSectionTitle","directReportsSectionTitle","organizationSectionTitle","youWorkWithSubSectionTitle","userWorksWithSubSectionTitle","MgtOrganization","state","me","_state","_me","_this$_state","manager","Organization","_this$_state2","renderCoworker","renderCompactDirectReports","_this$_state3","people","managerTemplates","renderManagers","currentUserTemplate","renderCurrentUser","directReportsTemplate","renderDirectReports","coworkersTemplate","renderCoworkers","code","navigateCard","ViewType","twolines","ExpandRight","managers","currentManager","reverse","renderManager","_this5","_templateObject8","_templateObject9","_this6","_templateObject10","_this7","subtitle","givenName","_templateObject11","SkillsAndExperienceSectionTitle","AboutCompactSectionTitle","SkillsSubSectionTitle","LanguagesSubSectionTitle","WorkExperienceSubSectionTitle","EducationSubSectionTitle","professionalInterestsSubSectionTitle","personalInterestsSubSectionTitle","birthdaySubSectionTitle","currentYearSubtitle","socialMediaSubSectionTitle","MgtProfile","isPersonalInterest","interest","categories","includes","isProfessionalInterest","isBirthdayAnniversary","anniversary","_this$profile","languages","skills","positions","educationalActivities","_birthdayAnniversary","_personalInterests","_professionalInterests","v","_profile","anniversaries","find","interests","Profile","renderSubSections","initPostRenderOperations","renderSkills","renderBirthday","renderLanguages","renderWorkExperience","renderEducation","renderProfessionalInterests","renderPersonalInterests","languageItems","language","proficiency","displayName","languageTitle","_step2","skillItems","_iterator2","skill","skillsTitle","_step3","positionItems","_iterator3","position","detail","description","getDisplayDateRange","_c","company","displayLocation","_e","_d","address","workExperienceTitle","_step4","_iterator4","educationalActivity","institution","program","_templateObject12","nothing","educationTitle","_step5","interestItems","_iterator5","_templateObject14","professionalInterests","_templateObject13","_step6","_iterator6","_templateObject16","personalInterests","_templateObject15","date","_templateObject17","Birthday","getDisplayDate","toLocaleString","day","month","event","startMonthYear","start","getFullYear","end","endMonthYear","city","setTimeout","querySelectorAll","forEach","section","handleTokenOverflow","tokenLists","_loop","tokenList","_Array$from","items","overflowItems","itemRect","getBoundingClientRect","tokenListRect","maxtop","height","top","i","Array","classList","add","overflowToken","document","createElement","tabIndex","innerText","revealOverflow","remove","addEventListener","appendChild","showMoreSectionButton","endOfCard","quickMessage","expandDetailsLabel","sendMessageLabel","emailButtonLabel","callButtonLabel","chatButtonLabel","closeCardLabel","videoButtonLabel","goBackLabel","registerMgtPersonCardComponent","registerFluentComponents","fluentCard","fluentTabs","fluentTab","fluentTabPanel","fluentButton","fluentTextField","registerComponent","MgtPersonCard","registerMgtSpinnerComponent","registerMgtPersonComponent","registerMgtFileListComponent","customElements","buildComponentName","isSending","goBack","_history","historyState","pop","_currentSection","firstTab","renderRoot","querySelector","click","_cardState","personImage","loadSections","handleEndOfCard","endOfCardEl","blur","imageCardEl","focus","closeCard","updateCurrentSection","isExpanded","sendQuickMessage","_assertThisInitialized","_chatInput","trim","_graph","body","clearInputData","emailUser","internalPersonDetails","callUser","phones","getPersonBusinessPhones","chatUser","arguments","undefined","users","videoCallUser","showExpandedDetails","root","animate","transformOrigin","duration","easing","fill","fireCustomEvent","sendQuickMessageOnEnter","handleGoBack","getImage","_userId","oldValue","newValue","ariaLabel","image","hasTemplate","renderTemplate","closeCardTemplate","Close","navigationTemplate","Back","personDetailsTemplate","personTemplate","renderPerson","contactIconsTemplate","renderContactIcons","expandedDetailsTemplate","renderExpandedDetails","renderExpandedDetailsButton","_windowHeight","innerHeight","documentElement","clientHeight","Math","min","_smallView","tabLocker","lockTabNavigation","small","personPresence","showPresence","threelines","isUser","userPerson","SmallEmail","SmallChat","video","Video","Call","ExpandDown","_isStateLoading","Providers","globalProvider","ProviderState","SignedOut","sectionNavTemplate","renderSectionNavigation","handleSectionScroll","currentSectionIndex","additionalSectionTemplates","toLowerCase","classes","active","_templateObject18","renderIcon","additionalPanelTemplates","_templateObject19","cardTitle","asFullView","overviewClasses","overviewTab","_templateObject20","Overview","renderOverviewSection","compactTemplates","_templateObject21","asCompactView","additionalDetails","splice","_templateObject22","_templateObject23","renderMessagingSection","_templateObject25","_templateObject24","chatInput","_templateObject26","target","Confirmation","Send","inheritDetails","parentElement","parentPerson","provider","SignedIn","forComponent","getUserWithPhoto","personQuery","findPeople","getPersonImage","then","defaultPresence","activity","availability","getUserPresence","Boolean","contactSections","_this$_cardState","MgtFileList","profileSection","number","sectionName","panels","scrollTop","deltaY","scrollHeight","stopPropagation","String"],"sourceRoot":""}