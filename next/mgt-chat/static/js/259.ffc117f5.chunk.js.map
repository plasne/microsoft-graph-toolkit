{"version":3,"file":"static/js/259.ffc117f5.chunk.js","mappings":"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","sources":["../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.options.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.js","../../../node_modules/@fluentui/web-components/dist/esm/divider/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.template.js","../../../node_modules/@fluentui/web-components/dist/esm/divider/divider.styles.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/skeleton/skeleton.js","../../../node_modules/@fluentui/web-components/dist/esm/skeleton/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/skeleton/skeleton.template.js","../../../node_modules/@fluentui/web-components/dist/esm/skeleton/skeleton.styles.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.options.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/utilities/intersection-service.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/anchored-region/anchored-region.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.template.js","../../../node_modules/@fluentui/web-components/dist/esm/tooltip/index.js","../../../node_modules/@fluentui/web-components/dist/esm/tooltip/tooltip.styles.js"],"sourcesContent":["/**\n * Divider roles\n * @public\n */\nexport const DividerRole = {\n    /**\n     * The divider semantically separates content\n     */\n    separator: \"separator\",\n    /**\n     * The divider has no semantic value and is for visual presentation only.\n     */\n    presentation: \"presentation\",\n};\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { DividerRole } from \"./divider.options.js\";\nexport { DividerRole };\n/**\n * A Divider Custom HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#separator | ARIA separator } or {@link https://www.w3.org/TR/wai-aria-1.1/#presentation | ARIA presentation}.\n *\n * @public\n */\nexport class Divider extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The role of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: role\n         */\n        this.role = DividerRole.separator;\n        /**\n         * The orientation of the divider.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: orientation\n         */\n        this.orientation = Orientation.horizontal;\n    }\n}\n__decorate([\n    attr\n], Divider.prototype, \"role\", void 0);\n__decorate([\n    attr\n], Divider.prototype, \"orientation\", void 0);\n","import { Divider, dividerTemplate as template } from '@microsoft/fast-foundation';\nimport { dividerStyles as styles } from './divider.styles';\n/**\n * The Fluent Divider Element. Implements {@link @microsoft/fast-foundation#Divider},\n * {@link @microsoft/fast-foundation#dividerTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-divider\\>\n */\nexport const fluentDivider = Divider.compose({\n    baseName: 'divider',\n    template,\n    styles,\n});\n/**\n * Styles for Divider\n * @public\n */\nexport const dividerStyles = styles;\n/**\n * Base class for Fluent Divider\n * @public\n */\nexport { Divider };\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Divider} component.\n * @public\n */\nexport const dividerTemplate = (context, definition) => html `\n    <template role=\"${x => x.role}\" aria-orientation=\"${x => x.orientation}\"></template>\n`;\n","import { css } from '@microsoft/fast-element';\nimport { display } from '@microsoft/fast-foundation';\nimport { designUnit, neutralStrokeDividerRest, strokeWidth } from '../design-tokens';\nexport const dividerStyles = (context, definition) => css `\n    ${display('block')} :host {\n      box-sizing: content-box;\n      height: 0;\n      border: none;\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n    }\n\n    :host([orientation=\"vertical\"]) {\n      border: none;\n      height: 100%;\n      margin: 0 calc(${designUnit} * 1px);\n      border-left: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n  }\n  `;\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\n/**\n * A Skeleton Custom HTML Element.\n *\n * @slot - The default slot\n *\n * @public\n */\nexport class Skeleton extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates what the shape of the Skeleton should be.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: shape\n         */\n        this.shape = \"rect\";\n    }\n}\n__decorate([\n    attr\n], Skeleton.prototype, \"fill\", void 0);\n__decorate([\n    attr\n], Skeleton.prototype, \"shape\", void 0);\n__decorate([\n    attr\n], Skeleton.prototype, \"pattern\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], Skeleton.prototype, \"shimmer\", void 0);\n","import { Skeleton, skeletonTemplate as template } from '@microsoft/fast-foundation';\nimport { skeletonStyles as styles } from './skeleton.styles';\n/**\n * The Fluent Skeleton Element. Implements {@link @microsoft/fast-foundation#Skeleton},\n * {@link @microsoft/fast-foundation#skeletonTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-skeleton\\>\n */\nexport const fluentSkeleton = Skeleton.compose({\n    baseName: 'skeleton',\n    template,\n    styles,\n});\n/**\n * Styles for Skeleton\n * @public\n */\nexport const skeletonStyles = styles;\n/**\n * Skeleton base class\n * @public\n */\nexport { Skeleton };\n","import { html, when } from \"@microsoft/fast-element\";\n/**\n * The template for the fast-skeleton component\n * @public\n */\nexport const skeletonTemplate = (context, definition) => html `\n    <template\n        class=\"${x => (x.shape === \"circle\" ? \"circle\" : \"rect\")}\"\n        pattern=\"${x => x.pattern}\"\n        ?shimmer=\"${x => x.shimmer}\"\n    >\n        ${when(x => x.shimmer === true, html `\n                <span class=\"shimmer\"></span>\n            `)}\n        <object type=\"image/svg+xml\" data=\"${x => x.pattern}\" role=\"presentation\">\n            <img class=\"pattern\" src=\"${x => x.pattern}\" />\n        </object>\n        <slot></slot>\n    </template>\n`;\n","import { css } from '@microsoft/fast-element';\nimport { display, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { controlCornerRadius, neutralFillSecondaryHover, neutralFillSecondaryRest } from '../design-tokens';\nexport const skeletonStyles = (context, definition) => css `\n    ${display('block')} :host {\n      --skeleton-fill-default: ${neutralFillSecondaryRest};\n      overflow: hidden;\n      width: 100%;\n      position: relative;\n      background-color: var(--skeleton-fill, var(--skeleton-fill-default));\n      --skeleton-animation-gradient-default: linear-gradient(\n        270deg,\n        var(--skeleton-fill, var(--skeleton-fill-default)) 0%,\n        ${neutralFillSecondaryHover} 51%,\n        var(--skeleton-fill, var(--skeleton-fill-default)) 100%\n      );\n      --skeleton-animation-timing-default: ease-in-out;\n    }\n\n    :host(.rect) {\n      border-radius: calc(${controlCornerRadius} * 1px);\n    }\n\n    :host(.circle) {\n      border-radius: 100%;\n      overflow: hidden;\n    }\n\n    object {\n      position: absolute;\n      width: 100%;\n      height: auto;\n      z-index: 2;\n    }\n\n    object img {\n      width: 100%;\n      height: auto;\n    }\n\n    ${display('block')} span.shimmer {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      background-image: var(--skeleton-animation-gradient, var(--skeleton-animation-gradient-default));\n      background-size: 0px 0px / 90% 100%;\n      background-repeat: no-repeat;\n      background-color: var(--skeleton-animation-fill, ${neutralFillSecondaryRest});\n      animation: shimmer 2s infinite;\n      animation-timing-function: var(--skeleton-animation-timing, var(--skeleton-timing-default));\n      animation-direction: normal;\n      z-index: 1;\n    }\n\n    ::slotted(svg) {\n      z-index: 2;\n    }\n\n    ::slotted(.pattern) {\n      width: 100%;\n      height: 100%;\n    }\n\n    @keyframes shimmer {\n      0% {\n        transform: translateX(-100%);\n      }\n      100% {\n        transform: translateX(100%);\n      }\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host{\n          background-color: ${SystemColors.CanvasText};\n        }\n      `));\n","/**\n * Enumerates possible tooltip positions\n *\n * @public\n */\nexport const TooltipPosition = {\n    /**\n     * The tooltip is positioned above the element\n     */\n    top: \"top\",\n    /**\n     * The tooltip is positioned to the right of the element\n     */\n    right: \"right\",\n    /**\n     * The tooltip is positioned below the element\n     */\n    bottom: \"bottom\",\n    /**\n     * The tooltip is positioned to the left of the element\n     */\n    left: \"left\",\n    /**\n     * The tooltip is positioned before the element\n     */\n    start: \"start\",\n    /**\n     * The tooltip is positioned after the element\n     */\n    end: \"end\",\n    /**\n     * The tooltip is positioned above the element and to the left\n     */\n    topLeft: \"top-left\",\n    /**\n     * The tooltip is positioned above the element and to the right\n     */\n    topRight: \"top-right\",\n    /**\n     * The tooltip is positioned below the element and to the left\n     */\n    bottomLeft: \"bottom-left\",\n    /**\n     * The tooltip is positioned below the element and to the right\n     */\n    bottomRight: \"bottom-right\",\n    /**\n     * The tooltip is positioned above the element and to the left\n     */\n    topStart: \"top-start\",\n    /**\n     * The tooltip is positioned above the element and to the right\n     */\n    topEnd: \"top-end\",\n    /**\n     * The tooltip is positioned below the element and to the left\n     */\n    bottomStart: \"bottom-start\",\n    /**\n     * The tooltip is positioned below the element and to the right\n     */\n    bottomEnd: \"bottom-end\",\n};\n","import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, keyEscape } from \"@microsoft/fast-web-utilities\";\nimport { getDirection } from \"../utilities/direction.js\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { TooltipPosition } from \"./tooltip.options.js\";\nexport { TooltipPosition };\n/**\n * An Tooltip Custom HTML Element.\n *\n * @slot - The default slot for the tooltip content\n * @csspart tooltip - The tooltip element\n * @fires dismiss - Fires a custom 'dismiss' event when the tooltip is visible and escape key is pressed\n *\n * @public\n */\nexport class Tooltip extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The id of the element the tooltip is anchored to\n         *\n         * @defaultValue - undefined\n         * @public\n         * HTML Attribute: anchor\n         */\n        this.anchor = \"\";\n        /**\n         * The delay in milliseconds before a tooltip is shown after a hover event\n         *\n         * @defaultValue - 300\n         * @public\n         * HTML Attribute: delay\n         */\n        this.delay = 300;\n        /**\n         * Controls when the tooltip updates its position, default is 'anchor' which only updates when\n         * the anchor is resized.  'auto' will update on scroll/resize events.\n         * Corresponds to anchored-region auto-update-mode.\n         * @public\n         * @remarks\n         * HTML Attribute: auto-update-mode\n         */\n        this.autoUpdateMode = \"anchor\";\n        /**\n         * the html element currently being used as anchor.\n         * Setting this directly overrides the anchor attribute.\n         *\n         * @public\n         */\n        this.anchorElement = null;\n        /**\n         * The current viewport element instance\n         *\n         * @internal\n         */\n        this.viewportElement = null;\n        /**\n         * @internal\n         * @defaultValue \"dynamic\"\n         */\n        this.verticalPositioningMode = \"dynamic\";\n        /**\n         * @internal\n         * @defaultValue \"dynamic\"\n         */\n        this.horizontalPositioningMode = \"dynamic\";\n        /**\n         * @internal\n         */\n        this.horizontalInset = \"false\";\n        /**\n         * @internal\n         */\n        this.verticalInset = \"false\";\n        /**\n         * @internal\n         */\n        this.horizontalScaling = \"content\";\n        /**\n         * @internal\n         */\n        this.verticalScaling = \"content\";\n        /**\n         * @internal\n         */\n        this.verticalDefaultPosition = undefined;\n        /**\n         * @internal\n         */\n        this.horizontalDefaultPosition = undefined;\n        /**\n         * @internal\n         */\n        this.tooltipVisible = false;\n        /**\n         * Track current direction to pass to the anchored region\n         * updated when tooltip is shown\n         *\n         * @internal\n         */\n        this.currentDirection = Direction.ltr;\n        /**\n         * The timer that tracks delay time before the tooltip is shown on hover\n         */\n        this.showDelayTimer = null;\n        /**\n         * The timer that tracks delay time before the tooltip is hidden\n         */\n        this.hideDelayTimer = null;\n        /**\n         * Indicates whether the anchor is currently being hovered or has focus\n         */\n        this.isAnchorHoveredFocused = false;\n        /**\n         * Indicates whether the region is currently being hovered\n         */\n        this.isRegionHovered = false;\n        /**\n         * invoked when the anchored region's position relative to the anchor changes\n         *\n         * @internal\n         */\n        this.handlePositionChange = (ev) => {\n            this.classList.toggle(\"top\", this.region.verticalPosition === \"start\");\n            this.classList.toggle(\"bottom\", this.region.verticalPosition === \"end\");\n            this.classList.toggle(\"inset-top\", this.region.verticalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-bottom\", this.region.verticalPosition === \"insetEnd\");\n            this.classList.toggle(\"center-vertical\", this.region.verticalPosition === \"center\");\n            this.classList.toggle(\"left\", this.region.horizontalPosition === \"start\");\n            this.classList.toggle(\"right\", this.region.horizontalPosition === \"end\");\n            this.classList.toggle(\"inset-left\", this.region.horizontalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-right\", this.region.horizontalPosition === \"insetEnd\");\n            this.classList.toggle(\"center-horizontal\", this.region.horizontalPosition === \"center\");\n        };\n        /**\n         * mouse enters region\n         */\n        this.handleRegionMouseOver = (ev) => {\n            this.isRegionHovered = true;\n        };\n        /**\n         * mouse leaves region\n         */\n        this.handleRegionMouseOut = (ev) => {\n            this.isRegionHovered = false;\n            this.startHideDelayTimer();\n        };\n        /**\n         * mouse enters anchor\n         */\n        this.handleAnchorMouseOver = (ev) => {\n            if (this.tooltipVisible) {\n                // tooltip is already visible, just set the anchor hover flag\n                this.isAnchorHoveredFocused = true;\n                return;\n            }\n            this.startShowDelayTimer();\n        };\n        /**\n         * mouse leaves anchor\n         */\n        this.handleAnchorMouseOut = (ev) => {\n            this.isAnchorHoveredFocused = false;\n            this.clearShowDelayTimer();\n            this.startHideDelayTimer();\n        };\n        /**\n         * anchor gets focus\n         */\n        this.handleAnchorFocusIn = (ev) => {\n            this.startShowDelayTimer();\n        };\n        /**\n         * anchor loses focus\n         */\n        this.handleAnchorFocusOut = (ev) => {\n            this.isAnchorHoveredFocused = false;\n            this.clearShowDelayTimer();\n            this.startHideDelayTimer();\n        };\n        /**\n         * starts the hide timer\n         */\n        this.startHideDelayTimer = () => {\n            this.clearHideDelayTimer();\n            if (!this.tooltipVisible) {\n                return;\n            }\n            // allow 60 ms for account for pointer to move between anchor/tooltip\n            // without hiding tooltip\n            this.hideDelayTimer = window.setTimeout(() => {\n                this.updateTooltipVisibility();\n            }, 60);\n        };\n        /**\n         * clears the hide delay\n         */\n        this.clearHideDelayTimer = () => {\n            if (this.hideDelayTimer !== null) {\n                clearTimeout(this.hideDelayTimer);\n                this.hideDelayTimer = null;\n            }\n        };\n        /**\n         * starts the show timer if not currently running\n         */\n        this.startShowDelayTimer = () => {\n            if (this.isAnchorHoveredFocused) {\n                return;\n            }\n            if (this.delay > 1) {\n                if (this.showDelayTimer === null)\n                    this.showDelayTimer = window.setTimeout(() => {\n                        this.startHover();\n                    }, this.delay);\n                return;\n            }\n            this.startHover();\n        };\n        /**\n         * start hover\n         */\n        this.startHover = () => {\n            this.isAnchorHoveredFocused = true;\n            this.updateTooltipVisibility();\n        };\n        /**\n         * clears the show delay\n         */\n        this.clearShowDelayTimer = () => {\n            if (this.showDelayTimer !== null) {\n                clearTimeout(this.showDelayTimer);\n                this.showDelayTimer = null;\n            }\n        };\n        /**\n         *  Gets the anchor element by id\n         */\n        this.getAnchor = () => {\n            const rootNode = this.getRootNode();\n            if (rootNode instanceof ShadowRoot) {\n                return rootNode.getElementById(this.anchor);\n            }\n            return document.getElementById(this.anchor);\n        };\n        /**\n         * handles key down events to check for dismiss\n         */\n        this.handleDocumentKeydown = (e) => {\n            if (!e.defaultPrevented && this.tooltipVisible) {\n                switch (e.key) {\n                    case keyEscape:\n                        this.isAnchorHoveredFocused = false;\n                        this.updateTooltipVisibility();\n                        this.$emit(\"dismiss\");\n                        break;\n                }\n            }\n        };\n        /**\n         * determines whether to show or hide the tooltip based on current state\n         */\n        this.updateTooltipVisibility = () => {\n            if (this.visible === false) {\n                this.hideTooltip();\n            }\n            else if (this.visible === true) {\n                this.showTooltip();\n                return;\n            }\n            else {\n                if (this.isAnchorHoveredFocused || this.isRegionHovered) {\n                    this.showTooltip();\n                    return;\n                }\n                this.hideTooltip();\n            }\n        };\n        /**\n         * shows the tooltip\n         */\n        this.showTooltip = () => {\n            if (this.tooltipVisible) {\n                return;\n            }\n            this.currentDirection = getDirection(this);\n            this.tooltipVisible = true;\n            document.addEventListener(\"keydown\", this.handleDocumentKeydown);\n            DOM.queueUpdate(this.setRegionProps);\n        };\n        /**\n         * hides the tooltip\n         */\n        this.hideTooltip = () => {\n            if (!this.tooltipVisible) {\n                return;\n            }\n            this.clearHideDelayTimer();\n            if (this.region !== null && this.region !== undefined) {\n                this.region.removeEventListener(\"positionchange\", this.handlePositionChange);\n                this.region.viewportElement = null;\n                this.region.anchorElement = null;\n                this.region.removeEventListener(\"mouseover\", this.handleRegionMouseOver);\n                this.region.removeEventListener(\"mouseout\", this.handleRegionMouseOut);\n            }\n            document.removeEventListener(\"keydown\", this.handleDocumentKeydown);\n            this.tooltipVisible = false;\n        };\n        /**\n         * updates the tooltip anchored region props after it has been\n         * added to the DOM\n         */\n        this.setRegionProps = () => {\n            if (!this.tooltipVisible) {\n                return;\n            }\n            this.region.viewportElement = this.viewportElement;\n            this.region.anchorElement = this.anchorElement;\n            this.region.addEventListener(\"positionchange\", this.handlePositionChange);\n            this.region.addEventListener(\"mouseover\", this.handleRegionMouseOver, {\n                passive: true,\n            });\n            this.region.addEventListener(\"mouseout\", this.handleRegionMouseOut, {\n                passive: true,\n            });\n        };\n    }\n    visibleChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateTooltipVisibility();\n            this.updateLayout();\n        }\n    }\n    anchorChanged() {\n        if (this.$fastController.isConnected) {\n            this.anchorElement = this.getAnchor();\n        }\n    }\n    positionChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateLayout();\n        }\n    }\n    anchorElementChanged(oldValue) {\n        if (this.$fastController.isConnected) {\n            if (oldValue !== null && oldValue !== undefined) {\n                oldValue.removeEventListener(\"mouseover\", this.handleAnchorMouseOver);\n                oldValue.removeEventListener(\"mouseout\", this.handleAnchorMouseOut);\n                oldValue.removeEventListener(\"focusin\", this.handleAnchorFocusIn);\n                oldValue.removeEventListener(\"focusout\", this.handleAnchorFocusOut);\n            }\n            if (this.anchorElement !== null && this.anchorElement !== undefined) {\n                this.anchorElement.addEventListener(\"mouseover\", this.handleAnchorMouseOver, { passive: true });\n                this.anchorElement.addEventListener(\"mouseout\", this.handleAnchorMouseOut, { passive: true });\n                this.anchorElement.addEventListener(\"focusin\", this.handleAnchorFocusIn, {\n                    passive: true,\n                });\n                this.anchorElement.addEventListener(\"focusout\", this.handleAnchorFocusOut, { passive: true });\n                const anchorId = this.anchorElement.id;\n                if (this.anchorElement.parentElement !== null) {\n                    this.anchorElement.parentElement\n                        .querySelectorAll(\":hover\")\n                        .forEach(element => {\n                        if (element.id === anchorId) {\n                            this.startShowDelayTimer();\n                        }\n                    });\n                }\n            }\n            if (this.region !== null &&\n                this.region !== undefined &&\n                this.tooltipVisible) {\n                this.region.anchorElement = this.anchorElement;\n            }\n            this.updateLayout();\n        }\n    }\n    viewportElementChanged() {\n        if (this.region !== null && this.region !== undefined) {\n            this.region.viewportElement = this.viewportElement;\n        }\n        this.updateLayout();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.anchorElement = this.getAnchor();\n        this.updateTooltipVisibility();\n    }\n    disconnectedCallback() {\n        this.hideTooltip();\n        this.clearShowDelayTimer();\n        this.clearHideDelayTimer();\n        super.disconnectedCallback();\n    }\n    /**\n     * updated the properties being passed to the anchored region\n     */\n    updateLayout() {\n        this.verticalPositioningMode = \"locktodefault\";\n        this.horizontalPositioningMode = \"locktodefault\";\n        switch (this.position) {\n            case TooltipPosition.top:\n            case TooltipPosition.bottom:\n                this.verticalDefaultPosition = this.position;\n                this.horizontalDefaultPosition = \"center\";\n                break;\n            case TooltipPosition.right:\n            case TooltipPosition.left:\n            case TooltipPosition.start:\n            case TooltipPosition.end:\n                this.verticalDefaultPosition = \"center\";\n                this.horizontalDefaultPosition = this.position;\n                break;\n            case TooltipPosition.topLeft:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"left\";\n                break;\n            case TooltipPosition.topRight:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"right\";\n                break;\n            case TooltipPosition.bottomLeft:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"left\";\n                break;\n            case TooltipPosition.bottomRight:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"right\";\n                break;\n            case TooltipPosition.topStart:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"start\";\n                break;\n            case TooltipPosition.topEnd:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"end\";\n                break;\n            case TooltipPosition.bottomStart:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"start\";\n                break;\n            case TooltipPosition.bottomEnd:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"end\";\n                break;\n            default:\n                this.verticalPositioningMode = \"dynamic\";\n                this.horizontalPositioningMode = \"dynamic\";\n                this.verticalDefaultPosition = void 0;\n                this.horizontalDefaultPosition = \"center\";\n                break;\n        }\n    }\n}\n__decorate([\n    attr({ mode: \"boolean\" })\n], Tooltip.prototype, \"visible\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"anchor\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"delay\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"position\", void 0);\n__decorate([\n    attr({ attribute: \"auto-update-mode\" })\n], Tooltip.prototype, \"autoUpdateMode\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-viewport-lock\" })\n], Tooltip.prototype, \"horizontalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-viewport-lock\" })\n], Tooltip.prototype, \"verticalViewportLock\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"anchorElement\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"viewportElement\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalPositioningMode\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalPositioningMode\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalInset\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalInset\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalScaling\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalScaling\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalDefaultPosition\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalDefaultPosition\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"tooltipVisible\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"currentDirection\", void 0);\n","import { $global } from \"@microsoft/fast-element\";\n/**\n *  A service to batch intersection event callbacks so multiple elements can share a single observer\n *\n * @public\n */\nexport class IntersectionService {\n    constructor() {\n        this.intersectionDetector = null;\n        this.observedElements = new Map();\n        /**\n         * Request the position of a target element\n         *\n         * @internal\n         */\n        this.requestPosition = (target, callback) => {\n            var _a;\n            if (this.intersectionDetector === null) {\n                return;\n            }\n            if (this.observedElements.has(target)) {\n                (_a = this.observedElements.get(target)) === null || _a === void 0 ? void 0 : _a.push(callback);\n                return;\n            }\n            this.observedElements.set(target, [callback]);\n            this.intersectionDetector.observe(target);\n        };\n        /**\n         * Cancel a position request\n         *\n         * @internal\n         */\n        this.cancelRequestPosition = (target, callback) => {\n            const callbacks = this.observedElements.get(target);\n            if (callbacks !== undefined) {\n                const callBackIndex = callbacks.indexOf(callback);\n                if (callBackIndex !== -1) {\n                    callbacks.splice(callBackIndex, 1);\n                }\n            }\n        };\n        /**\n         * initialize intersection detector\n         */\n        this.initializeIntersectionDetector = () => {\n            if (!$global.IntersectionObserver) {\n                //intersection observer not supported\n                return;\n            }\n            this.intersectionDetector = new IntersectionObserver(this.handleIntersection, {\n                root: null,\n                rootMargin: \"0px\",\n                threshold: [0, 1],\n            });\n        };\n        /**\n         *  Handle intersections\n         */\n        this.handleIntersection = (entries) => {\n            if (this.intersectionDetector === null) {\n                return;\n            }\n            const pendingCallbacks = [];\n            const pendingCallbackParams = [];\n            // go through the entries to build a list of callbacks and params for each\n            entries.forEach((entry) => {\n                var _a;\n                // stop watching this element until we get new update requests for it\n                (_a = this.intersectionDetector) === null || _a === void 0 ? void 0 : _a.unobserve(entry.target);\n                const thisElementCallbacks = this.observedElements.get(entry.target);\n                if (thisElementCallbacks !== undefined) {\n                    thisElementCallbacks.forEach((callback) => {\n                        let targetCallbackIndex = pendingCallbacks.indexOf(callback);\n                        if (targetCallbackIndex === -1) {\n                            targetCallbackIndex = pendingCallbacks.length;\n                            pendingCallbacks.push(callback);\n                            pendingCallbackParams.push([]);\n                        }\n                        pendingCallbackParams[targetCallbackIndex].push(entry);\n                    });\n                    this.observedElements.delete(entry.target);\n                }\n            });\n            // execute callbacks\n            pendingCallbacks.forEach((callback, index) => {\n                callback(pendingCallbackParams[index]);\n            });\n        };\n        this.initializeIntersectionDetector();\n    }\n}\n","import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, eventResize, eventScroll } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { getDirection } from \"../utilities/direction.js\";\nimport { IntersectionService } from \"../utilities/intersection-service.js\";\n/**\n * An anchored region Custom HTML Element.\n *\n * @slot - The default slot for the content\n * @fires loaded - Fires a custom 'loaded' event when the region is loaded and visible\n * @fires positionchange - Fires a custom 'positionchange' event when the position has changed\n *\n * @public\n */\nexport class AnchoredRegion extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The HTML ID of the anchor element this region is positioned relative to\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: anchor\n         */\n        this.anchor = \"\";\n        /**\n         * The HTML ID of the viewport element this region is positioned relative to\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: anchor\n         */\n        this.viewport = \"\";\n        /**\n         * Sets what logic the component uses to determine horizontal placement.\n         * 'locktodefault' forces the default position\n         * 'dynamic' decides placement based on available space\n         * 'uncontrolled' does not control placement on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-positioning-mode\n         */\n        this.horizontalPositioningMode = \"uncontrolled\";\n        /**\n         * The default horizontal position of the region relative to the anchor element\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-default-position\n         */\n        this.horizontalDefaultPosition = \"unset\";\n        /**\n         * Whether the region remains in the viewport (ie. detaches from the anchor) on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-viewport-lock\n         */\n        this.horizontalViewportLock = false;\n        /**\n         * Whether the region overlaps the anchor on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-inset\n         */\n        this.horizontalInset = false;\n        /**\n         * Defines how the width of the region is calculated\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-scaling\n         */\n        this.horizontalScaling = \"content\";\n        /**\n         * Sets what logic the component uses to determine vertical placement.\n         * 'locktodefault' forces the default position\n         * 'dynamic' decides placement based on available space\n         * 'uncontrolled' does not control placement on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-positioning-mode\n         */\n        this.verticalPositioningMode = \"uncontrolled\";\n        /**\n         * The default vertical position of the region relative to the anchor element\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-default-position\n         */\n        this.verticalDefaultPosition = \"unset\";\n        /**\n         * Whether the region remains in the viewport (ie. detaches from the anchor) on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-viewport-lock\n         */\n        this.verticalViewportLock = false;\n        /**\n         * Whether the region overlaps the anchor on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-inset\n         */\n        this.verticalInset = false;\n        /**\n         * Defines how the height of the region is calculated\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-scaling\n         */\n        this.verticalScaling = \"content\";\n        /**\n         * Whether the region is positioned using css \"position: fixed\".\n         * Otherwise the region uses \"position: absolute\".\n         * Fixed placement allows the region to break out of parent containers,\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: fixed-placement\n         */\n        this.fixedPlacement = false;\n        /**\n         * Defines what triggers the anchored region to revaluate positioning\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: auto-update-mode\n         */\n        this.autoUpdateMode = \"anchor\";\n        /**\n         * The HTML element being used as the anchor\n         *\n         * @public\n         */\n        this.anchorElement = null;\n        /**\n         * The HTML element being used as the viewport\n         *\n         * @public\n         */\n        this.viewportElement = null;\n        /**\n         * indicates that an initial positioning pass on layout has completed\n         *\n         * @internal\n         */\n        this.initialLayoutComplete = false;\n        this.resizeDetector = null;\n        /**\n         * base offsets between the positioner's base position and the anchor's\n         */\n        this.baseHorizontalOffset = 0;\n        this.baseVerticalOffset = 0;\n        this.pendingPositioningUpdate = false;\n        this.pendingReset = false;\n        this.currentDirection = Direction.ltr;\n        this.regionVisible = false;\n        // indicates that a layout update should occur even if geometry has not changed\n        // used to ensure some attribute changes are applied\n        this.forceUpdate = false;\n        // defines how big a difference in pixels there must be between states to\n        // justify a layout update that affects the dom (prevents repeated sub-pixel corrections)\n        this.updateThreshold = 0.5;\n        /**\n         * update position\n         */\n        this.update = () => {\n            if (!this.pendingPositioningUpdate) {\n                this.requestPositionUpdates();\n            }\n        };\n        /**\n         * starts observers\n         */\n        this.startObservers = () => {\n            this.stopObservers();\n            if (this.anchorElement === null) {\n                return;\n            }\n            this.requestPositionUpdates();\n            if (this.resizeDetector !== null) {\n                this.resizeDetector.observe(this.anchorElement);\n                this.resizeDetector.observe(this);\n            }\n        };\n        /**\n         * get position updates\n         */\n        this.requestPositionUpdates = () => {\n            if (this.anchorElement === null || this.pendingPositioningUpdate) {\n                return;\n            }\n            AnchoredRegion.intersectionService.requestPosition(this, this.handleIntersection);\n            AnchoredRegion.intersectionService.requestPosition(this.anchorElement, this.handleIntersection);\n            if (this.viewportElement !== null) {\n                AnchoredRegion.intersectionService.requestPosition(this.viewportElement, this.handleIntersection);\n            }\n            this.pendingPositioningUpdate = true;\n        };\n        /**\n         * stops observers\n         */\n        this.stopObservers = () => {\n            if (this.pendingPositioningUpdate) {\n                this.pendingPositioningUpdate = false;\n                AnchoredRegion.intersectionService.cancelRequestPosition(this, this.handleIntersection);\n                if (this.anchorElement !== null) {\n                    AnchoredRegion.intersectionService.cancelRequestPosition(this.anchorElement, this.handleIntersection);\n                }\n                if (this.viewportElement !== null) {\n                    AnchoredRegion.intersectionService.cancelRequestPosition(this.viewportElement, this.handleIntersection);\n                }\n            }\n            if (this.resizeDetector !== null) {\n                this.resizeDetector.disconnect();\n            }\n        };\n        /**\n         * Gets the viewport element by id, or defaults to document root\n         */\n        this.getViewport = () => {\n            if (typeof this.viewport !== \"string\" || this.viewport === \"\") {\n                return document.documentElement;\n            }\n            return document.getElementById(this.viewport);\n        };\n        /**\n         *  Gets the anchor element by id\n         */\n        this.getAnchor = () => {\n            return document.getElementById(this.anchor);\n        };\n        /**\n         *  Handle intersections\n         */\n        this.handleIntersection = (entries) => {\n            if (!this.pendingPositioningUpdate) {\n                return;\n            }\n            this.pendingPositioningUpdate = false;\n            if (!this.applyIntersectionEntries(entries)) {\n                return;\n            }\n            this.updateLayout();\n        };\n        /**\n         *  iterate through intersection entries and apply data\n         */\n        this.applyIntersectionEntries = (entries) => {\n            const regionEntry = entries.find(x => x.target === this);\n            const anchorEntry = entries.find(x => x.target === this.anchorElement);\n            const viewportEntry = entries.find(x => x.target === this.viewportElement);\n            if (regionEntry === undefined ||\n                viewportEntry === undefined ||\n                anchorEntry === undefined) {\n                return false;\n            }\n            // don't update the dom unless there is a significant difference in rect positions\n            if (!this.regionVisible ||\n                this.forceUpdate ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined ||\n                this.isRectDifferent(this.anchorRect, anchorEntry.boundingClientRect) ||\n                this.isRectDifferent(this.viewportRect, viewportEntry.boundingClientRect) ||\n                this.isRectDifferent(this.regionRect, regionEntry.boundingClientRect)) {\n                this.regionRect = regionEntry.boundingClientRect;\n                this.anchorRect = anchorEntry.boundingClientRect;\n                if (this.viewportElement === document.documentElement) {\n                    this.viewportRect = new DOMRectReadOnly(viewportEntry.boundingClientRect.x +\n                        document.documentElement.scrollLeft, viewportEntry.boundingClientRect.y +\n                        document.documentElement.scrollTop, viewportEntry.boundingClientRect.width, viewportEntry.boundingClientRect.height);\n                }\n                else {\n                    this.viewportRect = viewportEntry.boundingClientRect;\n                }\n                this.updateRegionOffset();\n                this.forceUpdate = false;\n                return true;\n            }\n            return false;\n        };\n        /**\n         *  Update the offset values\n         */\n        this.updateRegionOffset = () => {\n            if (this.anchorRect && this.regionRect) {\n                this.baseHorizontalOffset =\n                    this.baseHorizontalOffset +\n                        (this.anchorRect.left - this.regionRect.left) +\n                        (this.translateX - this.baseHorizontalOffset);\n                this.baseVerticalOffset =\n                    this.baseVerticalOffset +\n                        (this.anchorRect.top - this.regionRect.top) +\n                        (this.translateY - this.baseVerticalOffset);\n            }\n        };\n        /**\n         *  compare rects to see if there is enough change to justify a DOM update\n         */\n        this.isRectDifferent = (rectA, rectB) => {\n            if (Math.abs(rectA.top - rectB.top) > this.updateThreshold ||\n                Math.abs(rectA.right - rectB.right) > this.updateThreshold ||\n                Math.abs(rectA.bottom - rectB.bottom) > this.updateThreshold ||\n                Math.abs(rectA.left - rectB.left) > this.updateThreshold) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         *  Handle resize events\n         */\n        this.handleResize = (entries) => {\n            this.update();\n        };\n        /**\n         * resets the component\n         */\n        this.reset = () => {\n            if (!this.pendingReset) {\n                return;\n            }\n            this.pendingReset = false;\n            if (this.anchorElement === null) {\n                this.anchorElement = this.getAnchor();\n            }\n            if (this.viewportElement === null) {\n                this.viewportElement = this.getViewport();\n            }\n            this.currentDirection = getDirection(this);\n            this.startObservers();\n        };\n        /**\n         *  Recalculate layout related state values\n         */\n        this.updateLayout = () => {\n            let desiredVerticalPosition = undefined;\n            let desiredHorizontalPosition = undefined;\n            if (this.horizontalPositioningMode !== \"uncontrolled\") {\n                const horizontalOptions = this.getPositioningOptions(this.horizontalInset);\n                if (this.horizontalDefaultPosition === \"center\") {\n                    desiredHorizontalPosition = \"center\";\n                }\n                else if (this.horizontalDefaultPosition !== \"unset\") {\n                    let dirCorrectedHorizontalDefaultPosition = this\n                        .horizontalDefaultPosition;\n                    if (dirCorrectedHorizontalDefaultPosition === \"start\" ||\n                        dirCorrectedHorizontalDefaultPosition === \"end\") {\n                        // if direction changes we reset the layout\n                        const newDirection = getDirection(this);\n                        if (newDirection !== this.currentDirection) {\n                            this.currentDirection = newDirection;\n                            this.initialize();\n                            return;\n                        }\n                        if (this.currentDirection === Direction.ltr) {\n                            dirCorrectedHorizontalDefaultPosition =\n                                dirCorrectedHorizontalDefaultPosition === \"start\"\n                                    ? \"left\"\n                                    : \"right\";\n                        }\n                        else {\n                            dirCorrectedHorizontalDefaultPosition =\n                                dirCorrectedHorizontalDefaultPosition === \"start\"\n                                    ? \"right\"\n                                    : \"left\";\n                        }\n                    }\n                    switch (dirCorrectedHorizontalDefaultPosition) {\n                        case \"left\":\n                            desiredHorizontalPosition = this.horizontalInset\n                                ? \"insetStart\"\n                                : \"start\";\n                            break;\n                        case \"right\":\n                            desiredHorizontalPosition = this.horizontalInset\n                                ? \"insetEnd\"\n                                : \"end\";\n                            break;\n                    }\n                }\n                const horizontalThreshold = this.horizontalThreshold !== undefined\n                    ? this.horizontalThreshold\n                    : this.regionRect !== undefined\n                        ? this.regionRect.width\n                        : 0;\n                const anchorLeft = this.anchorRect !== undefined ? this.anchorRect.left : 0;\n                const anchorRight = this.anchorRect !== undefined ? this.anchorRect.right : 0;\n                const anchorWidth = this.anchorRect !== undefined ? this.anchorRect.width : 0;\n                const viewportLeft = this.viewportRect !== undefined ? this.viewportRect.left : 0;\n                const viewportRight = this.viewportRect !== undefined ? this.viewportRect.right : 0;\n                if (desiredHorizontalPosition === undefined ||\n                    (!(this.horizontalPositioningMode === \"locktodefault\") &&\n                        this.getAvailableSpace(desiredHorizontalPosition, anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight) < horizontalThreshold)) {\n                    desiredHorizontalPosition =\n                        this.getAvailableSpace(horizontalOptions[0], anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight) >\n                            this.getAvailableSpace(horizontalOptions[1], anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight)\n                            ? horizontalOptions[0]\n                            : horizontalOptions[1];\n                }\n            }\n            if (this.verticalPositioningMode !== \"uncontrolled\") {\n                const verticalOptions = this.getPositioningOptions(this.verticalInset);\n                if (this.verticalDefaultPosition === \"center\") {\n                    desiredVerticalPosition = \"center\";\n                }\n                else if (this.verticalDefaultPosition !== \"unset\") {\n                    switch (this.verticalDefaultPosition) {\n                        case \"top\":\n                            desiredVerticalPosition = this.verticalInset\n                                ? \"insetStart\"\n                                : \"start\";\n                            break;\n                        case \"bottom\":\n                            desiredVerticalPosition = this.verticalInset ? \"insetEnd\" : \"end\";\n                            break;\n                    }\n                }\n                const verticalThreshold = this.verticalThreshold !== undefined\n                    ? this.verticalThreshold\n                    : this.regionRect !== undefined\n                        ? this.regionRect.height\n                        : 0;\n                const anchorTop = this.anchorRect !== undefined ? this.anchorRect.top : 0;\n                const anchorBottom = this.anchorRect !== undefined ? this.anchorRect.bottom : 0;\n                const anchorHeight = this.anchorRect !== undefined ? this.anchorRect.height : 0;\n                const viewportTop = this.viewportRect !== undefined ? this.viewportRect.top : 0;\n                const viewportBottom = this.viewportRect !== undefined ? this.viewportRect.bottom : 0;\n                if (desiredVerticalPosition === undefined ||\n                    (!(this.verticalPositioningMode === \"locktodefault\") &&\n                        this.getAvailableSpace(desiredVerticalPosition, anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom) < verticalThreshold)) {\n                    desiredVerticalPosition =\n                        this.getAvailableSpace(verticalOptions[0], anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom) >\n                            this.getAvailableSpace(verticalOptions[1], anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom)\n                            ? verticalOptions[0]\n                            : verticalOptions[1];\n                }\n            }\n            const nextPositionerDimension = this.getNextRegionDimension(desiredHorizontalPosition, desiredVerticalPosition);\n            const positionChanged = this.horizontalPosition !== desiredHorizontalPosition ||\n                this.verticalPosition !== desiredVerticalPosition;\n            this.setHorizontalPosition(desiredHorizontalPosition, nextPositionerDimension);\n            this.setVerticalPosition(desiredVerticalPosition, nextPositionerDimension);\n            this.updateRegionStyle();\n            if (!this.initialLayoutComplete) {\n                this.initialLayoutComplete = true;\n                this.requestPositionUpdates();\n                return;\n            }\n            if (!this.regionVisible) {\n                this.regionVisible = true;\n                this.style.removeProperty(\"pointer-events\");\n                this.style.removeProperty(\"opacity\");\n                this.classList.toggle(\"loaded\", true);\n                this.$emit(\"loaded\", this, { bubbles: false });\n            }\n            this.updatePositionClasses();\n            if (positionChanged) {\n                // emit change event\n                this.$emit(\"positionchange\", this, { bubbles: false });\n            }\n        };\n        /**\n         *  Updates the style string applied to the region element as well as the css classes attached\n         *  to the root element\n         */\n        this.updateRegionStyle = () => {\n            this.style.width = this.regionWidth;\n            this.style.height = this.regionHeight;\n            this.style.transform = `translate(${this.translateX}px, ${this.translateY}px)`;\n        };\n        /**\n         *  Updates the css classes that reflect the current position of the element\n         */\n        this.updatePositionClasses = () => {\n            this.classList.toggle(\"top\", this.verticalPosition === \"start\");\n            this.classList.toggle(\"bottom\", this.verticalPosition === \"end\");\n            this.classList.toggle(\"inset-top\", this.verticalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-bottom\", this.verticalPosition === \"insetEnd\");\n            this.classList.toggle(\"vertical-center\", this.verticalPosition === \"center\");\n            this.classList.toggle(\"left\", this.horizontalPosition === \"start\");\n            this.classList.toggle(\"right\", this.horizontalPosition === \"end\");\n            this.classList.toggle(\"inset-left\", this.horizontalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-right\", this.horizontalPosition === \"insetEnd\");\n            this.classList.toggle(\"horizontal-center\", this.horizontalPosition === \"center\");\n        };\n        /**\n         * Get horizontal positioning state based on desired position\n         */\n        this.setHorizontalPosition = (desiredHorizontalPosition, nextPositionerDimension) => {\n            if (desiredHorizontalPosition === undefined ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined) {\n                return;\n            }\n            let nextRegionWidth = 0;\n            switch (this.horizontalScaling) {\n                case \"anchor\":\n                case \"fill\":\n                    nextRegionWidth = this.horizontalViewportLock\n                        ? this.viewportRect.width\n                        : nextPositionerDimension.width;\n                    this.regionWidth = `${nextRegionWidth}px`;\n                    break;\n                case \"content\":\n                    nextRegionWidth = this.regionRect.width;\n                    this.regionWidth = \"unset\";\n                    break;\n            }\n            let sizeDelta = 0;\n            switch (desiredHorizontalPosition) {\n                case \"start\":\n                    this.translateX = this.baseHorizontalOffset - nextRegionWidth;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.left > this.viewportRect.right) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.left - this.viewportRect.right);\n                    }\n                    break;\n                case \"insetStart\":\n                    this.translateX =\n                        this.baseHorizontalOffset - nextRegionWidth + this.anchorRect.width;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.right > this.viewportRect.right) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.right - this.viewportRect.right);\n                    }\n                    break;\n                case \"insetEnd\":\n                    this.translateX = this.baseHorizontalOffset;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.left < this.viewportRect.left) {\n                        this.translateX =\n                            this.translateX - (this.anchorRect.left - this.viewportRect.left);\n                    }\n                    break;\n                case \"end\":\n                    this.translateX = this.baseHorizontalOffset + this.anchorRect.width;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.right < this.viewportRect.left) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.right - this.viewportRect.left);\n                    }\n                    break;\n                case \"center\":\n                    sizeDelta = (this.anchorRect.width - nextRegionWidth) / 2;\n                    this.translateX = this.baseHorizontalOffset + sizeDelta;\n                    if (this.horizontalViewportLock) {\n                        const regionLeft = this.anchorRect.left + sizeDelta;\n                        const regionRight = this.anchorRect.right - sizeDelta;\n                        if (regionLeft < this.viewportRect.left &&\n                            !(regionRight > this.viewportRect.right)) {\n                            this.translateX =\n                                this.translateX - (regionLeft - this.viewportRect.left);\n                        }\n                        else if (regionRight > this.viewportRect.right &&\n                            !(regionLeft < this.viewportRect.left)) {\n                            this.translateX =\n                                this.translateX - (regionRight - this.viewportRect.right);\n                        }\n                    }\n                    break;\n            }\n            this.horizontalPosition = desiredHorizontalPosition;\n        };\n        /**\n         * Set vertical positioning state based on desired position\n         */\n        this.setVerticalPosition = (desiredVerticalPosition, nextPositionerDimension) => {\n            if (desiredVerticalPosition === undefined ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined) {\n                return;\n            }\n            let nextRegionHeight = 0;\n            switch (this.verticalScaling) {\n                case \"anchor\":\n                case \"fill\":\n                    nextRegionHeight = this.verticalViewportLock\n                        ? this.viewportRect.height\n                        : nextPositionerDimension.height;\n                    this.regionHeight = `${nextRegionHeight}px`;\n                    break;\n                case \"content\":\n                    nextRegionHeight = this.regionRect.height;\n                    this.regionHeight = \"unset\";\n                    break;\n            }\n            let sizeDelta = 0;\n            switch (desiredVerticalPosition) {\n                case \"start\":\n                    this.translateY = this.baseVerticalOffset - nextRegionHeight;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.top > this.viewportRect.bottom) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.top - this.viewportRect.bottom);\n                    }\n                    break;\n                case \"insetStart\":\n                    this.translateY =\n                        this.baseVerticalOffset - nextRegionHeight + this.anchorRect.height;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.bottom > this.viewportRect.bottom) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.bottom - this.viewportRect.bottom);\n                    }\n                    break;\n                case \"insetEnd\":\n                    this.translateY = this.baseVerticalOffset;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.top < this.viewportRect.top) {\n                        this.translateY =\n                            this.translateY - (this.anchorRect.top - this.viewportRect.top);\n                    }\n                    break;\n                case \"end\":\n                    this.translateY = this.baseVerticalOffset + this.anchorRect.height;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.bottom < this.viewportRect.top) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.bottom - this.viewportRect.top);\n                    }\n                    break;\n                case \"center\":\n                    sizeDelta = (this.anchorRect.height - nextRegionHeight) / 2;\n                    this.translateY = this.baseVerticalOffset + sizeDelta;\n                    if (this.verticalViewportLock) {\n                        const regionTop = this.anchorRect.top + sizeDelta;\n                        const regionBottom = this.anchorRect.bottom - sizeDelta;\n                        if (regionTop < this.viewportRect.top &&\n                            !(regionBottom > this.viewportRect.bottom)) {\n                            this.translateY =\n                                this.translateY - (regionTop - this.viewportRect.top);\n                        }\n                        else if (regionBottom > this.viewportRect.bottom &&\n                            !(regionTop < this.viewportRect.top)) {\n                            this.translateY =\n                                this.translateY - (regionBottom - this.viewportRect.bottom);\n                        }\n                    }\n            }\n            this.verticalPosition = desiredVerticalPosition;\n        };\n        /**\n         *  Get available positions based on positioning mode\n         */\n        this.getPositioningOptions = (inset) => {\n            if (inset) {\n                return [\"insetStart\", \"insetEnd\"];\n            }\n            return [\"start\", \"end\"];\n        };\n        /**\n         *  Get the space available for a particular relative position\n         */\n        this.getAvailableSpace = (positionOption, anchorStart, anchorEnd, anchorSpan, viewportStart, viewportEnd) => {\n            const spaceStart = anchorStart - viewportStart;\n            const spaceEnd = viewportEnd - (anchorStart + anchorSpan);\n            switch (positionOption) {\n                case \"start\":\n                    return spaceStart;\n                case \"insetStart\":\n                    return spaceStart + anchorSpan;\n                case \"insetEnd\":\n                    return spaceEnd + anchorSpan;\n                case \"end\":\n                    return spaceEnd;\n                case \"center\":\n                    return Math.min(spaceStart, spaceEnd) * 2 + anchorSpan;\n            }\n        };\n        /**\n         * Get region dimensions\n         */\n        this.getNextRegionDimension = (desiredHorizontalPosition, desiredVerticalPosition) => {\n            const newRegionDimension = {\n                height: this.regionRect !== undefined ? this.regionRect.height : 0,\n                width: this.regionRect !== undefined ? this.regionRect.width : 0,\n            };\n            if (desiredHorizontalPosition !== undefined &&\n                this.horizontalScaling === \"fill\") {\n                newRegionDimension.width = this.getAvailableSpace(desiredHorizontalPosition, this.anchorRect !== undefined ? this.anchorRect.left : 0, this.anchorRect !== undefined ? this.anchorRect.right : 0, this.anchorRect !== undefined ? this.anchorRect.width : 0, this.viewportRect !== undefined ? this.viewportRect.left : 0, this.viewportRect !== undefined ? this.viewportRect.right : 0);\n            }\n            else if (this.horizontalScaling === \"anchor\") {\n                newRegionDimension.width =\n                    this.anchorRect !== undefined ? this.anchorRect.width : 0;\n            }\n            if (desiredVerticalPosition !== undefined && this.verticalScaling === \"fill\") {\n                newRegionDimension.height = this.getAvailableSpace(desiredVerticalPosition, this.anchorRect !== undefined ? this.anchorRect.top : 0, this.anchorRect !== undefined ? this.anchorRect.bottom : 0, this.anchorRect !== undefined ? this.anchorRect.height : 0, this.viewportRect !== undefined ? this.viewportRect.top : 0, this.viewportRect !== undefined ? this.viewportRect.bottom : 0);\n            }\n            else if (this.verticalScaling === \"anchor\") {\n                newRegionDimension.height =\n                    this.anchorRect !== undefined ? this.anchorRect.height : 0;\n            }\n            return newRegionDimension;\n        };\n        /**\n         * starts event listeners that can trigger auto updating\n         */\n        this.startAutoUpdateEventListeners = () => {\n            window.addEventListener(eventResize, this.update, { passive: true });\n            window.addEventListener(eventScroll, this.update, {\n                passive: true,\n                capture: true,\n            });\n            if (this.resizeDetector !== null && this.viewportElement !== null) {\n                this.resizeDetector.observe(this.viewportElement);\n            }\n        };\n        /**\n         * stops event listeners that can trigger auto updating\n         */\n        this.stopAutoUpdateEventListeners = () => {\n            window.removeEventListener(eventResize, this.update);\n            window.removeEventListener(eventScroll, this.update);\n            if (this.resizeDetector !== null && this.viewportElement !== null) {\n                this.resizeDetector.unobserve(this.viewportElement);\n            }\n        };\n    }\n    anchorChanged() {\n        if (this.initialLayoutComplete) {\n            this.anchorElement = this.getAnchor();\n        }\n    }\n    viewportChanged() {\n        if (this.initialLayoutComplete) {\n            this.viewportElement = this.getViewport();\n        }\n    }\n    horizontalPositioningModeChanged() {\n        this.requestReset();\n    }\n    horizontalDefaultPositionChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalViewportLockChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalInsetChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalThresholdChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalScalingChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalPositioningModeChanged() {\n        this.requestReset();\n    }\n    verticalDefaultPositionChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalViewportLockChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalInsetChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalThresholdChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalScalingChanged() {\n        this.updateForAttributeChange();\n    }\n    fixedPlacementChanged() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.initialize();\n        }\n    }\n    autoUpdateModeChanged(prevMode, newMode) {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            if (prevMode === \"auto\") {\n                this.stopAutoUpdateEventListeners();\n            }\n            if (newMode === \"auto\") {\n                this.startAutoUpdateEventListeners();\n            }\n        }\n    }\n    anchorElementChanged() {\n        this.requestReset();\n    }\n    viewportElementChanged() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.initialize();\n        }\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.autoUpdateMode === \"auto\") {\n            this.startAutoUpdateEventListeners();\n        }\n        this.initialize();\n    }\n    /**\n     * @internal\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.autoUpdateMode === \"auto\") {\n            this.stopAutoUpdateEventListeners();\n        }\n        this.stopObservers();\n        this.disconnectResizeDetector();\n    }\n    /**\n     * @internal\n     */\n    adoptedCallback() {\n        this.initialize();\n    }\n    /**\n     * destroys the instance's resize observer\n     */\n    disconnectResizeDetector() {\n        if (this.resizeDetector !== null) {\n            this.resizeDetector.disconnect();\n            this.resizeDetector = null;\n        }\n    }\n    /**\n     * initializes the instance's resize observer\n     */\n    initializeResizeDetector() {\n        this.disconnectResizeDetector();\n        this.resizeDetector = new window.ResizeObserver(this.handleResize);\n    }\n    /**\n     * react to attribute changes that don't require a reset\n     */\n    updateForAttributeChange() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.forceUpdate = true;\n            this.update();\n        }\n    }\n    /**\n     * fully initializes the component\n     */\n    initialize() {\n        this.initializeResizeDetector();\n        if (this.anchorElement === null) {\n            this.anchorElement = this.getAnchor();\n        }\n        this.requestReset();\n    }\n    /**\n     * Request a reset if there are currently no open requests\n     */\n    requestReset() {\n        if (this.$fastController.isConnected &&\n            this.pendingReset === false) {\n            this.setInitialState();\n            DOM.queueUpdate(() => this.reset());\n            this.pendingReset = true;\n        }\n    }\n    /**\n     * sets the starting configuration for component internal values\n     */\n    setInitialState() {\n        this.initialLayoutComplete = false;\n        this.regionVisible = false;\n        this.translateX = 0;\n        this.translateY = 0;\n        this.baseHorizontalOffset = 0;\n        this.baseVerticalOffset = 0;\n        this.viewportRect = undefined;\n        this.regionRect = undefined;\n        this.anchorRect = undefined;\n        this.verticalPosition = undefined;\n        this.horizontalPosition = undefined;\n        this.style.opacity = \"0\";\n        this.style.pointerEvents = \"none\";\n        this.forceUpdate = false;\n        this.style.position = this.fixedPlacement ? \"fixed\" : \"absolute\";\n        this.updatePositionClasses();\n        this.updateRegionStyle();\n    }\n}\nAnchoredRegion.intersectionService = new IntersectionService();\n__decorate([\n    attr\n], AnchoredRegion.prototype, \"anchor\", void 0);\n__decorate([\n    attr\n], AnchoredRegion.prototype, \"viewport\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-positioning-mode\" })\n], AnchoredRegion.prototype, \"horizontalPositioningMode\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-default-position\" })\n], AnchoredRegion.prototype, \"horizontalDefaultPosition\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-viewport-lock\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"horizontalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-inset\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"horizontalInset\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-threshold\" })\n], AnchoredRegion.prototype, \"horizontalThreshold\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-scaling\" })\n], AnchoredRegion.prototype, \"horizontalScaling\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-positioning-mode\" })\n], AnchoredRegion.prototype, \"verticalPositioningMode\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-default-position\" })\n], AnchoredRegion.prototype, \"verticalDefaultPosition\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-viewport-lock\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"verticalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-inset\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"verticalInset\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-threshold\" })\n], AnchoredRegion.prototype, \"verticalThreshold\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-scaling\" })\n], AnchoredRegion.prototype, \"verticalScaling\", void 0);\n__decorate([\n    attr({ attribute: \"fixed-placement\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"fixedPlacement\", void 0);\n__decorate([\n    attr({ attribute: \"auto-update-mode\" })\n], AnchoredRegion.prototype, \"autoUpdateMode\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"anchorElement\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"viewportElement\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"initialLayoutComplete\", void 0);\n","import { html, ref, when } from \"@microsoft/fast-element\";\nimport { AnchoredRegion } from \"../anchored-region/anchored-region.js\";\n/**\n * Creates a template for the {@link @microsoft/fast-foundation#(Tooltip:class)} component using the provided prefix.\n * @public\n */\nexport const tooltipTemplate = (context, definition) => {\n    return html `\n        ${when(x => x.tooltipVisible, html `\n            <${context.tagFor(AnchoredRegion)}\n                fixed-placement=\"true\"\n                auto-update-mode=\"${x => x.autoUpdateMode}\"\n                vertical-positioning-mode=\"${x => x.verticalPositioningMode}\"\n                vertical-default-position=\"${x => x.verticalDefaultPosition}\"\n                vertical-inset=\"${x => x.verticalInset}\"\n                vertical-scaling=\"${x => x.verticalScaling}\"\n                horizontal-positioning-mode=\"${x => x.horizontalPositioningMode}\"\n                horizontal-default-position=\"${x => x.horizontalDefaultPosition}\"\n                horizontal-scaling=\"${x => x.horizontalScaling}\"\n                horizontal-inset=\"${x => x.horizontalInset}\"\n                vertical-viewport-lock=\"${x => x.horizontalViewportLock}\"\n                horizontal-viewport-lock=\"${x => x.verticalViewportLock}\"\n                dir=\"${x => x.currentDirection}\"\n                ${ref(\"region\")}\n            >\n                <div class=\"tooltip\" part=\"tooltip\" role=\"tooltip\">\n                    <slot></slot>\n                </div>\n            </${context.tagFor(AnchoredRegion)}>\n        `)}\n    `;\n};\n","import { Tooltip as FoundationTooltip, tooltipTemplate as template } from '@microsoft/fast-foundation';\nimport { fillColor, neutralLayerFloating } from '../design-tokens';\nimport { tooltipStyles as styles } from './tooltip.styles';\n/**\n * The Fluent tooltip class\n * @internal\n */\nexport class Tooltip extends FoundationTooltip {\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        fillColor.setValueFor(this, neutralLayerFloating);\n    }\n}\n/**\n * The Fluent Tooltip Custom Element. Implements {@link @microsoft/fast-foundation#Tooltip},\n * {@link @microsoft/fast-foundation#tooltipTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-tooltip\\>\n */\nexport const fluentTooltip = Tooltip.compose({\n    baseName: 'tooltip',\n    baseClass: FoundationTooltip,\n    template,\n    styles,\n});\n","import { css } from '@microsoft/fast-element';\nimport { AnchoredRegion, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { elevationShadowTooltip } from '../styles/index';\nimport { controlCornerRadius, fillColor, neutralForegroundRest, neutralStrokeLayerRest, strokeWidth, } from '../design-tokens';\nimport { typeRampBase } from '../styles/patterns/type-ramp';\nexport const tooltipStyles = (context, definition) => css `\n    :host {\n      position: relative;\n      contain: layout;\n      overflow: visible;\n      height: 0;\n      width: 0;\n      z-index: 10000;\n    }\n\n    .tooltip {\n      box-sizing: border-box;\n      border-radius: calc(${controlCornerRadius} * 1px);\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      background: ${fillColor};\n      color: ${neutralForegroundRest};\n      padding: 4px 12px;\n      height: fit-content;\n      width: fit-content;\n      ${typeRampBase}\n      white-space: nowrap;\n      box-shadow: ${elevationShadowTooltip};\n    }\n\n    ${context.tagFor(AnchoredRegion)} {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      overflow: visible;\n      flex-direction: row;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right,\n    ${context.tagFor(AnchoredRegion)}.left {\n      flex-direction: column;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.left .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n      content: '';\n      width: 12px;\n      height: 12px;\n      background: ${fillColor};\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-left: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      position: absolute;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip::after {\n      transform: translateX(-50%) rotate(225deg);\n      bottom: 5px;\n      left: 50%;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip {\n      margin-bottom: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after {\n      transform: translateX(-50%) rotate(45deg);\n      top: 5px;\n      left: 50%;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip {\n      margin-top: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.left .tooltip::after {\n      transform: translateY(-50%) rotate(135deg);\n      top: 50%;\n      right: 5px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.left .tooltip {\n      margin-right: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n      transform: translateY(-50%) rotate(-45deg);\n      top: 50%;\n      left: 5px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right .tooltip {\n      margin-left: 12px;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host([disabled]) {\n          opacity: 1;\n        }\n        ${context.tagFor(AnchoredRegion)}.top .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.left .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n          content: '';\n          width: unset;\n          height: unset;\n        }\n      `));\n"],"names":["DividerRole","Divider","_FoundationElement","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","role","orientation","Orientation","horizontal","_createClass","FoundationElement","__decorate","attr","prototype","fluentDivider","compose","baseName","template","context","definition","html","_templateObject","_taggedTemplateLiteral","x","styles","css","display","strokeWidth","neutralStrokeDividerRest","designUnit","Skeleton","shape","mode","fluentSkeleton","pattern","shimmer","when","_templateObject2","neutralFillSecondaryRest","neutralFillSecondaryHover","controlCornerRadius","withBehaviors","forcedColorsStylesheetBehavior","SystemColors","CanvasText","TooltipPosition","Tooltip","anchor","delay","autoUpdateMode","anchorElement","viewportElement","verticalPositioningMode","horizontalPositioningMode","horizontalInset","verticalInset","horizontalScaling","verticalScaling","verticalDefaultPosition","undefined","horizontalDefaultPosition","tooltipVisible","currentDirection","Direction","ltr","showDelayTimer","hideDelayTimer","isAnchorHoveredFocused","isRegionHovered","handlePositionChange","ev","classList","toggle","region","verticalPosition","horizontalPosition","handleRegionMouseOver","handleRegionMouseOut","startHideDelayTimer","handleAnchorMouseOver","startShowDelayTimer","handleAnchorMouseOut","clearShowDelayTimer","handleAnchorFocusIn","handleAnchorFocusOut","clearHideDelayTimer","window","setTimeout","updateTooltipVisibility","clearTimeout","startHover","getAnchor","rootNode","getRootNode","ShadowRoot","getElementById","document","handleDocumentKeydown","e","defaultPrevented","key","keyEscape","$emit","visible","hideTooltip","showTooltip","getDirection","_assertThisInitialized","addEventListener","DOM","queueUpdate","setRegionProps","removeEventListener","passive","value","this","$fastController","isConnected","updateLayout","oldValue","_this2","anchorId","id","parentElement","querySelectorAll","forEach","element","_get","_getPrototypeOf","call","position","attribute","observable","IntersectionService","intersectionDetector","observedElements","Map","requestPosition","target","callback","_a","has","get","push","set","observe","cancelRequestPosition","callbacks","callBackIndex","indexOf","splice","initializeIntersectionDetector","$global","IntersectionObserver","handleIntersection","root","rootMargin","threshold","entries","pendingCallbacks","pendingCallbackParams","entry","unobserve","thisElementCallbacks","targetCallbackIndex","length","delete","index","AnchoredRegion","viewport","horizontalViewportLock","verticalViewportLock","fixedPlacement","initialLayoutComplete","resizeDetector","baseHorizontalOffset","baseVerticalOffset","pendingPositioningUpdate","pendingReset","regionVisible","forceUpdate","updateThreshold","update","requestPositionUpdates","startObservers","stopObservers","intersectionService","disconnect","getViewport","documentElement","applyIntersectionEntries","regionEntry","find","anchorEntry","viewportEntry","regionRect","anchorRect","viewportRect","isRectDifferent","boundingClientRect","DOMRectReadOnly","scrollLeft","y","scrollTop","width","height","updateRegionOffset","left","translateX","top","translateY","rectA","rectB","Math","abs","right","bottom","handleResize","reset","desiredVerticalPosition","desiredHorizontalPosition","horizontalOptions","getPositioningOptions","dirCorrectedHorizontalDefaultPosition","newDirection","initialize","horizontalThreshold","anchorLeft","anchorRight","anchorWidth","viewportLeft","viewportRight","getAvailableSpace","verticalOptions","verticalThreshold","anchorTop","anchorBottom","anchorHeight","viewportTop","viewportBottom","nextPositionerDimension","getNextRegionDimension","positionChanged","setHorizontalPosition","setVerticalPosition","updateRegionStyle","style","removeProperty","bubbles","updatePositionClasses","regionWidth","regionHeight","transform","concat","nextRegionWidth","sizeDelta","regionLeft","regionRight","nextRegionHeight","regionTop","regionBottom","inset","positionOption","anchorStart","anchorEnd","anchorSpan","viewportStart","viewportEnd","spaceStart","spaceEnd","min","newRegionDimension","startAutoUpdateEventListeners","eventResize","eventScroll","capture","stopAutoUpdateEventListeners","requestReset","updateForAttributeChange","prevMode","newMode","disconnectResizeDetector","ResizeObserver","initializeResizeDetector","setInitialState","opacity","pointerEvents","_FoundationTooltip","fillColor","setValueFor","neutralLayerFloating","FoundationTooltip","fluentTooltip","baseClass","tagFor","ref","neutralStrokeLayerRest","neutralForegroundRest","typeRampBase","elevationShadowTooltip"],"sourceRoot":""}