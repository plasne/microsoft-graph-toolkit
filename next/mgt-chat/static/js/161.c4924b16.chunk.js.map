{"version":3,"file":"static/js/161.c4924b16.chunk.js","mappings":"0PAEaA,EACH,cADGA,EAEA,uBAMPC,GAAgBC,EAAAA,EAAAA,GAAA,CAAAC,KAAA,CAAAC,QAAA,UAAAC,QAAA,WAAAC,OAAA,UAAAC,QAAA,WAAAC,QAAA,UAAAC,OAAA,WAAAC,QAAA,UAAAC,QAAA,UAAAC,QAAA,UAAAC,QAAA,UAAAC,OAAA,WAAAC,QAAA,UAAAC,QAAA,WAAAC,QAAA,UAAAC,OAAA,WAAAC,OAAA,WAAAC,QAAA,YAAAC,UAAA,CAAAC,OAAA,WAAAC,QAAA,uBAAAC,OAAA,sBAAAC,OAAA,UAAAC,MAAA,CAAAC,QAAA,YAAAC,OAAA,CAAAC,OAAA,WAAAF,QAAA,YAAAG,IAAA,CAAAD,OAAA,YAAAE,MAAA,CAAAC,OAAA,WAAAC,QAAA,UAAAC,QAAA,wBAAAC,QAAA,WAAAC,QAAA,wBAAAC,QAAA,WAAAC,OAAA,wBAAAC,QAAA,UAAAC,OAAA,kCAAAR,OAAA,UAAAC,QAAA,WAAAC,QAAA,uBAAAC,QAAA,WAAAC,QAAA,uBAAAC,QAAA,WAAAC,OAAA,sBAAAC,QAAA,UAAAC,OAAA,uBAAAC,OAAA,CAAAT,OAAA,UAAAC,QAAA,UAAAC,QAAA,wBAAAC,QAAA,WAAAC,QAAA,wBAAAC,QAAA,UAAAC,OAAA,sBAAAC,QAAA,WAAAC,OAAA,uBAAAE,OAAA,CAAAV,OAAA,UAAAC,QAAA,WAAAC,QAAA,wBAAAC,QAAA,UAAAC,QAAA,wBAAAC,QAAA,UAAAC,OAAA,wBAAAC,QAAA,WAAAC,OAAA,2BAAAG,EAAA,qjGA6FhBC,GAAsB1C,EAAAA,EAAAA,GAAA,CAAAC,KAAA,CAAA0C,OAAA,UAAAC,QAAA,WAAAC,QAAA,UAAAC,OAAA,WAAAC,QAAA,UAAAC,OAAA,UAAAC,OAAA,YAAAC,MAAA,CAAAC,OAAA,uBAAAC,OAAA,wBAAA5B,MAAA,CAAAG,OAAA,WAAAN,QAAA,uBAAAgC,QAAA,WAAA/B,OAAA,yBAAAI,OAAA,CAAAL,QAAA,uBAAAC,OAAA,yBAAAM,IAAA,CAAAP,QAAA,uBAAAI,QAAA,WAAAH,OAAA,wBAAAgC,OAAA,cAAAb,EAAA,upBAkDtBc,GAAoBvD,EAAAA,EAAAA,GAAA,CAAAC,KAAA,CAAAI,QAAA,WAAAmD,OAAA,WAAAC,OAAA,wBAAAC,QAAA,uBAAAC,OAAA,UAAAC,QAAA,sBAAAC,OAAA,wBAAAC,QAAA,YAAAZ,MAAA,CAAAa,QAAA,WAAAC,OAAA,YAAAC,aAAA,CAAAT,OAAA,YAAAhC,MAAA,CAAAG,OAAA,WAAAP,OAAA,UAAA8C,QAAA,UAAA3C,OAAA,WAAAG,OAAA,CAAAN,OAAA,UAAAG,OAAA,WAAAK,IAAA,CAAAR,OAAA,UAAAK,QAAA,WAAAF,OAAA,UAAA4C,OAAA,aAAA1B,EAAA,g3B,WClJT2B,EAAwBC,EAAAA,YAAiB,SAACC,EAAOC,GAC9D,IAAMC,ECF6B,SAACF,EAAOC,GAC3C,IAAAE,EAAsGH,EAA9FI,aAAAA,OAAY,IAAAD,EAAG,SAAQA,EAAAE,EAAuEL,EAArEM,WAAAA,OAAU,IAAAD,EAAG,UAASA,EAAAE,EAA+CP,EAA7CpB,MAAAA,OAAK,IAAA2B,GAAQA,EAAAC,EAAgCR,EAA9BS,SAAAA,OAAQ,IAAAD,GAAQA,EAAEE,EAAYV,EAAZU,QACpFC,GAAYC,EAAAA,EAAAA,IAAM,YACxB,MAAO,CAEHR,aAAAA,EACAE,WAAAA,EACA1B,MAAAA,EACA6B,SAAAA,EAEAI,WAAY,CACRC,KAAM,MACNJ,QAAS,OAEbI,KAAMC,EAAAA,IAAYC,EAAAA,EAAAA,GAAyB,OAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC5CC,KAAM,YACN,mBAAoBT,EAAW,WAAa,aAC5C,kBAAmBT,EAAMmB,SAAWR,OAAYS,GAC7CpB,GAAK,IAIRC,IAAKA,KACL,CACAoB,YAAa,QAEjBX,QAASK,EAAAA,GAAYL,EAAS,CAC1BY,aAAc,CACVC,GAAIZ,EACJQ,SAAUnB,EAAMmB,UAEpBE,YAAa,QAGzB,CDhCkBG,CAAoBxB,EAAOC,GAGzC,ODqMsC,SAAAC,GACtC,IAAMuB,EAAahG,IACbiG,EAAmBtD,IACnBuD,EAAiB1C,IACfmB,EAA8CF,EAA9CE,aAAcE,EAAgCJ,EAAhCI,WAAY1B,EAAoBsB,EAApBtB,MAAO6B,EAAaP,EAAbO,SACzCP,EAAMY,KAAKc,WAAYC,EAAAA,EAAAA,GAAarG,EACpCiG,EAAW9F,KAAM8F,EAAWrB,GAAeE,GAAcmB,EAAWnB,IACnEG,GAAYiB,EAAiB/F,MAAO8E,GAAY7B,GAAS8C,EAAiB9C,OAAQ6B,GAAYiB,EAAiBtB,GAChHK,GAAYkB,EAAehG,KAAM8E,GAAY7B,GAAS+C,EAAe/C,MAAO6B,GAAYkB,EAAevB,GAAeK,QAAoCW,IAAxBlB,EAAMY,KAAKK,UAA0BQ,EAAehC,kBAC9JyB,IAAxBlB,EAAMY,KAAKK,UAA0BM,EAAW5E,UAChDqD,EAAMY,KAAKc,WACP1B,EAAMQ,UACNR,EAAMQ,QAAQkB,WAAYC,EAAAA,EAAAA,GAAarG,EAA2B0E,EAAMQ,QAAQkB,WAGxF,CCtNIE,CAA0B5B,IAC1B6B,EAAAA,EAAAA,IAA4B,4BAA5BA,CAAyD7B,GENnB,SAACA,GAEvC,OADA8B,EAAAA,EAAAA,GAAY9B,IACS+B,EAAAA,EAAAA,IAAK/B,EAAMY,KAAM,CAClCK,cAAkCC,IAAxBlB,EAAMY,KAAKK,WAAwCc,EAAAA,EAAAA,IAAK/B,EAAMQ,QAAS,CAC7ES,SAAUjB,EAAMY,KAAKK,YAGjC,CFAWe,CAAuBhC,EAClC,IACAJ,EAAQqC,YAAc,S,oJGTTC,EAIE,YCIFtC,EAAO,SAAAuC,IAAAC,EAAAA,EAAAA,GAAAxC,EAAAuC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA1C,GAChB,SAAAA,IAAc,IAAA2C,EAiBgC,OAjBhCC,EAAAA,EAAAA,GAAA,KAAA5C,IACV2C,EAAAF,EAAAI,MAAA,KAASC,YAQJ1B,KAAOkB,EAQZK,EAAKI,YAAcC,EAAAA,EAAYC,WAAWN,CAC9C,CAAC,OAAAO,EAAAA,EAAAA,GAAAlD,EAAA,CAnBe,CAASmD,EAAAA,IAqB7BC,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDrD,EAAQsD,UAAW,YAAQ,IAC9BF,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDrD,EAAQsD,UAAW,mBAAe,G,+DC3BxBC,EAAgBvD,EAAQwD,QAAQ,CACzCC,SAAU,UACVC,SCR2B,SAACC,EAASC,GAAU,OAAKC,EAAAA,EAAAA,GAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uEACtC,SAAAC,GAAC,OAAIA,EAAE5C,IAAI,IAAuB,SAAA4C,GAAC,OAAIA,EAAEjB,WAAW,KDQtEkB,OEXyB,SAACN,EAASC,GAAU,OAAKM,EAAAA,EAAAA,GAAGJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kUACnDI,EAAAA,EAAAA,GAAQ,SAIWC,EAAAA,IAA4BC,EAAAA,IAM9BC,EAAAA,IACGF,EAAAA,IAA4BC,EAAAA,IAAwB,G,8HCLjEE,EAAQ,SAAAhC,IAAAC,EAAAA,EAAAA,GAAA+B,EAAAhC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA6B,GACjB,SAAAA,IAAc,IAAA5B,EASU,OATVC,EAAAA,EAAAA,GAAA,KAAA2B,IACV5B,EAAAF,EAAAI,MAAA,KAASC,YAQJ0B,MAAQ,OAAO7B,CACxB,CAAC,OAAAO,EAAAA,EAAAA,GAAAqB,EAAA,CAXgB,C,SAASpB,IAa9BC,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDkB,EAASjB,UAAW,YAAQ,IAC/BF,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDkB,EAASjB,UAAW,aAAS,IAChCF,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDkB,EAASjB,UAAW,eAAW,IAClCF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEoB,KAAM,aACdF,EAASjB,UAAW,eAAW,G,iGCvBrBoB,EAAiBH,EAASf,QAAQ,CAC3CC,SAAU,WACVC,SCR4B,SAACC,EAASC,GAAU,OAAKC,EAAAA,EAAAA,GAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iSAE5C,SAAAC,GAAC,MAAiB,WAAZA,EAAEQ,MAAqB,SAAW,MAAM,IAC5C,SAAAR,GAAC,OAAIA,EAAEW,OAAO,IACb,SAAAX,GAAC,OAAIA,EAAEY,OAAO,IAExBC,EAAAA,EAAAA,IAAK,SAAAb,GAAC,OAAkB,IAAdA,EAAEY,OAAgB,IAAEf,EAAAA,EAAAA,GAAIiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,uEAGC,SAAAC,GAAC,OAAIA,EAAEW,OAAO,IACnB,SAAAX,GAAC,OAAIA,EAAEW,OAAO,KDDlDV,OEV0B,SAACN,EAASC,GAAU,OAAKM,EAAAA,EAAAA,GAAGJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,woDACpDI,EAAAA,EAAAA,GAAQ,SACmBY,EAAAA,IAQvBC,EAAAA,IAOkBC,EAAAA,KAoBtBd,EAAAA,EAAAA,GAAQ,SAO2CY,EAAAA,KAwBrDG,eAAcC,EAAAA,EAAAA,KAA+BjB,EAAAA,EAAAA,GAAGY,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,4EAEtBqB,EAAAA,EAAaC,aAElC,G,8NCvEIC,EAIJ,MAJIA,EAQF,QAREA,EAYD,SAZCA,EAgBH,OAhBGA,EAoBF,QApBEA,EAwBJ,MAxBIA,EA4BA,WA5BAA,EAgCC,YAhCDA,EAoCG,cApCHA,EAwCI,eAxCJA,EA4CC,YA5CDA,EAgDD,UAhDCA,EAoDI,eApDJA,EAwDE,aC7CFC,EAAO,SAAAhD,IAAAC,EAAAA,EAAAA,GAAA+C,EAAAhD,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA6C,GAChB,SAAAA,IAAc,IAAA5C,EAqTR,OArTQC,EAAAA,EAAAA,GAAA,KAAA2C,IACV5C,EAAAF,EAAAI,MAAA,KAASC,YAQJ0C,OAAS,GAQd7C,EAAK8C,MAAQ,IASb9C,EAAK+C,eAAiB,SAOtB/C,EAAKgD,cAAgB,KAMrBhD,EAAKiD,gBAAkB,KAKvBjD,EAAKkD,wBAA0B,UAK/BlD,EAAKmD,0BAA4B,UAIjCnD,EAAKoD,gBAAkB,QAIvBpD,EAAKqD,cAAgB,QAIrBrD,EAAKsD,kBAAoB,UAIzBtD,EAAKuD,gBAAkB,UAIvBvD,EAAKwD,6BAA0B7E,EAI/BqB,EAAKyD,+BAA4B9E,EAIjCqB,EAAK0D,gBAAiB,EAOtB1D,EAAK2D,iBAAmBC,EAAAA,EAAUC,IAIlC7D,EAAK8D,eAAiB,KAItB9D,EAAK+D,eAAiB,KAItB/D,EAAKgE,wBAAyB,EAI9BhE,EAAKiE,iBAAkB,EAMvBjE,EAAKkE,qBAAuB,SAACC,GACzBnE,EAAKoE,UAAUC,OAAO,MAAwC,UAAjCrE,EAAKsE,OAAOC,kBACzCvE,EAAKoE,UAAUC,OAAO,SAA2C,QAAjCrE,EAAKsE,OAAOC,kBAC5CvE,EAAKoE,UAAUC,OAAO,YAA8C,eAAjCrE,EAAKsE,OAAOC,kBAC/CvE,EAAKoE,UAAUC,OAAO,eAAiD,aAAjCrE,EAAKsE,OAAOC,kBAClDvE,EAAKoE,UAAUC,OAAO,kBAAoD,WAAjCrE,EAAKsE,OAAOC,kBACrDvE,EAAKoE,UAAUC,OAAO,OAA2C,UAAnCrE,EAAKsE,OAAOE,oBAC1CxE,EAAKoE,UAAUC,OAAO,QAA4C,QAAnCrE,EAAKsE,OAAOE,oBAC3CxE,EAAKoE,UAAUC,OAAO,aAAiD,eAAnCrE,EAAKsE,OAAOE,oBAChDxE,EAAKoE,UAAUC,OAAO,cAAkD,aAAnCrE,EAAKsE,OAAOE,oBACjDxE,EAAKoE,UAAUC,OAAO,oBAAwD,WAAnCrE,EAAKsE,OAAOE,mBAC3D,EAIAxE,EAAKyE,sBAAwB,SAACN,GAC1BnE,EAAKiE,iBAAkB,CAC3B,EAIAjE,EAAK0E,qBAAuB,SAACP,GACzBnE,EAAKiE,iBAAkB,EACvBjE,EAAK2E,qBACT,EAIA3E,EAAK4E,sBAAwB,SAACT,GACtBnE,EAAK0D,eAEL1D,EAAKgE,wBAAyB,EAGlChE,EAAK6E,qBACT,EAIA7E,EAAK8E,qBAAuB,SAACX,GACzBnE,EAAKgE,wBAAyB,EAC9BhE,EAAK+E,sBACL/E,EAAK2E,qBACT,EAIA3E,EAAKgF,oBAAsB,SAACb,GACxBnE,EAAK6E,qBACT,EAIA7E,EAAKiF,qBAAuB,SAACd,GACzBnE,EAAKgE,wBAAyB,EAC9BhE,EAAK+E,sBACL/E,EAAK2E,qBACT,EAIA3E,EAAK2E,oBAAsB,WACvB3E,EAAKkF,sBACAlF,EAAK0D,iBAKV1D,EAAK+D,eAAiBoB,OAAOC,YAAW,WACpCpF,EAAKqF,yBACT,GAAG,IACP,EAIArF,EAAKkF,oBAAsB,WACK,OAAxBlF,EAAK+D,iBACLuB,aAAatF,EAAK+D,gBAClB/D,EAAK+D,eAAiB,KAE9B,EAIA/D,EAAK6E,oBAAsB,WACnB7E,EAAKgE,yBAGLhE,EAAK8C,MAAQ,EACe,OAAxB9C,EAAK8D,iBACL9D,EAAK8D,eAAiBqB,OAAOC,YAAW,WACpCpF,EAAKuF,YACT,GAAGvF,EAAK8C,QAGhB9C,EAAKuF,aACT,EAIAvF,EAAKuF,WAAa,WACdvF,EAAKgE,wBAAyB,EAC9BhE,EAAKqF,yBACT,EAIArF,EAAK+E,oBAAsB,WACK,OAAxB/E,EAAK8D,iBACLwB,aAAatF,EAAK8D,gBAClB9D,EAAK8D,eAAiB,KAE9B,EAIA9D,EAAKwF,UAAY,WACb,IAAMC,EAAWzF,EAAK0F,cACtB,OAAID,aAAoBE,WACbF,EAASG,eAAe5F,EAAK6C,QAEjCgD,SAASD,eAAe5F,EAAK6C,OACxC,EAIA7C,EAAK8F,sBAAwB,SAACC,GAC1B,IAAKA,EAAEC,kBAAoBhG,EAAK0D,gBACpBqC,EAAEE,MACDC,EAAAA,GACDlG,EAAKgE,wBAAyB,EAC9BhE,EAAKqF,0BACLrF,EAAKmG,MAAM,UAI3B,EAIAnG,EAAKqF,wBAA0B,WAC3B,IAAqB,IAAjBrF,EAAKoG,QACLpG,EAAKqG,kBAEJ,KAAqB,IAAjBrG,EAAKoG,QAEV,YADApG,EAAKsG,cAIL,GAAItG,EAAKgE,wBAA0BhE,EAAKiE,gBAEpC,YADAjE,EAAKsG,cAGTtG,EAAKqG,aACT,CACJ,EAIArG,EAAKsG,YAAc,WACXtG,EAAK0D,iBAGT1D,EAAK2D,kBAAmB4C,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAAxG,IACpCA,EAAK0D,gBAAiB,EACtBmC,SAASY,iBAAiB,UAAWzG,EAAK8F,uBAC1CY,EAAAA,GAAIC,YAAY3G,EAAK4G,gBACzB,EAIA5G,EAAKqG,YAAc,WACVrG,EAAK0D,iBAGV1D,EAAKkF,sBACe,OAAhBlF,EAAKsE,aAAmC3F,IAAhBqB,EAAKsE,SAC7BtE,EAAKsE,OAAOuC,oBAAoB,iBAAkB7G,EAAKkE,sBACvDlE,EAAKsE,OAAOrB,gBAAkB,KAC9BjD,EAAKsE,OAAOtB,cAAgB,KAC5BhD,EAAKsE,OAAOuC,oBAAoB,YAAa7G,EAAKyE,uBAClDzE,EAAKsE,OAAOuC,oBAAoB,WAAY7G,EAAK0E,uBAErDmB,SAASgB,oBAAoB,UAAW7G,EAAK8F,uBAC7C9F,EAAK0D,gBAAiB,EAC1B,EAKA1D,EAAK4G,eAAiB,WACb5G,EAAK0D,iBAGV1D,EAAKsE,OAAOrB,gBAAkBjD,EAAKiD,gBACnCjD,EAAKsE,OAAOtB,cAAgBhD,EAAKgD,cACjChD,EAAKsE,OAAOmC,iBAAiB,iBAAkBzG,EAAKkE,sBACpDlE,EAAKsE,OAAOmC,iBAAiB,YAAazG,EAAKyE,sBAAuB,CAClEqC,SAAS,IAEb9G,EAAKsE,OAAOmC,iBAAiB,WAAYzG,EAAK0E,qBAAsB,CAChEoC,SAAS,IAEjB,EAAE9G,CACN,CA8HC,OA9HAO,EAAAA,EAAAA,GAAAqC,EAAA,EAAAqD,IAAA,iBAAAc,MACD,WACQC,KAAKC,gBAAgBC,cACrBF,KAAK3B,0BACL2B,KAAKG,eAEb,GAAC,CAAAlB,IAAA,gBAAAc,MACD,WACQC,KAAKC,gBAAgBC,cACrBF,KAAKhE,cAAgBgE,KAAKxB,YAElC,GAAC,CAAAS,IAAA,kBAAAc,MACD,WACQC,KAAKC,gBAAgBC,aACrBF,KAAKG,cAEb,GAAC,CAAAlB,IAAA,uBAAAc,MACD,SAAqBK,GAAU,IAAAC,EAAA,KAC3B,GAAIL,KAAKC,gBAAgBC,YAAa,CAOlC,GANiB,OAAbE,QAAkCzI,IAAbyI,IACrBA,EAASP,oBAAoB,YAAaG,KAAKpC,uBAC/CwC,EAASP,oBAAoB,WAAYG,KAAKlC,sBAC9CsC,EAASP,oBAAoB,UAAWG,KAAKhC,qBAC7CoC,EAASP,oBAAoB,WAAYG,KAAK/B,uBAEvB,OAAvB+B,KAAKhE,oBAAiDrE,IAAvBqI,KAAKhE,cAA6B,CACjEgE,KAAKhE,cAAcyD,iBAAiB,YAAaO,KAAKpC,sBAAuB,CAAEkC,SAAS,IACxFE,KAAKhE,cAAcyD,iBAAiB,WAAYO,KAAKlC,qBAAsB,CAAEgC,SAAS,IACtFE,KAAKhE,cAAcyD,iBAAiB,UAAWO,KAAKhC,oBAAqB,CACrE8B,SAAS,IAEbE,KAAKhE,cAAcyD,iBAAiB,WAAYO,KAAK/B,qBAAsB,CAAE6B,SAAS,IACtF,IAAMQ,EAAWN,KAAKhE,cAAclE,GACK,OAArCkI,KAAKhE,cAAcuE,eACnBP,KAAKhE,cAAcuE,cACdC,iBAAiB,UACjBC,SAAQ,SAAAC,GACLA,EAAQ5I,KAAOwI,GACfD,EAAKxC,qBAEb,GAER,CACoB,OAAhBmC,KAAK1C,aACW3F,IAAhBqI,KAAK1C,QACL0C,KAAKtD,iBACLsD,KAAK1C,OAAOtB,cAAgBgE,KAAKhE,eAErCgE,KAAKG,cACT,CACJ,GAAC,CAAAlB,IAAA,yBAAAc,MACD,WACwB,OAAhBC,KAAK1C,aAAmC3F,IAAhBqI,KAAK1C,SAC7B0C,KAAK1C,OAAOrB,gBAAkB+D,KAAK/D,iBAEvC+D,KAAKG,cACT,GAAC,CAAAlB,IAAA,oBAAAc,MACD,YACIY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAhF,EAAAjC,WAAA,0BAAAkH,KAAA,MACAb,KAAKhE,cAAgBgE,KAAKxB,YAC1BwB,KAAK3B,yBACT,GAAC,CAAAY,IAAA,uBAAAc,MACD,WACIC,KAAKX,cACLW,KAAKjC,sBACLiC,KAAK9B,uBACLyC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAhF,EAAAjC,WAAA,6BAAAkH,KAAA,KACJ,GACA,CAAA5B,IAAA,eAAAc,MAGA,WAGI,OAFAC,KAAK9D,wBAA0B,gBAC/B8D,KAAK7D,0BAA4B,gBACzB6D,KAAKc,UACT,KAAKnF,EACL,KAAKA,EACDqE,KAAKxD,wBAA0BwD,KAAKc,SACpCd,KAAKvD,0BAA4B,SACjC,MACJ,KAAKd,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACDqE,KAAKxD,wBAA0B,SAC/BwD,KAAKvD,0BAA4BuD,KAAKc,SACtC,MACJ,KAAKnF,EACDqE,KAAKxD,wBAA0B,MAC/BwD,KAAKvD,0BAA4B,OACjC,MACJ,KAAKd,EACDqE,KAAKxD,wBAA0B,MAC/BwD,KAAKvD,0BAA4B,QACjC,MACJ,KAAKd,EACDqE,KAAKxD,wBAA0B,SAC/BwD,KAAKvD,0BAA4B,OACjC,MACJ,KAAKd,EACDqE,KAAKxD,wBAA0B,SAC/BwD,KAAKvD,0BAA4B,QACjC,MACJ,KAAKd,EACDqE,KAAKxD,wBAA0B,MAC/BwD,KAAKvD,0BAA4B,QACjC,MACJ,KAAKd,EACDqE,KAAKxD,wBAA0B,MAC/BwD,KAAKvD,0BAA4B,MACjC,MACJ,KAAKd,EACDqE,KAAKxD,wBAA0B,SAC/BwD,KAAKvD,0BAA4B,QACjC,MACJ,KAAKd,EACDqE,KAAKxD,wBAA0B,SAC/BwD,KAAKvD,0BAA4B,MACjC,MACJ,QACIuD,KAAK9D,wBAA0B,UAC/B8D,KAAK7D,0BAA4B,UACjC6D,KAAKxD,6BAA0B,EAC/BwD,KAAKvD,0BAA4B,SAG7C,KAACb,CAAA,CArbe,CAASpC,EAAAA,IAub7BC,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEoB,KAAM,aACdc,EAAQjC,UAAW,eAAW,IACjCF,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDkC,EAAQjC,UAAW,cAAU,IAChCF,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDkC,EAAQjC,UAAW,aAAS,IAC/BF,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDkC,EAAQjC,UAAW,gBAAY,IAClCF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,sBACnBnF,EAAQjC,UAAW,sBAAkB,IACxCF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,8BACnBnF,EAAQjC,UAAW,8BAA0B,IAChDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,4BACnBnF,EAAQjC,UAAW,4BAAwB,IAC9CF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,qBAAiB,IACvCF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,uBAAmB,IACzCF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,+BAA2B,IACjDF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,iCAA6B,IACnDF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,uBAAmB,IACzCF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,qBAAiB,IACvCF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,yBAAqB,IAC3CF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,uBAAmB,IACzCF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,+BAA2B,IACjDF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,iCAA6B,IACnDF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,sBAAkB,IACxCF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDpF,EAAQjC,UAAW,wBAAoB,G,0ECzf7BsH,GAAmB1H,EAAAA,EAAAA,IAC5B,SAAA0H,IAAc,IAAAjI,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAgI,GACVjB,KAAKkB,qBAAuB,KAC5BlB,KAAKmB,iBAAmB,IAAIC,IAM5BpB,KAAKqB,gBAAkB,SAACC,EAAQC,GAC5B,IAAIC,EAC8B,OAA9BxI,EAAKkI,uBAGLlI,EAAKmI,iBAAiBM,IAAIH,GACmB,QAA5CE,EAAKxI,EAAKmI,iBAAiBO,IAAIJ,UAA4B,IAAPE,GAAyBA,EAAGG,KAAKJ,IAG1FvI,EAAKmI,iBAAiBS,IAAIN,EAAQ,CAACC,IACnCvI,EAAKkI,qBAAqBW,QAAQP,IACtC,EAMAtB,KAAK8B,sBAAwB,SAACR,EAAQC,GAClC,IAAMQ,EAAY/I,EAAKmI,iBAAiBO,IAAIJ,GAC5C,QAAkB3J,IAAdoK,EAAyB,CACzB,IAAMC,EAAgBD,EAAUE,QAAQV,IACjB,IAAnBS,GACAD,EAAUG,OAAOF,EAAe,EAExC,CACJ,EAIAhC,KAAKmC,+BAAiC,WAC7BC,EAAAA,GAAQC,uBAIbrJ,EAAKkI,qBAAuB,IAAImB,qBAAqBrJ,EAAKsJ,mBAAoB,CAC1EjL,KAAM,KACNkL,WAAY,MACZC,UAAW,CAAC,EAAG,KAEvB,EAIAxC,KAAKsC,mBAAqB,SAACG,GACvB,GAAkC,OAA9BzJ,EAAKkI,qBAAT,CAGA,IAAMwB,EAAmB,GACnBC,EAAwB,GAE9BF,EAAQhC,SAAQ,SAACmC,GACb,IAAIpB,EAEiC,QAApCA,EAAKxI,EAAKkI,4BAAyC,IAAPM,GAAyBA,EAAGqB,UAAUD,EAAMtB,QACzF,IAAMwB,EAAuB9J,EAAKmI,iBAAiBO,IAAIkB,EAAMtB,aAChC3J,IAAzBmL,IACAA,EAAqBrC,SAAQ,SAACc,GAC1B,IAAIwB,EAAsBL,EAAiBT,QAAQV,IACtB,IAAzBwB,IACAA,EAAsBL,EAAiBM,OACvCN,EAAiBf,KAAKJ,GACtBoB,EAAsBhB,KAAK,KAE/BgB,EAAsBI,GAAqBpB,KAAKiB,EACpD,IACA5J,EAAKmI,iBAAiB8B,OAAOL,EAAMtB,QAE3C,IAEAoB,EAAiBjC,SAAQ,SAACc,EAAU2B,GAChC3B,EAASoB,EAAsBO,GACnC,GAzBA,CA0BJ,EACAlD,KAAKmC,gCACT,IC1ESgB,EAAc,SAAAvK,IAAAC,EAAAA,EAAAA,GAAAsK,EAAAvK,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAoK,GACvB,SAAAA,IAAc,IAAAnK,EA+sBR,OA/sBQC,EAAAA,EAAAA,GAAA,KAAAkK,IACVnK,EAAAF,EAAAI,MAAA,KAASC,YAQJ0C,OAAS,GAQd7C,EAAKoK,SAAW,GAWhBpK,EAAKmD,0BAA4B,eAQjCnD,EAAKyD,0BAA4B,QAQjCzD,EAAKqK,wBAAyB,EAQ9BrK,EAAKoD,iBAAkB,EAQvBpD,EAAKsD,kBAAoB,UAWzBtD,EAAKkD,wBAA0B,eAQ/BlD,EAAKwD,wBAA0B,QAQ/BxD,EAAKsK,sBAAuB,EAQ5BtK,EAAKqD,eAAgB,EAQrBrD,EAAKuD,gBAAkB,UAUvBvD,EAAKuK,gBAAiB,EAQtBvK,EAAK+C,eAAiB,SAMtB/C,EAAKgD,cAAgB,KAMrBhD,EAAKiD,gBAAkB,KAMvBjD,EAAKwK,uBAAwB,EAC7BxK,EAAKyK,eAAiB,KAItBzK,EAAK0K,qBAAuB,EAC5B1K,EAAK2K,mBAAqB,EAC1B3K,EAAK4K,0BAA2B,EAChC5K,EAAK6K,cAAe,EACpB7K,EAAK2D,iBAAmBC,EAAAA,EAAUC,IAClC7D,EAAK8K,eAAgB,EAGrB9K,EAAK+K,aAAc,EAGnB/K,EAAKgL,gBAAkB,GAIvBhL,EAAKiL,OAAS,WACLjL,EAAK4K,0BACN5K,EAAKkL,wBAEb,EAIAlL,EAAKmL,eAAiB,WAClBnL,EAAKoL,gBACsB,OAAvBpL,EAAKgD,gBAGThD,EAAKkL,yBACuB,OAAxBlL,EAAKyK,iBACLzK,EAAKyK,eAAe5B,QAAQ7I,EAAKgD,eACjChD,EAAKyK,eAAe5B,SAAOrC,EAAAA,EAAAA,GAAAxG,KAEnC,EAIAA,EAAKkL,uBAAyB,WACC,OAAvBlL,EAAKgD,eAA0BhD,EAAK4K,2BAGxCT,EAAekB,oBAAoBhD,iBAAe7B,EAAAA,EAAAA,GAAAxG,GAAOA,EAAKsJ,oBAC9Da,EAAekB,oBAAoBhD,gBAAgBrI,EAAKgD,cAAehD,EAAKsJ,oBAC/C,OAAzBtJ,EAAKiD,iBACLkH,EAAekB,oBAAoBhD,gBAAgBrI,EAAKiD,gBAAiBjD,EAAKsJ,oBAElFtJ,EAAK4K,0BAA2B,EACpC,EAIA5K,EAAKoL,cAAgB,WACbpL,EAAK4K,2BACL5K,EAAK4K,0BAA2B,EAChCT,EAAekB,oBAAoBvC,uBAAqBtC,EAAAA,EAAAA,GAAAxG,GAAOA,EAAKsJ,oBACzC,OAAvBtJ,EAAKgD,eACLmH,EAAekB,oBAAoBvC,sBAAsB9I,EAAKgD,cAAehD,EAAKsJ,oBAEzD,OAAzBtJ,EAAKiD,iBACLkH,EAAekB,oBAAoBvC,sBAAsB9I,EAAKiD,gBAAiBjD,EAAKsJ,qBAGhE,OAAxBtJ,EAAKyK,gBACLzK,EAAKyK,eAAea,YAE5B,EAIAtL,EAAKuL,YAAc,WACf,MAA6B,kBAAlBvL,EAAKoK,UAA2C,KAAlBpK,EAAKoK,SACnCvE,SAAS2F,gBAEb3F,SAASD,eAAe5F,EAAKoK,SACxC,EAIApK,EAAKwF,UAAY,WACb,OAAOK,SAASD,eAAe5F,EAAK6C,OACxC,EAIA7C,EAAKsJ,mBAAqB,SAACG,GAClBzJ,EAAK4K,2BAGV5K,EAAK4K,0BAA2B,EAC3B5K,EAAKyL,yBAAyBhC,IAGnCzJ,EAAKmH,eACT,EAIAnH,EAAKyL,yBAA2B,SAAChC,GAC7B,IAAMiC,EAAcjC,EAAQkC,MAAK,SAAAtK,GAAC,OAAIA,EAAEiH,UAAM9B,EAAAA,EAAAA,GAAAxG,EAAS,IACjD4L,EAAcnC,EAAQkC,MAAK,SAAAtK,GAAC,OAAIA,EAAEiH,SAAWtI,EAAKgD,aAAa,IAC/D6I,EAAgBpC,EAAQkC,MAAK,SAAAtK,GAAC,OAAIA,EAAEiH,SAAWtI,EAAKiD,eAAe,IACzE,YAAoBtE,IAAhB+M,QACkB/M,IAAlBkN,QACgBlN,IAAhBiN,QAIC5L,EAAK8K,eACN9K,EAAK+K,kBACepM,IAApBqB,EAAK8L,iBACenN,IAApBqB,EAAK+L,iBACiBpN,IAAtBqB,EAAKgM,cACLhM,EAAKiM,gBAAgBjM,EAAK+L,WAAYH,EAAYM,qBAClDlM,EAAKiM,gBAAgBjM,EAAKgM,aAAcH,EAAcK,qBACtDlM,EAAKiM,gBAAgBjM,EAAK8L,WAAYJ,EAAYQ,uBAClDlM,EAAK8L,WAAaJ,EAAYQ,mBAC9BlM,EAAK+L,WAAaH,EAAYM,mBAC1BlM,EAAKiD,kBAAoB4C,SAAS2F,gBAClCxL,EAAKgM,aAAe,IAAIG,gBAAgBN,EAAcK,mBAAmB7K,EACrEwE,SAAS2F,gBAAgBY,WAAYP,EAAcK,mBAAmBG,EACtExG,SAAS2F,gBAAgBc,UAAWT,EAAcK,mBAAmBK,MAAOV,EAAcK,mBAAmBM,QAGjHxM,EAAKgM,aAAeH,EAAcK,mBAEtClM,EAAKyM,qBACLzM,EAAK+K,aAAc,GACZ,GAGf,EAIA/K,EAAKyM,mBAAqB,WAClBzM,EAAK+L,YAAc/L,EAAK8L,aACxB9L,EAAK0K,qBACD1K,EAAK0K,sBACA1K,EAAK+L,WAAWW,KAAO1M,EAAK8L,WAAWY,OACvC1M,EAAK2M,WAAa3M,EAAK0K,sBAChC1K,EAAK2K,mBACD3K,EAAK2K,oBACA3K,EAAK+L,WAAWa,IAAM5M,EAAK8L,WAAWc,MACtC5M,EAAK6M,WAAa7M,EAAK2K,oBAExC,EAIA3K,EAAKiM,gBAAkB,SAACa,EAAOC,GAC3B,OAAIC,KAAKC,IAAIH,EAAMF,IAAMG,EAAMH,KAAO5M,EAAKgL,iBACvCgC,KAAKC,IAAIH,EAAMI,MAAQH,EAAMG,OAASlN,EAAKgL,iBAC3CgC,KAAKC,IAAIH,EAAMK,OAASJ,EAAMI,QAAUnN,EAAKgL,iBAC7CgC,KAAKC,IAAIH,EAAMJ,KAAOK,EAAML,MAAQ1M,EAAKgL,eAIjD,EAIAhL,EAAKoN,aAAe,SAAC3D,GACjBzJ,EAAKiL,QACT,EAIAjL,EAAKqN,MAAQ,WACJrN,EAAK6K,eAGV7K,EAAK6K,cAAe,EACO,OAAvB7K,EAAKgD,gBACLhD,EAAKgD,cAAgBhD,EAAKwF,aAED,OAAzBxF,EAAKiD,kBACLjD,EAAKiD,gBAAkBjD,EAAKuL,eAEhCvL,EAAK2D,kBAAmB4C,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAAxG,IACpCA,EAAKmL,iBACT,EAIAnL,EAAKmH,aAAe,WAChB,IAAImG,OAA0B3O,EAC1B4O,OAA4B5O,EAChC,GAAuC,iBAAnCqB,EAAKmD,0BAA8C,CACnD,IAAMqK,EAAoBxN,EAAKyN,sBAAsBzN,EAAKoD,iBAC1D,GAAuC,WAAnCpD,EAAKyD,0BACL8J,EAA4B,cAE3B,GAAuC,UAAnCvN,EAAKyD,0BAAuC,CACjD,IAAIiK,EAAwC1N,EACvCyD,0BACL,GAA8C,UAA1CiK,GAC0C,QAA1CA,EAAiD,CAEjD,IAAMC,GAAepH,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,GAAAxG,IACjC,GAAI2N,IAAiB3N,EAAK2D,iBAGtB,OAFA3D,EAAK2D,iBAAmBgK,OACxB3N,EAAK4N,aAILF,EADA1N,EAAK2D,mBAAqBC,EAAAA,EAAUC,IAEU,UAA1C6J,EACM,OACA,QAIoC,UAA1CA,EACM,QACA,MAElB,CACA,OAAQA,GACJ,IAAK,OACDH,EAA4BvN,EAAKoD,gBAC3B,aACA,QACN,MACJ,IAAK,QACDmK,EAA4BvN,EAAKoD,gBAC3B,WACA,MAGlB,CACA,IAAMyK,OAAmDlP,IAA7BqB,EAAK6N,oBAC3B7N,EAAK6N,yBACelP,IAApBqB,EAAK8L,WACD9L,EAAK8L,WAAWS,MAChB,EACJuB,OAAiCnP,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWW,KAAO,EACpEqB,OAAkCpP,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWmB,MAAQ,EACtEc,OAAkCrP,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWQ,MAAQ,EACtE0B,OAAqCtP,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAaU,KAAO,EAC1EwB,OAAsCvP,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAakB,MAAQ,QAChDvO,IAA9B4O,GACsC,kBAAnCvN,EAAKmD,2BACJnD,EAAKmO,kBAAkBZ,EAA2BO,EAAYC,EAAaC,EAAaC,EAAcC,GAAiBL,KAC3HN,EACIvN,EAAKmO,kBAAkBX,EAAkB,GAAIM,EAAYC,EAAaC,EAAaC,EAAcC,GAC7FlO,EAAKmO,kBAAkBX,EAAkB,GAAIM,EAAYC,EAAaC,EAAaC,EAAcC,GAC/FV,EAAkB,GAClBA,EAAkB,GAEpC,CACA,GAAqC,iBAAjCxN,EAAKkD,wBAA4C,CACjD,IAAMkL,EAAkBpO,EAAKyN,sBAAsBzN,EAAKqD,eACxD,GAAqC,WAAjCrD,EAAKwD,wBACL8J,EAA0B,cAEzB,GAAqC,UAAjCtN,EAAKwD,wBACV,OAAQxD,EAAKwD,yBACT,IAAK,MACD8J,EAA0BtN,EAAKqD,cACzB,aACA,QACN,MACJ,IAAK,SACDiK,EAA0BtN,EAAKqD,cAAgB,WAAa,MAIxE,IAAMgL,OAA+C1P,IAA3BqB,EAAKqO,kBACzBrO,EAAKqO,uBACe1P,IAApBqB,EAAK8L,WACD9L,EAAK8L,WAAWU,OAChB,EACJ8B,OAAgC3P,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWa,IAAM,EAClE2B,OAAmC5P,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWoB,OAAS,EACxEqB,OAAmC7P,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWS,OAAS,EACxEiC,OAAoC9P,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAaY,IAAM,EACxE8B,OAAuC/P,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAamB,OAAS,QACpDxO,IAA5B2O,GACoC,kBAAjCtN,EAAKkD,yBACJlD,EAAKmO,kBAAkBb,EAAyBgB,EAAWC,EAAcC,EAAcC,EAAaC,GAAkBL,KAC1Hf,EACItN,EAAKmO,kBAAkBC,EAAgB,GAAIE,EAAWC,EAAcC,EAAcC,EAAaC,GAC3F1O,EAAKmO,kBAAkBC,EAAgB,GAAIE,EAAWC,EAAcC,EAAcC,EAAaC,GAC7FN,EAAgB,GAChBA,EAAgB,GAElC,CACA,IAAMO,EAA0B3O,EAAK4O,uBAAuBrB,EAA2BD,GACjFuB,EAAkB7O,EAAKwE,qBAAuB+I,GAChDvN,EAAKuE,mBAAqB+I,EAI9B,GAHAtN,EAAK8O,sBAAsBvB,EAA2BoB,GACtD3O,EAAK+O,oBAAoBzB,EAAyBqB,GAClD3O,EAAKgP,qBACAhP,EAAKwK,sBAGN,OAFAxK,EAAKwK,uBAAwB,OAC7BxK,EAAKkL,yBAGJlL,EAAK8K,gBACN9K,EAAK8K,eAAgB,EACrB9K,EAAKiP,MAAMC,eAAe,kBAC1BlP,EAAKiP,MAAMC,eAAe,WAC1BlP,EAAKoE,UAAUC,OAAO,UAAU,GAChCrE,EAAKmG,MAAM,UAAQK,EAAAA,EAAAA,GAAAxG,GAAQ,CAAEmP,SAAS,KAE1CnP,EAAKoP,wBACDP,GAEA7O,EAAKmG,MAAM,kBAAgBK,EAAAA,EAAAA,GAAAxG,GAAQ,CAAEmP,SAAS,GAEtD,EAKAnP,EAAKgP,kBAAoB,WACrBhP,EAAKiP,MAAM1C,MAAQvM,EAAKqP,YACxBrP,EAAKiP,MAAMzC,OAASxM,EAAKsP,aACzBtP,EAAKiP,MAAMM,UAAY,aAAHC,OAAgBxP,EAAK2M,WAAU,QAAA6C,OAAOxP,EAAK6M,WAAU,MAC7E,EAIA7M,EAAKoP,sBAAwB,WACzBpP,EAAKoE,UAAUC,OAAO,MAAiC,UAA1BrE,EAAKuE,kBAClCvE,EAAKoE,UAAUC,OAAO,SAAoC,QAA1BrE,EAAKuE,kBACrCvE,EAAKoE,UAAUC,OAAO,YAAuC,eAA1BrE,EAAKuE,kBACxCvE,EAAKoE,UAAUC,OAAO,eAA0C,aAA1BrE,EAAKuE,kBAC3CvE,EAAKoE,UAAUC,OAAO,kBAA6C,WAA1BrE,EAAKuE,kBAC9CvE,EAAKoE,UAAUC,OAAO,OAAoC,UAA5BrE,EAAKwE,oBACnCxE,EAAKoE,UAAUC,OAAO,QAAqC,QAA5BrE,EAAKwE,oBACpCxE,EAAKoE,UAAUC,OAAO,aAA0C,eAA5BrE,EAAKwE,oBACzCxE,EAAKoE,UAAUC,OAAO,cAA2C,aAA5BrE,EAAKwE,oBAC1CxE,EAAKoE,UAAUC,OAAO,oBAAiD,WAA5BrE,EAAKwE,mBACpD,EAIAxE,EAAK8O,sBAAwB,SAACvB,EAA2BoB,GACrD,QAAkChQ,IAA9B4O,QACoB5O,IAApBqB,EAAK8L,iBACenN,IAApBqB,EAAK+L,iBACiBpN,IAAtBqB,EAAKgM,aAHT,CAMA,IAAIyD,EAAkB,EACtB,OAAQzP,EAAKsD,mBACT,IAAK,SACL,IAAK,OACDmM,EAAkBzP,EAAKqK,uBACjBrK,EAAKgM,aAAaO,MAClBoC,EAAwBpC,MAC9BvM,EAAKqP,YAAc,GAAHG,OAAMC,EAAe,MACrC,MACJ,IAAK,UACDA,EAAkBzP,EAAK8L,WAAWS,MAClCvM,EAAKqP,YAAc,QAG3B,IAAIK,EAAY,EAChB,OAAQnC,GACJ,IAAK,QACDvN,EAAK2M,WAAa3M,EAAK0K,qBAAuB+E,EAC1CzP,EAAKqK,wBACLrK,EAAK+L,WAAWW,KAAO1M,EAAKgM,aAAakB,QACzClN,EAAK2M,WACD3M,EAAK2M,YACA3M,EAAK+L,WAAWW,KAAO1M,EAAKgM,aAAakB,QAEtD,MACJ,IAAK,aACDlN,EAAK2M,WACD3M,EAAK0K,qBAAuB+E,EAAkBzP,EAAK+L,WAAWQ,MAC9DvM,EAAKqK,wBACLrK,EAAK+L,WAAWmB,MAAQlN,EAAKgM,aAAakB,QAC1ClN,EAAK2M,WACD3M,EAAK2M,YACA3M,EAAK+L,WAAWmB,MAAQlN,EAAKgM,aAAakB,QAEvD,MACJ,IAAK,WACDlN,EAAK2M,WAAa3M,EAAK0K,qBACnB1K,EAAKqK,wBACLrK,EAAK+L,WAAWW,KAAO1M,EAAKgM,aAAaU,OACzC1M,EAAK2M,WACD3M,EAAK2M,YAAc3M,EAAK+L,WAAWW,KAAO1M,EAAKgM,aAAaU,OAEpE,MACJ,IAAK,MACD1M,EAAK2M,WAAa3M,EAAK0K,qBAAuB1K,EAAK+L,WAAWQ,MAC1DvM,EAAKqK,wBACLrK,EAAK+L,WAAWmB,MAAQlN,EAAKgM,aAAaU,OAC1C1M,EAAK2M,WACD3M,EAAK2M,YACA3M,EAAK+L,WAAWmB,MAAQlN,EAAKgM,aAAaU,OAEvD,MACJ,IAAK,SAGD,GAFAgD,GAAa1P,EAAK+L,WAAWQ,MAAQkD,GAAmB,EACxDzP,EAAK2M,WAAa3M,EAAK0K,qBAAuBgF,EAC1C1P,EAAKqK,uBAAwB,CAC7B,IAAMsF,EAAa3P,EAAK+L,WAAWW,KAAOgD,EACpCE,EAAc5P,EAAK+L,WAAWmB,MAAQwC,EACxCC,EAAa3P,EAAKgM,aAAaU,QAC7BkD,EAAc5P,EAAKgM,aAAakB,OAClClN,EAAK2M,WACD3M,EAAK2M,YAAcgD,EAAa3P,EAAKgM,aAAaU,MAEjDkD,EAAc5P,EAAKgM,aAAakB,SACnCyC,EAAa3P,EAAKgM,aAAaU,QACjC1M,EAAK2M,WACD3M,EAAK2M,YAAciD,EAAc5P,EAAKgM,aAAakB,OAE/D,EAGRlN,EAAKwE,mBAAqB+I,CAxE1B,CAyEJ,EAIAvN,EAAK+O,oBAAsB,SAACzB,EAAyBqB,GACjD,QAAgChQ,IAA5B2O,QACoB3O,IAApBqB,EAAK8L,iBACenN,IAApBqB,EAAK+L,iBACiBpN,IAAtBqB,EAAKgM,aAHT,CAMA,IAAI6D,EAAmB,EACvB,OAAQ7P,EAAKuD,iBACT,IAAK,SACL,IAAK,OACDsM,EAAmB7P,EAAKsK,qBAClBtK,EAAKgM,aAAaQ,OAClBmC,EAAwBnC,OAC9BxM,EAAKsP,aAAe,GAAHE,OAAMK,EAAgB,MACvC,MACJ,IAAK,UACDA,EAAmB7P,EAAK8L,WAAWU,OACnCxM,EAAKsP,aAAe,QAG5B,IAAII,EAAY,EAChB,OAAQpC,GACJ,IAAK,QACDtN,EAAK6M,WAAa7M,EAAK2K,mBAAqBkF,EACxC7P,EAAKsK,sBACLtK,EAAK+L,WAAWa,IAAM5M,EAAKgM,aAAamB,SACxCnN,EAAK6M,WACD7M,EAAK6M,YACA7M,EAAK+L,WAAWa,IAAM5M,EAAKgM,aAAamB,SAErD,MACJ,IAAK,aACDnN,EAAK6M,WACD7M,EAAK2K,mBAAqBkF,EAAmB7P,EAAK+L,WAAWS,OAC7DxM,EAAKsK,sBACLtK,EAAK+L,WAAWoB,OAASnN,EAAKgM,aAAamB,SAC3CnN,EAAK6M,WACD7M,EAAK6M,YACA7M,EAAK+L,WAAWoB,OAASnN,EAAKgM,aAAamB,SAExD,MACJ,IAAK,WACDnN,EAAK6M,WAAa7M,EAAK2K,mBACnB3K,EAAKsK,sBACLtK,EAAK+L,WAAWa,IAAM5M,EAAKgM,aAAaY,MACxC5M,EAAK6M,WACD7M,EAAK6M,YAAc7M,EAAK+L,WAAWa,IAAM5M,EAAKgM,aAAaY,MAEnE,MACJ,IAAK,MACD5M,EAAK6M,WAAa7M,EAAK2K,mBAAqB3K,EAAK+L,WAAWS,OACxDxM,EAAKsK,sBACLtK,EAAK+L,WAAWoB,OAASnN,EAAKgM,aAAaY,MAC3C5M,EAAK6M,WACD7M,EAAK6M,YACA7M,EAAK+L,WAAWoB,OAASnN,EAAKgM,aAAaY,MAExD,MACJ,IAAK,SAGD,GAFA8C,GAAa1P,EAAK+L,WAAWS,OAASqD,GAAoB,EAC1D7P,EAAK6M,WAAa7M,EAAK2K,mBAAqB+E,EACxC1P,EAAKsK,qBAAsB,CAC3B,IAAMwF,EAAY9P,EAAK+L,WAAWa,IAAM8C,EAClCK,EAAe/P,EAAK+L,WAAWoB,OAASuC,EAC1CI,EAAY9P,EAAKgM,aAAaY,OAC5BmD,EAAe/P,EAAKgM,aAAamB,QACnCnN,EAAK6M,WACD7M,EAAK6M,YAAciD,EAAY9P,EAAKgM,aAAaY,KAEhDmD,EAAe/P,EAAKgM,aAAamB,UACpC2C,EAAY9P,EAAKgM,aAAaY,OAChC5M,EAAK6M,WACD7M,EAAK6M,YAAckD,EAAe/P,EAAKgM,aAAamB,QAEhE,EAERnN,EAAKuE,iBAAmB+I,CAvExB,CAwEJ,EAIAtN,EAAKyN,sBAAwB,SAACtR,GAC1B,OAAIA,EACO,CAAC,aAAc,YAEnB,CAAC,QAAS,MACrB,EAIA6D,EAAKmO,kBAAoB,SAAC6B,EAAgBC,EAAaC,EAAWC,EAAYC,EAAeC,GACzF,IAAMC,EAAaL,EAAcG,EAC3BG,EAAWF,GAAeJ,EAAcE,GAC9C,OAAQH,GACJ,IAAK,QACD,OAAOM,EACX,IAAK,aACD,OAAOA,EAAaH,EACxB,IAAK,WACD,OAAOI,EAAWJ,EACtB,IAAK,MACD,OAAOI,EACX,IAAK,SACD,OAAwC,EAAjCvD,KAAKwD,IAAIF,EAAYC,GAAgBJ,EAExD,EAIAnQ,EAAK4O,uBAAyB,SAACrB,EAA2BD,GACtD,IAAMmD,EAAqB,CACvBjE,YAA4B7N,IAApBqB,EAAK8L,WAA2B9L,EAAK8L,WAAWU,OAAS,EACjED,WAA2B5N,IAApBqB,EAAK8L,WAA2B9L,EAAK8L,WAAWS,MAAQ,GAiBnE,YAfkC5N,IAA9B4O,GAC2B,SAA3BvN,EAAKsD,kBACLmN,EAAmBlE,MAAQvM,EAAKmO,kBAAkBZ,OAA+C5O,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWW,KAAO,OAAuB/N,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWmB,MAAQ,OAAuBvO,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWQ,MAAQ,OAAyB5N,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAaU,KAAO,OAAyB/N,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAakB,MAAQ,GAEvV,WAA3BlN,EAAKsD,oBACVmN,EAAmBlE,WACK5N,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWQ,MAAQ,QAEhC5N,IAA5B2O,GAAkE,SAAzBtN,EAAKuD,gBAC9CkN,EAAmBjE,OAASxM,EAAKmO,kBAAkBb,OAA6C3O,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWa,IAAM,OAAuBjO,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWoB,OAAS,OAAuBxO,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWS,OAAS,OAAyB7N,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAaY,IAAM,OAAyBjO,IAAtBqB,EAAKgM,aAA6BhM,EAAKgM,aAAamB,OAAS,GAEzV,WAAzBnN,EAAKuD,kBACVkN,EAAmBjE,YACK7N,IAApBqB,EAAK+L,WAA2B/L,EAAK+L,WAAWS,OAAS,GAE1DiE,CACX,EAIAzQ,EAAK0Q,8BAAgC,WACjCvL,OAAOsB,iBAAiBkK,EAAAA,GAAa3Q,EAAKiL,OAAQ,CAAEnE,SAAS,IAC7D3B,OAAOsB,iBAAiBmK,EAAAA,GAAa5Q,EAAKiL,OAAQ,CAC9CnE,SAAS,EACT+J,SAAS,IAEe,OAAxB7Q,EAAKyK,gBAAoD,OAAzBzK,EAAKiD,iBACrCjD,EAAKyK,eAAe5B,QAAQ7I,EAAKiD,gBAEzC,EAIAjD,EAAK8Q,6BAA+B,WAChC3L,OAAO0B,oBAAoB8J,EAAAA,GAAa3Q,EAAKiL,QAC7C9F,OAAO0B,oBAAoB+J,EAAAA,GAAa5Q,EAAKiL,QACjB,OAAxBjL,EAAKyK,gBAAoD,OAAzBzK,EAAKiD,iBACrCjD,EAAKyK,eAAeZ,UAAU7J,EAAKiD,gBAE3C,EAAEjD,CACN,CAwKC,OAxKAO,EAAAA,EAAAA,GAAA4J,EAAA,EAAAlE,IAAA,gBAAAc,MACD,WACQC,KAAKwD,wBACLxD,KAAKhE,cAAgBgE,KAAKxB,YAElC,GAAC,CAAAS,IAAA,kBAAAc,MACD,WACQC,KAAKwD,wBACLxD,KAAK/D,gBAAkB+D,KAAKuE,cAEpC,GAAC,CAAAtF,IAAA,mCAAAc,MACD,WACIC,KAAK+J,cACT,GAAC,CAAA9K,IAAA,mCAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,gCAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,yBAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,6BAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,2BAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,iCAAAc,MACD,WACIC,KAAK+J,cACT,GAAC,CAAA9K,IAAA,iCAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,8BAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,uBAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,2BAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,yBAAAc,MACD,WACIC,KAAKgK,0BACT,GAAC,CAAA/K,IAAA,wBAAAc,MACD,WACQC,KAAKC,gBAAgBC,aACrBF,KAAKwD,uBACLxD,KAAK4G,YAEb,GAAC,CAAA3H,IAAA,wBAAAc,MACD,SAAsBkK,EAAUC,GACxBlK,KAAKC,gBAAgBC,aACrBF,KAAKwD,wBACY,SAAbyG,GACAjK,KAAK8J,+BAEO,SAAZI,GACAlK,KAAK0J,gCAGjB,GAAC,CAAAzK,IAAA,uBAAAc,MACD,WACIC,KAAK+J,cACT,GAAC,CAAA9K,IAAA,yBAAAc,MACD,WACQC,KAAKC,gBAAgBC,aACrBF,KAAKwD,uBACLxD,KAAK4G,YAEb,GACA,CAAA3H,IAAA,oBAAAc,MAGA,YACIY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAuC,EAAAxJ,WAAA,0BAAAkH,KAAA,MAC4B,SAAxBb,KAAKjE,gBACLiE,KAAK0J,gCAET1J,KAAK4G,YACT,GACA,CAAA3H,IAAA,uBAAAc,MAGA,YACIY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAuC,EAAAxJ,WAAA,6BAAAkH,KAAA,MAC4B,SAAxBb,KAAKjE,gBACLiE,KAAK8J,+BAET9J,KAAKoE,gBACLpE,KAAKmK,0BACT,GACA,CAAAlL,IAAA,kBAAAc,MAGA,WACIC,KAAK4G,YACT,GACA,CAAA3H,IAAA,2BAAAc,MAGA,WACgC,OAAxBC,KAAKyD,iBACLzD,KAAKyD,eAAea,aACpBtE,KAAKyD,eAAiB,KAE9B,GACA,CAAAxE,IAAA,2BAAAc,MAGA,WACIC,KAAKmK,2BACLnK,KAAKyD,eAAiB,IAAItF,OAAOiM,eAAepK,KAAKoG,aACzD,GACA,CAAAnH,IAAA,2BAAAc,MAGA,WACQC,KAAKC,gBAAgBC,aACrBF,KAAKwD,wBACLxD,KAAK+D,aAAc,EACnB/D,KAAKiE,SAEb,GACA,CAAAhF,IAAA,aAAAc,MAGA,WACIC,KAAKqK,2BACsB,OAAvBrK,KAAKhE,gBACLgE,KAAKhE,cAAgBgE,KAAKxB,aAE9BwB,KAAK+J,cACT,GACA,CAAA9K,IAAA,eAAAc,MAGA,WAAe,IAAAM,EAAA,KACPL,KAAKC,gBAAgBC,cACC,IAAtBF,KAAK6D,eACL7D,KAAKsK,kBACL5K,EAAAA,GAAIC,aAAY,kBAAMU,EAAKgG,OAAO,IAClCrG,KAAK6D,cAAe,EAE5B,GACA,CAAA5E,IAAA,kBAAAc,MAGA,WACIC,KAAKwD,uBAAwB,EAC7BxD,KAAK8D,eAAgB,EACrB9D,KAAK2F,WAAa,EAClB3F,KAAK6F,WAAa,EAClB7F,KAAK0D,qBAAuB,EAC5B1D,KAAK2D,mBAAqB,EAC1B3D,KAAKgF,kBAAerN,EACpBqI,KAAK8E,gBAAanN,EAClBqI,KAAK+E,gBAAapN,EAClBqI,KAAKzC,sBAAmB5F,EACxBqI,KAAKxC,wBAAqB7F,EAC1BqI,KAAKiI,MAAMsC,QAAU,IACrBvK,KAAKiI,MAAMuC,cAAgB,OAC3BxK,KAAK+D,aAAc,EACnB/D,KAAKiI,MAAMnH,SAAWd,KAAKuD,eAAiB,QAAU,WACtDvD,KAAKoI,wBACLpI,KAAKgI,mBACT,KAAC7E,CAAA,CAz3BsB,CAAS3J,EAAAA,GA23BpC2J,EAAekB,oBAAsB,IAAIpD,GACzCxH,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDyJ,EAAexJ,UAAW,cAAU,IACvCF,EAAAA,EAAAA,IAAW,CACPC,EAAAA,IACDyJ,EAAexJ,UAAW,gBAAY,IACzCF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,iCACnBoC,EAAexJ,UAAW,iCAA6B,IAC1DF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,iCACnBoC,EAAexJ,UAAW,iCAA6B,IAC1DF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,2BAA4BjG,KAAM,aACrDqI,EAAexJ,UAAW,8BAA0B,IACvDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,mBAAoBjG,KAAM,aAC7CqI,EAAexJ,UAAW,uBAAmB,IAChDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,0BACnBoC,EAAexJ,UAAW,2BAAuB,IACpDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,wBACnBoC,EAAexJ,UAAW,yBAAqB,IAClDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,+BACnBoC,EAAexJ,UAAW,+BAA2B,IACxDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,+BACnBoC,EAAexJ,UAAW,+BAA2B,IACxDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,yBAA0BjG,KAAM,aACnDqI,EAAexJ,UAAW,4BAAwB,IACrDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,iBAAkBjG,KAAM,aAC3CqI,EAAexJ,UAAW,qBAAiB,IAC9CF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,wBACnBoC,EAAexJ,UAAW,yBAAqB,IAClDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,sBACnBoC,EAAexJ,UAAW,uBAAmB,IAChDF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,kBAAmBjG,KAAM,aAC5CqI,EAAexJ,UAAW,sBAAkB,IAC/CF,EAAAA,EAAAA,IAAW,EACPC,EAAAA,EAAAA,IAAK,CAAEqH,UAAW,sBACnBoC,EAAexJ,UAAW,sBAAkB,IAC/CF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDmC,EAAexJ,UAAW,qBAAiB,IAC9CF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDmC,EAAexJ,UAAW,uBAAmB,IAChDF,EAAAA,EAAAA,IAAW,CACPuH,EAAAA,IACDmC,EAAexJ,UAAW,6BAAyB,GC77B/C,I,0DCCMiC,EAAO,SAAA6O,IAAA5R,EAAAA,EAAAA,GAAA+C,EAAA6O,GAAA,IAAA3R,GAAAC,EAAAA,EAAAA,GAAA6C,GAAA,SAAAA,IAAA,OAAA3C,EAAAA,EAAAA,GAAA,KAAA2C,GAAA9C,EAAAI,MAAA,KAAAC,UAAA,CAOf,OAPeI,EAAAA,EAAAA,GAAAqC,EAAA,EAAAqD,IAAA,oBAAAc,MAIhB,YACIY,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAhF,EAAAjC,WAAA,0BAAAkH,KAAA,MACA6J,EAAAA,IAAUC,YAAY3K,KAAM4K,EAAAA,IAChC,KAAChP,CAAA,CAPe,CAASiP,GAkBhBC,EAAgBlP,EAAQ/B,QAAQ,CACzCC,SAAU,UACViR,UAAWF,EACX9Q,SDtB2B,SAACC,EAASC,GACrC,OAAOC,EAAAA,EAAAA,GAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BACLc,EAAAA,EAAAA,IAAK,SAAAb,GAAC,OAAIA,EAAEqC,cAAc,IAAExC,EAAAA,EAAAA,GAAIiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,4wBAC3BJ,EAAQgR,OAAO7H,IAEM,SAAA9I,GAAC,OAAIA,EAAE0B,cAAc,IACZ,SAAA1B,GAAC,OAAIA,EAAE6B,uBAAuB,IAC9B,SAAA7B,GAAC,OAAIA,EAAEmC,uBAAuB,IACzC,SAAAnC,GAAC,OAAIA,EAAEgC,aAAa,IAClB,SAAAhC,GAAC,OAAIA,EAAEkC,eAAe,IACX,SAAAlC,GAAC,OAAIA,EAAE8B,yBAAyB,IAChC,SAAA9B,GAAC,OAAIA,EAAEoC,yBAAyB,IACzC,SAAApC,GAAC,OAAIA,EAAEiC,iBAAiB,IAC1B,SAAAjC,GAAC,OAAIA,EAAE+B,eAAe,IAChB,SAAA/B,GAAC,OAAIA,EAAEgJ,sBAAsB,IAC3B,SAAAhJ,GAAC,OAAIA,EAAEiJ,oBAAoB,IAChD,SAAAjJ,GAAC,OAAIA,EAAEsC,gBAAgB,IAC5BnG,EAAAA,EAAAA,GAAI,UAKNwD,EAAQgR,OAAO7H,KAG/B,ECFI7I,OCxByB,SAACN,EAASC,GAAU,OAAKM,EAAAA,EAAAA,GAAGJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wxDAY7BkB,EAAAA,IACPb,EAAAA,IAA4BwQ,EAAAA,IAC7BP,EAAAA,IACLQ,EAAAA,IAIPC,EAAAA,GAEYC,EAAAA,GAGdpR,EAAQgR,OAAO7H,GAQfnJ,EAAQgR,OAAO7H,GACfnJ,EAAQgR,OAAO7H,GAIfnJ,EAAQgR,OAAO7H,GACfnJ,EAAQgR,OAAO7H,GACfnJ,EAAQgR,OAAO7H,GACfnJ,EAAQgR,OAAO7H,GAIDuH,EAAAA,IACKjQ,EAAAA,IAA4BwQ,EAAAA,IAC3BxQ,EAAAA,IAA4BwQ,EAAAA,IAIhDjR,EAAQgR,OAAO7H,GAMfnJ,EAAQgR,OAAO7H,GAIfnJ,EAAQgR,OAAO7H,GAMfnJ,EAAQgR,OAAO7H,GAIfnJ,EAAQgR,OAAO7H,GAMfnJ,EAAQgR,OAAO7H,GAIfnJ,EAAQgR,OAAO7H,GAMfnJ,EAAQgR,OAAO7H,IAGjB5H,eAAcC,EAAAA,EAAAA,KAA+BjB,EAAAA,EAAAA,GAAGY,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,mTAI1CJ,EAAQgR,OAAO7H,GACfnJ,EAAQgR,OAAO7H,GACfnJ,EAAQgR,OAAO7H,GACfnJ,EAAQgR,OAAO7H,KAKhB,G","sources":["../../../node_modules/@fluentui/react-divider/lib/components/Divider/useDividerStyles.styles.js","../../../node_modules/@fluentui/react-divider/lib/components/Divider/Divider.js","../../../node_modules/@fluentui/react-divider/lib/components/Divider/useDivider.js","../../../node_modules/@fluentui/react-divider/lib/components/Divider/renderDivider.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.options.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.js","../../../node_modules/@fluentui/web-components/dist/esm/divider/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.template.js","../../../node_modules/@fluentui/web-components/dist/esm/divider/divider.styles.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/skeleton/skeleton.js","../../../node_modules/@fluentui/web-components/dist/esm/skeleton/index.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/skeleton/skeleton.template.js","../../../node_modules/@fluentui/web-components/dist/esm/skeleton/skeleton.styles.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.options.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/utilities/intersection-service.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/anchored-region/anchored-region.js","../../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.template.js","../../../node_modules/@fluentui/web-components/dist/esm/tooltip/index.js","../../../node_modules/@fluentui/web-components/dist/esm/tooltip/tooltip.styles.js"],"sourcesContent":["import { mergeClasses, shorthands, makeStyles } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nexport const dividerClassNames = {\n    root: 'fui-Divider',\n    wrapper: 'fui-Divider__wrapper'\n};\nconst contentSpacing = '12px';\nconst insetSpacing = '12px';\nconst maxStartEndLength = '8px';\nconst minStartEndLength = '8px;';\nconst useBaseStyles = makeStyles({\n    // Base styles\n    base: {\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'row',\n        flexGrow: 1,\n        position: 'relative',\n        fontFamily: tokens.fontFamilyBase,\n        fontSize: tokens.fontSizeBase200,\n        fontWeight: tokens.fontWeightRegular,\n        lineHeight: tokens.lineHeightBase200,\n        textAlign: 'center',\n        '::before': {\n            boxSizing: 'border-box',\n            display: 'flex',\n            flexGrow: 1\n        },\n        '::after': {\n            boxSizing: 'border-box',\n            display: 'flex',\n            flexGrow: 1\n        }\n    },\n    // Childless styles\n    childless: {\n        '::before': {\n            marginBottom: 0,\n            marginRight: 0\n        },\n        '::after': {\n            marginLeft: 0,\n            marginTop: 0\n        }\n    },\n    // Alignment variations\n    start: {\n        '::after': {\n            content: '\"\"'\n        }\n    },\n    center: {\n        '::before': {\n            content: '\"\"'\n        },\n        '::after': {\n            content: '\"\"'\n        }\n    },\n    end: {\n        '::before': {\n            content: '\"\"'\n        }\n    },\n    // Appearance variations\n    brand: {\n        color: tokens.colorBrandForeground1,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorBrandStroke1)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorBrandStroke1)\n        }\n    },\n    default: {\n        color: tokens.colorNeutralForeground2,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke2)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke2)\n        }\n    },\n    subtle: {\n        color: tokens.colorNeutralForeground2,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke3)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke3)\n        }\n    },\n    strong: {\n        color: tokens.colorNeutralForeground2,\n        '::before': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1)\n        },\n        '::after': {\n            ...shorthands.borderColor(tokens.colorNeutralStroke1)\n        }\n    }\n});\nconst useHorizontalStyles = makeStyles({\n    // Base styles\n    base: {\n        width: '100%',\n        '::before': {\n            borderTopStyle: 'solid',\n            borderTopWidth: tokens.strokeWidthThin,\n            minWidth: minStartEndLength\n        },\n        '::after': {\n            borderTopStyle: 'solid',\n            borderTopWidth: tokens.strokeWidthThin,\n            minWidth: minStartEndLength\n        }\n    },\n    // Inset styles\n    inset: {\n        paddingLeft: insetSpacing,\n        paddingRight: insetSpacing\n    },\n    // Alignment variations\n    start: {\n        '::before': {\n            content: '\"\"',\n            marginRight: contentSpacing,\n            maxWidth: maxStartEndLength\n        },\n        '::after': {\n            marginLeft: contentSpacing\n        }\n    },\n    center: {\n        '::before': {\n            marginRight: contentSpacing\n        },\n        '::after': {\n            marginLeft: contentSpacing\n        }\n    },\n    end: {\n        '::before': {\n            marginRight: contentSpacing\n        },\n        '::after': {\n            content: '\"\"',\n            marginLeft: contentSpacing,\n            maxWidth: maxStartEndLength\n        }\n    }\n});\nconst useVerticalStyles = makeStyles({\n    // Base styles\n    base: {\n        flexDirection: 'column',\n        minHeight: '20px',\n        '::before': {\n            borderRightStyle: 'solid',\n            borderRightWidth: tokens.strokeWidthThin,\n            minHeight: minStartEndLength\n        },\n        '::after': {\n            borderRightStyle: 'solid',\n            borderRightWidth: tokens.strokeWidthThin,\n            minHeight: minStartEndLength\n        }\n    },\n    // Inset styles\n    inset: {\n        marginTop: insetSpacing,\n        marginBottom: insetSpacing\n    },\n    // With children styles\n    withChildren: {\n        minHeight: '84px'\n    },\n    // Alignment variations\n    start: {\n        '::before': {\n            content: '\"\"',\n            marginBottom: contentSpacing,\n            maxHeight: maxStartEndLength\n        },\n        '::after': {\n            marginTop: contentSpacing\n        }\n    },\n    center: {\n        '::before': {\n            marginBottom: contentSpacing\n        },\n        '::after': {\n            marginTop: contentSpacing\n        }\n    },\n    end: {\n        '::before': {\n            marginBottom: contentSpacing\n        },\n        '::after': {\n            content: '\"\"',\n            marginTop: contentSpacing,\n            maxHeight: maxStartEndLength\n        }\n    }\n});\nexport const useDividerStyles_unstable = (state)=>{\n    const baseStyles = useBaseStyles();\n    const horizontalStyles = useHorizontalStyles();\n    const verticalStyles = useVerticalStyles();\n    const { alignContent, appearance, inset, vertical } = state;\n    state.root.className = mergeClasses(dividerClassNames.root, // Base styles\n    baseStyles.base, baseStyles[alignContent], appearance && baseStyles[appearance], // Horizontal styles\n    !vertical && horizontalStyles.base, !vertical && inset && horizontalStyles.inset, !vertical && horizontalStyles[alignContent], // Vertical styles\n    vertical && verticalStyles.base, vertical && inset && verticalStyles.inset, vertical && verticalStyles[alignContent], vertical && state.root.children !== undefined && verticalStyles.withChildren, // Childless styles\n    state.root.children === undefined && baseStyles.childless, // User provided class name\n    state.root.className);\n    if (state.wrapper) {\n        state.wrapper.className = mergeClasses(dividerClassNames.wrapper, state.wrapper.className);\n    }\n    return state;\n};\n","import * as React from 'react';\nimport { renderDivider_unstable } from './renderDivider';\nimport { useDivider_unstable } from './useDivider';\nimport { useDividerStyles_unstable } from './useDividerStyles.styles';\nimport { useCustomStyleHook_unstable } from '@fluentui/react-shared-contexts';\n/**\n * A divider visually segments content into groups.\n */ export const Divider = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const state = useDivider_unstable(props, ref);\n    useDividerStyles_unstable(state);\n    useCustomStyleHook_unstable('useDividerStyles_unstable')(state);\n    return renderDivider_unstable(state);\n});\nDivider.displayName = 'Divider';\n","import * as React from 'react';\nimport { getIntrinsicElementProps, useId, slot } from '@fluentui/react-utilities';\n/**\n * Returns the props and state required to render the component\n * @param props - User-provided props to the Divider component.\n * @param ref - User-provided ref to be passed to the Divider component.\n */ export const useDivider_unstable = (props, ref)=>{\n    const { alignContent = 'center', appearance = 'default', inset = false, vertical = false, wrapper } = props;\n    const dividerId = useId('divider-');\n    return {\n        // Props passed at the top-level\n        alignContent,\n        appearance,\n        inset,\n        vertical,\n        // Slots definition\n        components: {\n            root: 'div',\n            wrapper: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            role: 'separator',\n            'aria-orientation': vertical ? 'vertical' : 'horizontal',\n            'aria-labelledby': props.children ? dividerId : undefined,\n            ...props,\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref\n        }), {\n            elementType: 'div'\n        }),\n        wrapper: slot.always(wrapper, {\n            defaultProps: {\n                id: dividerId,\n                children: props.children\n            },\n            elementType: 'div'\n        })\n    };\n};\n","  import { jsx as _jsx } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\nimport { assertSlots } from '@fluentui/react-utilities';\n/**\n * Renders a Divider component by passing the slot props (defined in `state`) to the appropriate slots.\n */ export const renderDivider_unstable = (state)=>{\n    assertSlots(state);\n    return /*#__PURE__*/ _jsx(state.root, {\n        children: state.root.children !== undefined && /*#__PURE__*/ _jsx(state.wrapper, {\n            children: state.root.children\n        })\n    });\n};\n","/**\n * Divider roles\n * @public\n */\nexport const DividerRole = {\n    /**\n     * The divider semantically separates content\n     */\n    separator: \"separator\",\n    /**\n     * The divider has no semantic value and is for visual presentation only.\n     */\n    presentation: \"presentation\",\n};\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { DividerRole } from \"./divider.options.js\";\nexport { DividerRole };\n/**\n * A Divider Custom HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#separator | ARIA separator } or {@link https://www.w3.org/TR/wai-aria-1.1/#presentation | ARIA presentation}.\n *\n * @public\n */\nexport class Divider extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The role of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: role\n         */\n        this.role = DividerRole.separator;\n        /**\n         * The orientation of the divider.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: orientation\n         */\n        this.orientation = Orientation.horizontal;\n    }\n}\n__decorate([\n    attr\n], Divider.prototype, \"role\", void 0);\n__decorate([\n    attr\n], Divider.prototype, \"orientation\", void 0);\n","import { Divider, dividerTemplate as template } from '@microsoft/fast-foundation';\nimport { dividerStyles as styles } from './divider.styles';\n/**\n * The Fluent Divider Element. Implements {@link @microsoft/fast-foundation#Divider},\n * {@link @microsoft/fast-foundation#dividerTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-divider\\>\n */\nexport const fluentDivider = Divider.compose({\n    baseName: 'divider',\n    template,\n    styles,\n});\n/**\n * Styles for Divider\n * @public\n */\nexport const dividerStyles = styles;\n/**\n * Base class for Fluent Divider\n * @public\n */\nexport { Divider };\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Divider} component.\n * @public\n */\nexport const dividerTemplate = (context, definition) => html `\n    <template role=\"${x => x.role}\" aria-orientation=\"${x => x.orientation}\"></template>\n`;\n","import { css } from '@microsoft/fast-element';\nimport { display } from '@microsoft/fast-foundation';\nimport { designUnit, neutralStrokeDividerRest, strokeWidth } from '../design-tokens';\nexport const dividerStyles = (context, definition) => css `\n    ${display('block')} :host {\n      box-sizing: content-box;\n      height: 0;\n      border: none;\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n    }\n\n    :host([orientation=\"vertical\"]) {\n      border: none;\n      height: 100%;\n      margin: 0 calc(${designUnit} * 1px);\n      border-left: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n  }\n  `;\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\n/**\n * A Skeleton Custom HTML Element.\n *\n * @slot - The default slot\n *\n * @public\n */\nexport class Skeleton extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates what the shape of the Skeleton should be.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: shape\n         */\n        this.shape = \"rect\";\n    }\n}\n__decorate([\n    attr\n], Skeleton.prototype, \"fill\", void 0);\n__decorate([\n    attr\n], Skeleton.prototype, \"shape\", void 0);\n__decorate([\n    attr\n], Skeleton.prototype, \"pattern\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], Skeleton.prototype, \"shimmer\", void 0);\n","import { Skeleton, skeletonTemplate as template } from '@microsoft/fast-foundation';\nimport { skeletonStyles as styles } from './skeleton.styles';\n/**\n * The Fluent Skeleton Element. Implements {@link @microsoft/fast-foundation#Skeleton},\n * {@link @microsoft/fast-foundation#skeletonTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-skeleton\\>\n */\nexport const fluentSkeleton = Skeleton.compose({\n    baseName: 'skeleton',\n    template,\n    styles,\n});\n/**\n * Styles for Skeleton\n * @public\n */\nexport const skeletonStyles = styles;\n/**\n * Skeleton base class\n * @public\n */\nexport { Skeleton };\n","import { html, when } from \"@microsoft/fast-element\";\n/**\n * The template for the fast-skeleton component\n * @public\n */\nexport const skeletonTemplate = (context, definition) => html `\n    <template\n        class=\"${x => (x.shape === \"circle\" ? \"circle\" : \"rect\")}\"\n        pattern=\"${x => x.pattern}\"\n        ?shimmer=\"${x => x.shimmer}\"\n    >\n        ${when(x => x.shimmer === true, html `\n                <span class=\"shimmer\"></span>\n            `)}\n        <object type=\"image/svg+xml\" data=\"${x => x.pattern}\" role=\"presentation\">\n            <img class=\"pattern\" src=\"${x => x.pattern}\" />\n        </object>\n        <slot></slot>\n    </template>\n`;\n","import { css } from '@microsoft/fast-element';\nimport { display, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { controlCornerRadius, neutralFillSecondaryHover, neutralFillSecondaryRest } from '../design-tokens';\nexport const skeletonStyles = (context, definition) => css `\n    ${display('block')} :host {\n      --skeleton-fill-default: ${neutralFillSecondaryRest};\n      overflow: hidden;\n      width: 100%;\n      position: relative;\n      background-color: var(--skeleton-fill, var(--skeleton-fill-default));\n      --skeleton-animation-gradient-default: linear-gradient(\n        270deg,\n        var(--skeleton-fill, var(--skeleton-fill-default)) 0%,\n        ${neutralFillSecondaryHover} 51%,\n        var(--skeleton-fill, var(--skeleton-fill-default)) 100%\n      );\n      --skeleton-animation-timing-default: ease-in-out;\n    }\n\n    :host(.rect) {\n      border-radius: calc(${controlCornerRadius} * 1px);\n    }\n\n    :host(.circle) {\n      border-radius: 100%;\n      overflow: hidden;\n    }\n\n    object {\n      position: absolute;\n      width: 100%;\n      height: auto;\n      z-index: 2;\n    }\n\n    object img {\n      width: 100%;\n      height: auto;\n    }\n\n    ${display('block')} span.shimmer {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      background-image: var(--skeleton-animation-gradient, var(--skeleton-animation-gradient-default));\n      background-size: 0px 0px / 90% 100%;\n      background-repeat: no-repeat;\n      background-color: var(--skeleton-animation-fill, ${neutralFillSecondaryRest});\n      animation: shimmer 2s infinite;\n      animation-timing-function: var(--skeleton-animation-timing, var(--skeleton-timing-default));\n      animation-direction: normal;\n      z-index: 1;\n    }\n\n    ::slotted(svg) {\n      z-index: 2;\n    }\n\n    ::slotted(.pattern) {\n      width: 100%;\n      height: 100%;\n    }\n\n    @keyframes shimmer {\n      0% {\n        transform: translateX(-100%);\n      }\n      100% {\n        transform: translateX(100%);\n      }\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host{\n          background-color: ${SystemColors.CanvasText};\n        }\n      `));\n","/**\n * Enumerates possible tooltip positions\n *\n * @public\n */\nexport const TooltipPosition = {\n    /**\n     * The tooltip is positioned above the element\n     */\n    top: \"top\",\n    /**\n     * The tooltip is positioned to the right of the element\n     */\n    right: \"right\",\n    /**\n     * The tooltip is positioned below the element\n     */\n    bottom: \"bottom\",\n    /**\n     * The tooltip is positioned to the left of the element\n     */\n    left: \"left\",\n    /**\n     * The tooltip is positioned before the element\n     */\n    start: \"start\",\n    /**\n     * The tooltip is positioned after the element\n     */\n    end: \"end\",\n    /**\n     * The tooltip is positioned above the element and to the left\n     */\n    topLeft: \"top-left\",\n    /**\n     * The tooltip is positioned above the element and to the right\n     */\n    topRight: \"top-right\",\n    /**\n     * The tooltip is positioned below the element and to the left\n     */\n    bottomLeft: \"bottom-left\",\n    /**\n     * The tooltip is positioned below the element and to the right\n     */\n    bottomRight: \"bottom-right\",\n    /**\n     * The tooltip is positioned above the element and to the left\n     */\n    topStart: \"top-start\",\n    /**\n     * The tooltip is positioned above the element and to the right\n     */\n    topEnd: \"top-end\",\n    /**\n     * The tooltip is positioned below the element and to the left\n     */\n    bottomStart: \"bottom-start\",\n    /**\n     * The tooltip is positioned below the element and to the right\n     */\n    bottomEnd: \"bottom-end\",\n};\n","import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, keyEscape } from \"@microsoft/fast-web-utilities\";\nimport { getDirection } from \"../utilities/direction.js\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { TooltipPosition } from \"./tooltip.options.js\";\nexport { TooltipPosition };\n/**\n * An Tooltip Custom HTML Element.\n *\n * @slot - The default slot for the tooltip content\n * @csspart tooltip - The tooltip element\n * @fires dismiss - Fires a custom 'dismiss' event when the tooltip is visible and escape key is pressed\n *\n * @public\n */\nexport class Tooltip extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The id of the element the tooltip is anchored to\n         *\n         * @defaultValue - undefined\n         * @public\n         * HTML Attribute: anchor\n         */\n        this.anchor = \"\";\n        /**\n         * The delay in milliseconds before a tooltip is shown after a hover event\n         *\n         * @defaultValue - 300\n         * @public\n         * HTML Attribute: delay\n         */\n        this.delay = 300;\n        /**\n         * Controls when the tooltip updates its position, default is 'anchor' which only updates when\n         * the anchor is resized.  'auto' will update on scroll/resize events.\n         * Corresponds to anchored-region auto-update-mode.\n         * @public\n         * @remarks\n         * HTML Attribute: auto-update-mode\n         */\n        this.autoUpdateMode = \"anchor\";\n        /**\n         * the html element currently being used as anchor.\n         * Setting this directly overrides the anchor attribute.\n         *\n         * @public\n         */\n        this.anchorElement = null;\n        /**\n         * The current viewport element instance\n         *\n         * @internal\n         */\n        this.viewportElement = null;\n        /**\n         * @internal\n         * @defaultValue \"dynamic\"\n         */\n        this.verticalPositioningMode = \"dynamic\";\n        /**\n         * @internal\n         * @defaultValue \"dynamic\"\n         */\n        this.horizontalPositioningMode = \"dynamic\";\n        /**\n         * @internal\n         */\n        this.horizontalInset = \"false\";\n        /**\n         * @internal\n         */\n        this.verticalInset = \"false\";\n        /**\n         * @internal\n         */\n        this.horizontalScaling = \"content\";\n        /**\n         * @internal\n         */\n        this.verticalScaling = \"content\";\n        /**\n         * @internal\n         */\n        this.verticalDefaultPosition = undefined;\n        /**\n         * @internal\n         */\n        this.horizontalDefaultPosition = undefined;\n        /**\n         * @internal\n         */\n        this.tooltipVisible = false;\n        /**\n         * Track current direction to pass to the anchored region\n         * updated when tooltip is shown\n         *\n         * @internal\n         */\n        this.currentDirection = Direction.ltr;\n        /**\n         * The timer that tracks delay time before the tooltip is shown on hover\n         */\n        this.showDelayTimer = null;\n        /**\n         * The timer that tracks delay time before the tooltip is hidden\n         */\n        this.hideDelayTimer = null;\n        /**\n         * Indicates whether the anchor is currently being hovered or has focus\n         */\n        this.isAnchorHoveredFocused = false;\n        /**\n         * Indicates whether the region is currently being hovered\n         */\n        this.isRegionHovered = false;\n        /**\n         * invoked when the anchored region's position relative to the anchor changes\n         *\n         * @internal\n         */\n        this.handlePositionChange = (ev) => {\n            this.classList.toggle(\"top\", this.region.verticalPosition === \"start\");\n            this.classList.toggle(\"bottom\", this.region.verticalPosition === \"end\");\n            this.classList.toggle(\"inset-top\", this.region.verticalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-bottom\", this.region.verticalPosition === \"insetEnd\");\n            this.classList.toggle(\"center-vertical\", this.region.verticalPosition === \"center\");\n            this.classList.toggle(\"left\", this.region.horizontalPosition === \"start\");\n            this.classList.toggle(\"right\", this.region.horizontalPosition === \"end\");\n            this.classList.toggle(\"inset-left\", this.region.horizontalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-right\", this.region.horizontalPosition === \"insetEnd\");\n            this.classList.toggle(\"center-horizontal\", this.region.horizontalPosition === \"center\");\n        };\n        /**\n         * mouse enters region\n         */\n        this.handleRegionMouseOver = (ev) => {\n            this.isRegionHovered = true;\n        };\n        /**\n         * mouse leaves region\n         */\n        this.handleRegionMouseOut = (ev) => {\n            this.isRegionHovered = false;\n            this.startHideDelayTimer();\n        };\n        /**\n         * mouse enters anchor\n         */\n        this.handleAnchorMouseOver = (ev) => {\n            if (this.tooltipVisible) {\n                // tooltip is already visible, just set the anchor hover flag\n                this.isAnchorHoveredFocused = true;\n                return;\n            }\n            this.startShowDelayTimer();\n        };\n        /**\n         * mouse leaves anchor\n         */\n        this.handleAnchorMouseOut = (ev) => {\n            this.isAnchorHoveredFocused = false;\n            this.clearShowDelayTimer();\n            this.startHideDelayTimer();\n        };\n        /**\n         * anchor gets focus\n         */\n        this.handleAnchorFocusIn = (ev) => {\n            this.startShowDelayTimer();\n        };\n        /**\n         * anchor loses focus\n         */\n        this.handleAnchorFocusOut = (ev) => {\n            this.isAnchorHoveredFocused = false;\n            this.clearShowDelayTimer();\n            this.startHideDelayTimer();\n        };\n        /**\n         * starts the hide timer\n         */\n        this.startHideDelayTimer = () => {\n            this.clearHideDelayTimer();\n            if (!this.tooltipVisible) {\n                return;\n            }\n            // allow 60 ms for account for pointer to move between anchor/tooltip\n            // without hiding tooltip\n            this.hideDelayTimer = window.setTimeout(() => {\n                this.updateTooltipVisibility();\n            }, 60);\n        };\n        /**\n         * clears the hide delay\n         */\n        this.clearHideDelayTimer = () => {\n            if (this.hideDelayTimer !== null) {\n                clearTimeout(this.hideDelayTimer);\n                this.hideDelayTimer = null;\n            }\n        };\n        /**\n         * starts the show timer if not currently running\n         */\n        this.startShowDelayTimer = () => {\n            if (this.isAnchorHoveredFocused) {\n                return;\n            }\n            if (this.delay > 1) {\n                if (this.showDelayTimer === null)\n                    this.showDelayTimer = window.setTimeout(() => {\n                        this.startHover();\n                    }, this.delay);\n                return;\n            }\n            this.startHover();\n        };\n        /**\n         * start hover\n         */\n        this.startHover = () => {\n            this.isAnchorHoveredFocused = true;\n            this.updateTooltipVisibility();\n        };\n        /**\n         * clears the show delay\n         */\n        this.clearShowDelayTimer = () => {\n            if (this.showDelayTimer !== null) {\n                clearTimeout(this.showDelayTimer);\n                this.showDelayTimer = null;\n            }\n        };\n        /**\n         *  Gets the anchor element by id\n         */\n        this.getAnchor = () => {\n            const rootNode = this.getRootNode();\n            if (rootNode instanceof ShadowRoot) {\n                return rootNode.getElementById(this.anchor);\n            }\n            return document.getElementById(this.anchor);\n        };\n        /**\n         * handles key down events to check for dismiss\n         */\n        this.handleDocumentKeydown = (e) => {\n            if (!e.defaultPrevented && this.tooltipVisible) {\n                switch (e.key) {\n                    case keyEscape:\n                        this.isAnchorHoveredFocused = false;\n                        this.updateTooltipVisibility();\n                        this.$emit(\"dismiss\");\n                        break;\n                }\n            }\n        };\n        /**\n         * determines whether to show or hide the tooltip based on current state\n         */\n        this.updateTooltipVisibility = () => {\n            if (this.visible === false) {\n                this.hideTooltip();\n            }\n            else if (this.visible === true) {\n                this.showTooltip();\n                return;\n            }\n            else {\n                if (this.isAnchorHoveredFocused || this.isRegionHovered) {\n                    this.showTooltip();\n                    return;\n                }\n                this.hideTooltip();\n            }\n        };\n        /**\n         * shows the tooltip\n         */\n        this.showTooltip = () => {\n            if (this.tooltipVisible) {\n                return;\n            }\n            this.currentDirection = getDirection(this);\n            this.tooltipVisible = true;\n            document.addEventListener(\"keydown\", this.handleDocumentKeydown);\n            DOM.queueUpdate(this.setRegionProps);\n        };\n        /**\n         * hides the tooltip\n         */\n        this.hideTooltip = () => {\n            if (!this.tooltipVisible) {\n                return;\n            }\n            this.clearHideDelayTimer();\n            if (this.region !== null && this.region !== undefined) {\n                this.region.removeEventListener(\"positionchange\", this.handlePositionChange);\n                this.region.viewportElement = null;\n                this.region.anchorElement = null;\n                this.region.removeEventListener(\"mouseover\", this.handleRegionMouseOver);\n                this.region.removeEventListener(\"mouseout\", this.handleRegionMouseOut);\n            }\n            document.removeEventListener(\"keydown\", this.handleDocumentKeydown);\n            this.tooltipVisible = false;\n        };\n        /**\n         * updates the tooltip anchored region props after it has been\n         * added to the DOM\n         */\n        this.setRegionProps = () => {\n            if (!this.tooltipVisible) {\n                return;\n            }\n            this.region.viewportElement = this.viewportElement;\n            this.region.anchorElement = this.anchorElement;\n            this.region.addEventListener(\"positionchange\", this.handlePositionChange);\n            this.region.addEventListener(\"mouseover\", this.handleRegionMouseOver, {\n                passive: true,\n            });\n            this.region.addEventListener(\"mouseout\", this.handleRegionMouseOut, {\n                passive: true,\n            });\n        };\n    }\n    visibleChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateTooltipVisibility();\n            this.updateLayout();\n        }\n    }\n    anchorChanged() {\n        if (this.$fastController.isConnected) {\n            this.anchorElement = this.getAnchor();\n        }\n    }\n    positionChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateLayout();\n        }\n    }\n    anchorElementChanged(oldValue) {\n        if (this.$fastController.isConnected) {\n            if (oldValue !== null && oldValue !== undefined) {\n                oldValue.removeEventListener(\"mouseover\", this.handleAnchorMouseOver);\n                oldValue.removeEventListener(\"mouseout\", this.handleAnchorMouseOut);\n                oldValue.removeEventListener(\"focusin\", this.handleAnchorFocusIn);\n                oldValue.removeEventListener(\"focusout\", this.handleAnchorFocusOut);\n            }\n            if (this.anchorElement !== null && this.anchorElement !== undefined) {\n                this.anchorElement.addEventListener(\"mouseover\", this.handleAnchorMouseOver, { passive: true });\n                this.anchorElement.addEventListener(\"mouseout\", this.handleAnchorMouseOut, { passive: true });\n                this.anchorElement.addEventListener(\"focusin\", this.handleAnchorFocusIn, {\n                    passive: true,\n                });\n                this.anchorElement.addEventListener(\"focusout\", this.handleAnchorFocusOut, { passive: true });\n                const anchorId = this.anchorElement.id;\n                if (this.anchorElement.parentElement !== null) {\n                    this.anchorElement.parentElement\n                        .querySelectorAll(\":hover\")\n                        .forEach(element => {\n                        if (element.id === anchorId) {\n                            this.startShowDelayTimer();\n                        }\n                    });\n                }\n            }\n            if (this.region !== null &&\n                this.region !== undefined &&\n                this.tooltipVisible) {\n                this.region.anchorElement = this.anchorElement;\n            }\n            this.updateLayout();\n        }\n    }\n    viewportElementChanged() {\n        if (this.region !== null && this.region !== undefined) {\n            this.region.viewportElement = this.viewportElement;\n        }\n        this.updateLayout();\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.anchorElement = this.getAnchor();\n        this.updateTooltipVisibility();\n    }\n    disconnectedCallback() {\n        this.hideTooltip();\n        this.clearShowDelayTimer();\n        this.clearHideDelayTimer();\n        super.disconnectedCallback();\n    }\n    /**\n     * updated the properties being passed to the anchored region\n     */\n    updateLayout() {\n        this.verticalPositioningMode = \"locktodefault\";\n        this.horizontalPositioningMode = \"locktodefault\";\n        switch (this.position) {\n            case TooltipPosition.top:\n            case TooltipPosition.bottom:\n                this.verticalDefaultPosition = this.position;\n                this.horizontalDefaultPosition = \"center\";\n                break;\n            case TooltipPosition.right:\n            case TooltipPosition.left:\n            case TooltipPosition.start:\n            case TooltipPosition.end:\n                this.verticalDefaultPosition = \"center\";\n                this.horizontalDefaultPosition = this.position;\n                break;\n            case TooltipPosition.topLeft:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"left\";\n                break;\n            case TooltipPosition.topRight:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"right\";\n                break;\n            case TooltipPosition.bottomLeft:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"left\";\n                break;\n            case TooltipPosition.bottomRight:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"right\";\n                break;\n            case TooltipPosition.topStart:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"start\";\n                break;\n            case TooltipPosition.topEnd:\n                this.verticalDefaultPosition = \"top\";\n                this.horizontalDefaultPosition = \"end\";\n                break;\n            case TooltipPosition.bottomStart:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"start\";\n                break;\n            case TooltipPosition.bottomEnd:\n                this.verticalDefaultPosition = \"bottom\";\n                this.horizontalDefaultPosition = \"end\";\n                break;\n            default:\n                this.verticalPositioningMode = \"dynamic\";\n                this.horizontalPositioningMode = \"dynamic\";\n                this.verticalDefaultPosition = void 0;\n                this.horizontalDefaultPosition = \"center\";\n                break;\n        }\n    }\n}\n__decorate([\n    attr({ mode: \"boolean\" })\n], Tooltip.prototype, \"visible\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"anchor\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"delay\", void 0);\n__decorate([\n    attr\n], Tooltip.prototype, \"position\", void 0);\n__decorate([\n    attr({ attribute: \"auto-update-mode\" })\n], Tooltip.prototype, \"autoUpdateMode\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-viewport-lock\" })\n], Tooltip.prototype, \"horizontalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-viewport-lock\" })\n], Tooltip.prototype, \"verticalViewportLock\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"anchorElement\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"viewportElement\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalPositioningMode\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalPositioningMode\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalInset\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalInset\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalScaling\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalScaling\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"verticalDefaultPosition\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"horizontalDefaultPosition\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"tooltipVisible\", void 0);\n__decorate([\n    observable\n], Tooltip.prototype, \"currentDirection\", void 0);\n","import { $global } from \"@microsoft/fast-element\";\n/**\n *  A service to batch intersection event callbacks so multiple elements can share a single observer\n *\n * @public\n */\nexport class IntersectionService {\n    constructor() {\n        this.intersectionDetector = null;\n        this.observedElements = new Map();\n        /**\n         * Request the position of a target element\n         *\n         * @internal\n         */\n        this.requestPosition = (target, callback) => {\n            var _a;\n            if (this.intersectionDetector === null) {\n                return;\n            }\n            if (this.observedElements.has(target)) {\n                (_a = this.observedElements.get(target)) === null || _a === void 0 ? void 0 : _a.push(callback);\n                return;\n            }\n            this.observedElements.set(target, [callback]);\n            this.intersectionDetector.observe(target);\n        };\n        /**\n         * Cancel a position request\n         *\n         * @internal\n         */\n        this.cancelRequestPosition = (target, callback) => {\n            const callbacks = this.observedElements.get(target);\n            if (callbacks !== undefined) {\n                const callBackIndex = callbacks.indexOf(callback);\n                if (callBackIndex !== -1) {\n                    callbacks.splice(callBackIndex, 1);\n                }\n            }\n        };\n        /**\n         * initialize intersection detector\n         */\n        this.initializeIntersectionDetector = () => {\n            if (!$global.IntersectionObserver) {\n                //intersection observer not supported\n                return;\n            }\n            this.intersectionDetector = new IntersectionObserver(this.handleIntersection, {\n                root: null,\n                rootMargin: \"0px\",\n                threshold: [0, 1],\n            });\n        };\n        /**\n         *  Handle intersections\n         */\n        this.handleIntersection = (entries) => {\n            if (this.intersectionDetector === null) {\n                return;\n            }\n            const pendingCallbacks = [];\n            const pendingCallbackParams = [];\n            // go through the entries to build a list of callbacks and params for each\n            entries.forEach((entry) => {\n                var _a;\n                // stop watching this element until we get new update requests for it\n                (_a = this.intersectionDetector) === null || _a === void 0 ? void 0 : _a.unobserve(entry.target);\n                const thisElementCallbacks = this.observedElements.get(entry.target);\n                if (thisElementCallbacks !== undefined) {\n                    thisElementCallbacks.forEach((callback) => {\n                        let targetCallbackIndex = pendingCallbacks.indexOf(callback);\n                        if (targetCallbackIndex === -1) {\n                            targetCallbackIndex = pendingCallbacks.length;\n                            pendingCallbacks.push(callback);\n                            pendingCallbackParams.push([]);\n                        }\n                        pendingCallbackParams[targetCallbackIndex].push(entry);\n                    });\n                    this.observedElements.delete(entry.target);\n                }\n            });\n            // execute callbacks\n            pendingCallbacks.forEach((callback, index) => {\n                callback(pendingCallbackParams[index]);\n            });\n        };\n        this.initializeIntersectionDetector();\n    }\n}\n","import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, eventResize, eventScroll } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { getDirection } from \"../utilities/direction.js\";\nimport { IntersectionService } from \"../utilities/intersection-service.js\";\n/**\n * An anchored region Custom HTML Element.\n *\n * @slot - The default slot for the content\n * @fires loaded - Fires a custom 'loaded' event when the region is loaded and visible\n * @fires positionchange - Fires a custom 'positionchange' event when the position has changed\n *\n * @public\n */\nexport class AnchoredRegion extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The HTML ID of the anchor element this region is positioned relative to\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: anchor\n         */\n        this.anchor = \"\";\n        /**\n         * The HTML ID of the viewport element this region is positioned relative to\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: anchor\n         */\n        this.viewport = \"\";\n        /**\n         * Sets what logic the component uses to determine horizontal placement.\n         * 'locktodefault' forces the default position\n         * 'dynamic' decides placement based on available space\n         * 'uncontrolled' does not control placement on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-positioning-mode\n         */\n        this.horizontalPositioningMode = \"uncontrolled\";\n        /**\n         * The default horizontal position of the region relative to the anchor element\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-default-position\n         */\n        this.horizontalDefaultPosition = \"unset\";\n        /**\n         * Whether the region remains in the viewport (ie. detaches from the anchor) on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-viewport-lock\n         */\n        this.horizontalViewportLock = false;\n        /**\n         * Whether the region overlaps the anchor on the horizontal axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-inset\n         */\n        this.horizontalInset = false;\n        /**\n         * Defines how the width of the region is calculated\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: horizontal-scaling\n         */\n        this.horizontalScaling = \"content\";\n        /**\n         * Sets what logic the component uses to determine vertical placement.\n         * 'locktodefault' forces the default position\n         * 'dynamic' decides placement based on available space\n         * 'uncontrolled' does not control placement on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-positioning-mode\n         */\n        this.verticalPositioningMode = \"uncontrolled\";\n        /**\n         * The default vertical position of the region relative to the anchor element\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-default-position\n         */\n        this.verticalDefaultPosition = \"unset\";\n        /**\n         * Whether the region remains in the viewport (ie. detaches from the anchor) on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-viewport-lock\n         */\n        this.verticalViewportLock = false;\n        /**\n         * Whether the region overlaps the anchor on the vertical axis\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-inset\n         */\n        this.verticalInset = false;\n        /**\n         * Defines how the height of the region is calculated\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: vertical-scaling\n         */\n        this.verticalScaling = \"content\";\n        /**\n         * Whether the region is positioned using css \"position: fixed\".\n         * Otherwise the region uses \"position: absolute\".\n         * Fixed placement allows the region to break out of parent containers,\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: fixed-placement\n         */\n        this.fixedPlacement = false;\n        /**\n         * Defines what triggers the anchored region to revaluate positioning\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: auto-update-mode\n         */\n        this.autoUpdateMode = \"anchor\";\n        /**\n         * The HTML element being used as the anchor\n         *\n         * @public\n         */\n        this.anchorElement = null;\n        /**\n         * The HTML element being used as the viewport\n         *\n         * @public\n         */\n        this.viewportElement = null;\n        /**\n         * indicates that an initial positioning pass on layout has completed\n         *\n         * @internal\n         */\n        this.initialLayoutComplete = false;\n        this.resizeDetector = null;\n        /**\n         * base offsets between the positioner's base position and the anchor's\n         */\n        this.baseHorizontalOffset = 0;\n        this.baseVerticalOffset = 0;\n        this.pendingPositioningUpdate = false;\n        this.pendingReset = false;\n        this.currentDirection = Direction.ltr;\n        this.regionVisible = false;\n        // indicates that a layout update should occur even if geometry has not changed\n        // used to ensure some attribute changes are applied\n        this.forceUpdate = false;\n        // defines how big a difference in pixels there must be between states to\n        // justify a layout update that affects the dom (prevents repeated sub-pixel corrections)\n        this.updateThreshold = 0.5;\n        /**\n         * update position\n         */\n        this.update = () => {\n            if (!this.pendingPositioningUpdate) {\n                this.requestPositionUpdates();\n            }\n        };\n        /**\n         * starts observers\n         */\n        this.startObservers = () => {\n            this.stopObservers();\n            if (this.anchorElement === null) {\n                return;\n            }\n            this.requestPositionUpdates();\n            if (this.resizeDetector !== null) {\n                this.resizeDetector.observe(this.anchorElement);\n                this.resizeDetector.observe(this);\n            }\n        };\n        /**\n         * get position updates\n         */\n        this.requestPositionUpdates = () => {\n            if (this.anchorElement === null || this.pendingPositioningUpdate) {\n                return;\n            }\n            AnchoredRegion.intersectionService.requestPosition(this, this.handleIntersection);\n            AnchoredRegion.intersectionService.requestPosition(this.anchorElement, this.handleIntersection);\n            if (this.viewportElement !== null) {\n                AnchoredRegion.intersectionService.requestPosition(this.viewportElement, this.handleIntersection);\n            }\n            this.pendingPositioningUpdate = true;\n        };\n        /**\n         * stops observers\n         */\n        this.stopObservers = () => {\n            if (this.pendingPositioningUpdate) {\n                this.pendingPositioningUpdate = false;\n                AnchoredRegion.intersectionService.cancelRequestPosition(this, this.handleIntersection);\n                if (this.anchorElement !== null) {\n                    AnchoredRegion.intersectionService.cancelRequestPosition(this.anchorElement, this.handleIntersection);\n                }\n                if (this.viewportElement !== null) {\n                    AnchoredRegion.intersectionService.cancelRequestPosition(this.viewportElement, this.handleIntersection);\n                }\n            }\n            if (this.resizeDetector !== null) {\n                this.resizeDetector.disconnect();\n            }\n        };\n        /**\n         * Gets the viewport element by id, or defaults to document root\n         */\n        this.getViewport = () => {\n            if (typeof this.viewport !== \"string\" || this.viewport === \"\") {\n                return document.documentElement;\n            }\n            return document.getElementById(this.viewport);\n        };\n        /**\n         *  Gets the anchor element by id\n         */\n        this.getAnchor = () => {\n            return document.getElementById(this.anchor);\n        };\n        /**\n         *  Handle intersections\n         */\n        this.handleIntersection = (entries) => {\n            if (!this.pendingPositioningUpdate) {\n                return;\n            }\n            this.pendingPositioningUpdate = false;\n            if (!this.applyIntersectionEntries(entries)) {\n                return;\n            }\n            this.updateLayout();\n        };\n        /**\n         *  iterate through intersection entries and apply data\n         */\n        this.applyIntersectionEntries = (entries) => {\n            const regionEntry = entries.find(x => x.target === this);\n            const anchorEntry = entries.find(x => x.target === this.anchorElement);\n            const viewportEntry = entries.find(x => x.target === this.viewportElement);\n            if (regionEntry === undefined ||\n                viewportEntry === undefined ||\n                anchorEntry === undefined) {\n                return false;\n            }\n            // don't update the dom unless there is a significant difference in rect positions\n            if (!this.regionVisible ||\n                this.forceUpdate ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined ||\n                this.isRectDifferent(this.anchorRect, anchorEntry.boundingClientRect) ||\n                this.isRectDifferent(this.viewportRect, viewportEntry.boundingClientRect) ||\n                this.isRectDifferent(this.regionRect, regionEntry.boundingClientRect)) {\n                this.regionRect = regionEntry.boundingClientRect;\n                this.anchorRect = anchorEntry.boundingClientRect;\n                if (this.viewportElement === document.documentElement) {\n                    this.viewportRect = new DOMRectReadOnly(viewportEntry.boundingClientRect.x +\n                        document.documentElement.scrollLeft, viewportEntry.boundingClientRect.y +\n                        document.documentElement.scrollTop, viewportEntry.boundingClientRect.width, viewportEntry.boundingClientRect.height);\n                }\n                else {\n                    this.viewportRect = viewportEntry.boundingClientRect;\n                }\n                this.updateRegionOffset();\n                this.forceUpdate = false;\n                return true;\n            }\n            return false;\n        };\n        /**\n         *  Update the offset values\n         */\n        this.updateRegionOffset = () => {\n            if (this.anchorRect && this.regionRect) {\n                this.baseHorizontalOffset =\n                    this.baseHorizontalOffset +\n                        (this.anchorRect.left - this.regionRect.left) +\n                        (this.translateX - this.baseHorizontalOffset);\n                this.baseVerticalOffset =\n                    this.baseVerticalOffset +\n                        (this.anchorRect.top - this.regionRect.top) +\n                        (this.translateY - this.baseVerticalOffset);\n            }\n        };\n        /**\n         *  compare rects to see if there is enough change to justify a DOM update\n         */\n        this.isRectDifferent = (rectA, rectB) => {\n            if (Math.abs(rectA.top - rectB.top) > this.updateThreshold ||\n                Math.abs(rectA.right - rectB.right) > this.updateThreshold ||\n                Math.abs(rectA.bottom - rectB.bottom) > this.updateThreshold ||\n                Math.abs(rectA.left - rectB.left) > this.updateThreshold) {\n                return true;\n            }\n            return false;\n        };\n        /**\n         *  Handle resize events\n         */\n        this.handleResize = (entries) => {\n            this.update();\n        };\n        /**\n         * resets the component\n         */\n        this.reset = () => {\n            if (!this.pendingReset) {\n                return;\n            }\n            this.pendingReset = false;\n            if (this.anchorElement === null) {\n                this.anchorElement = this.getAnchor();\n            }\n            if (this.viewportElement === null) {\n                this.viewportElement = this.getViewport();\n            }\n            this.currentDirection = getDirection(this);\n            this.startObservers();\n        };\n        /**\n         *  Recalculate layout related state values\n         */\n        this.updateLayout = () => {\n            let desiredVerticalPosition = undefined;\n            let desiredHorizontalPosition = undefined;\n            if (this.horizontalPositioningMode !== \"uncontrolled\") {\n                const horizontalOptions = this.getPositioningOptions(this.horizontalInset);\n                if (this.horizontalDefaultPosition === \"center\") {\n                    desiredHorizontalPosition = \"center\";\n                }\n                else if (this.horizontalDefaultPosition !== \"unset\") {\n                    let dirCorrectedHorizontalDefaultPosition = this\n                        .horizontalDefaultPosition;\n                    if (dirCorrectedHorizontalDefaultPosition === \"start\" ||\n                        dirCorrectedHorizontalDefaultPosition === \"end\") {\n                        // if direction changes we reset the layout\n                        const newDirection = getDirection(this);\n                        if (newDirection !== this.currentDirection) {\n                            this.currentDirection = newDirection;\n                            this.initialize();\n                            return;\n                        }\n                        if (this.currentDirection === Direction.ltr) {\n                            dirCorrectedHorizontalDefaultPosition =\n                                dirCorrectedHorizontalDefaultPosition === \"start\"\n                                    ? \"left\"\n                                    : \"right\";\n                        }\n                        else {\n                            dirCorrectedHorizontalDefaultPosition =\n                                dirCorrectedHorizontalDefaultPosition === \"start\"\n                                    ? \"right\"\n                                    : \"left\";\n                        }\n                    }\n                    switch (dirCorrectedHorizontalDefaultPosition) {\n                        case \"left\":\n                            desiredHorizontalPosition = this.horizontalInset\n                                ? \"insetStart\"\n                                : \"start\";\n                            break;\n                        case \"right\":\n                            desiredHorizontalPosition = this.horizontalInset\n                                ? \"insetEnd\"\n                                : \"end\";\n                            break;\n                    }\n                }\n                const horizontalThreshold = this.horizontalThreshold !== undefined\n                    ? this.horizontalThreshold\n                    : this.regionRect !== undefined\n                        ? this.regionRect.width\n                        : 0;\n                const anchorLeft = this.anchorRect !== undefined ? this.anchorRect.left : 0;\n                const anchorRight = this.anchorRect !== undefined ? this.anchorRect.right : 0;\n                const anchorWidth = this.anchorRect !== undefined ? this.anchorRect.width : 0;\n                const viewportLeft = this.viewportRect !== undefined ? this.viewportRect.left : 0;\n                const viewportRight = this.viewportRect !== undefined ? this.viewportRect.right : 0;\n                if (desiredHorizontalPosition === undefined ||\n                    (!(this.horizontalPositioningMode === \"locktodefault\") &&\n                        this.getAvailableSpace(desiredHorizontalPosition, anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight) < horizontalThreshold)) {\n                    desiredHorizontalPosition =\n                        this.getAvailableSpace(horizontalOptions[0], anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight) >\n                            this.getAvailableSpace(horizontalOptions[1], anchorLeft, anchorRight, anchorWidth, viewportLeft, viewportRight)\n                            ? horizontalOptions[0]\n                            : horizontalOptions[1];\n                }\n            }\n            if (this.verticalPositioningMode !== \"uncontrolled\") {\n                const verticalOptions = this.getPositioningOptions(this.verticalInset);\n                if (this.verticalDefaultPosition === \"center\") {\n                    desiredVerticalPosition = \"center\";\n                }\n                else if (this.verticalDefaultPosition !== \"unset\") {\n                    switch (this.verticalDefaultPosition) {\n                        case \"top\":\n                            desiredVerticalPosition = this.verticalInset\n                                ? \"insetStart\"\n                                : \"start\";\n                            break;\n                        case \"bottom\":\n                            desiredVerticalPosition = this.verticalInset ? \"insetEnd\" : \"end\";\n                            break;\n                    }\n                }\n                const verticalThreshold = this.verticalThreshold !== undefined\n                    ? this.verticalThreshold\n                    : this.regionRect !== undefined\n                        ? this.regionRect.height\n                        : 0;\n                const anchorTop = this.anchorRect !== undefined ? this.anchorRect.top : 0;\n                const anchorBottom = this.anchorRect !== undefined ? this.anchorRect.bottom : 0;\n                const anchorHeight = this.anchorRect !== undefined ? this.anchorRect.height : 0;\n                const viewportTop = this.viewportRect !== undefined ? this.viewportRect.top : 0;\n                const viewportBottom = this.viewportRect !== undefined ? this.viewportRect.bottom : 0;\n                if (desiredVerticalPosition === undefined ||\n                    (!(this.verticalPositioningMode === \"locktodefault\") &&\n                        this.getAvailableSpace(desiredVerticalPosition, anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom) < verticalThreshold)) {\n                    desiredVerticalPosition =\n                        this.getAvailableSpace(verticalOptions[0], anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom) >\n                            this.getAvailableSpace(verticalOptions[1], anchorTop, anchorBottom, anchorHeight, viewportTop, viewportBottom)\n                            ? verticalOptions[0]\n                            : verticalOptions[1];\n                }\n            }\n            const nextPositionerDimension = this.getNextRegionDimension(desiredHorizontalPosition, desiredVerticalPosition);\n            const positionChanged = this.horizontalPosition !== desiredHorizontalPosition ||\n                this.verticalPosition !== desiredVerticalPosition;\n            this.setHorizontalPosition(desiredHorizontalPosition, nextPositionerDimension);\n            this.setVerticalPosition(desiredVerticalPosition, nextPositionerDimension);\n            this.updateRegionStyle();\n            if (!this.initialLayoutComplete) {\n                this.initialLayoutComplete = true;\n                this.requestPositionUpdates();\n                return;\n            }\n            if (!this.regionVisible) {\n                this.regionVisible = true;\n                this.style.removeProperty(\"pointer-events\");\n                this.style.removeProperty(\"opacity\");\n                this.classList.toggle(\"loaded\", true);\n                this.$emit(\"loaded\", this, { bubbles: false });\n            }\n            this.updatePositionClasses();\n            if (positionChanged) {\n                // emit change event\n                this.$emit(\"positionchange\", this, { bubbles: false });\n            }\n        };\n        /**\n         *  Updates the style string applied to the region element as well as the css classes attached\n         *  to the root element\n         */\n        this.updateRegionStyle = () => {\n            this.style.width = this.regionWidth;\n            this.style.height = this.regionHeight;\n            this.style.transform = `translate(${this.translateX}px, ${this.translateY}px)`;\n        };\n        /**\n         *  Updates the css classes that reflect the current position of the element\n         */\n        this.updatePositionClasses = () => {\n            this.classList.toggle(\"top\", this.verticalPosition === \"start\");\n            this.classList.toggle(\"bottom\", this.verticalPosition === \"end\");\n            this.classList.toggle(\"inset-top\", this.verticalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-bottom\", this.verticalPosition === \"insetEnd\");\n            this.classList.toggle(\"vertical-center\", this.verticalPosition === \"center\");\n            this.classList.toggle(\"left\", this.horizontalPosition === \"start\");\n            this.classList.toggle(\"right\", this.horizontalPosition === \"end\");\n            this.classList.toggle(\"inset-left\", this.horizontalPosition === \"insetStart\");\n            this.classList.toggle(\"inset-right\", this.horizontalPosition === \"insetEnd\");\n            this.classList.toggle(\"horizontal-center\", this.horizontalPosition === \"center\");\n        };\n        /**\n         * Get horizontal positioning state based on desired position\n         */\n        this.setHorizontalPosition = (desiredHorizontalPosition, nextPositionerDimension) => {\n            if (desiredHorizontalPosition === undefined ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined) {\n                return;\n            }\n            let nextRegionWidth = 0;\n            switch (this.horizontalScaling) {\n                case \"anchor\":\n                case \"fill\":\n                    nextRegionWidth = this.horizontalViewportLock\n                        ? this.viewportRect.width\n                        : nextPositionerDimension.width;\n                    this.regionWidth = `${nextRegionWidth}px`;\n                    break;\n                case \"content\":\n                    nextRegionWidth = this.regionRect.width;\n                    this.regionWidth = \"unset\";\n                    break;\n            }\n            let sizeDelta = 0;\n            switch (desiredHorizontalPosition) {\n                case \"start\":\n                    this.translateX = this.baseHorizontalOffset - nextRegionWidth;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.left > this.viewportRect.right) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.left - this.viewportRect.right);\n                    }\n                    break;\n                case \"insetStart\":\n                    this.translateX =\n                        this.baseHorizontalOffset - nextRegionWidth + this.anchorRect.width;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.right > this.viewportRect.right) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.right - this.viewportRect.right);\n                    }\n                    break;\n                case \"insetEnd\":\n                    this.translateX = this.baseHorizontalOffset;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.left < this.viewportRect.left) {\n                        this.translateX =\n                            this.translateX - (this.anchorRect.left - this.viewportRect.left);\n                    }\n                    break;\n                case \"end\":\n                    this.translateX = this.baseHorizontalOffset + this.anchorRect.width;\n                    if (this.horizontalViewportLock &&\n                        this.anchorRect.right < this.viewportRect.left) {\n                        this.translateX =\n                            this.translateX -\n                                (this.anchorRect.right - this.viewportRect.left);\n                    }\n                    break;\n                case \"center\":\n                    sizeDelta = (this.anchorRect.width - nextRegionWidth) / 2;\n                    this.translateX = this.baseHorizontalOffset + sizeDelta;\n                    if (this.horizontalViewportLock) {\n                        const regionLeft = this.anchorRect.left + sizeDelta;\n                        const regionRight = this.anchorRect.right - sizeDelta;\n                        if (regionLeft < this.viewportRect.left &&\n                            !(regionRight > this.viewportRect.right)) {\n                            this.translateX =\n                                this.translateX - (regionLeft - this.viewportRect.left);\n                        }\n                        else if (regionRight > this.viewportRect.right &&\n                            !(regionLeft < this.viewportRect.left)) {\n                            this.translateX =\n                                this.translateX - (regionRight - this.viewportRect.right);\n                        }\n                    }\n                    break;\n            }\n            this.horizontalPosition = desiredHorizontalPosition;\n        };\n        /**\n         * Set vertical positioning state based on desired position\n         */\n        this.setVerticalPosition = (desiredVerticalPosition, nextPositionerDimension) => {\n            if (desiredVerticalPosition === undefined ||\n                this.regionRect === undefined ||\n                this.anchorRect === undefined ||\n                this.viewportRect === undefined) {\n                return;\n            }\n            let nextRegionHeight = 0;\n            switch (this.verticalScaling) {\n                case \"anchor\":\n                case \"fill\":\n                    nextRegionHeight = this.verticalViewportLock\n                        ? this.viewportRect.height\n                        : nextPositionerDimension.height;\n                    this.regionHeight = `${nextRegionHeight}px`;\n                    break;\n                case \"content\":\n                    nextRegionHeight = this.regionRect.height;\n                    this.regionHeight = \"unset\";\n                    break;\n            }\n            let sizeDelta = 0;\n            switch (desiredVerticalPosition) {\n                case \"start\":\n                    this.translateY = this.baseVerticalOffset - nextRegionHeight;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.top > this.viewportRect.bottom) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.top - this.viewportRect.bottom);\n                    }\n                    break;\n                case \"insetStart\":\n                    this.translateY =\n                        this.baseVerticalOffset - nextRegionHeight + this.anchorRect.height;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.bottom > this.viewportRect.bottom) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.bottom - this.viewportRect.bottom);\n                    }\n                    break;\n                case \"insetEnd\":\n                    this.translateY = this.baseVerticalOffset;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.top < this.viewportRect.top) {\n                        this.translateY =\n                            this.translateY - (this.anchorRect.top - this.viewportRect.top);\n                    }\n                    break;\n                case \"end\":\n                    this.translateY = this.baseVerticalOffset + this.anchorRect.height;\n                    if (this.verticalViewportLock &&\n                        this.anchorRect.bottom < this.viewportRect.top) {\n                        this.translateY =\n                            this.translateY -\n                                (this.anchorRect.bottom - this.viewportRect.top);\n                    }\n                    break;\n                case \"center\":\n                    sizeDelta = (this.anchorRect.height - nextRegionHeight) / 2;\n                    this.translateY = this.baseVerticalOffset + sizeDelta;\n                    if (this.verticalViewportLock) {\n                        const regionTop = this.anchorRect.top + sizeDelta;\n                        const regionBottom = this.anchorRect.bottom - sizeDelta;\n                        if (regionTop < this.viewportRect.top &&\n                            !(regionBottom > this.viewportRect.bottom)) {\n                            this.translateY =\n                                this.translateY - (regionTop - this.viewportRect.top);\n                        }\n                        else if (regionBottom > this.viewportRect.bottom &&\n                            !(regionTop < this.viewportRect.top)) {\n                            this.translateY =\n                                this.translateY - (regionBottom - this.viewportRect.bottom);\n                        }\n                    }\n            }\n            this.verticalPosition = desiredVerticalPosition;\n        };\n        /**\n         *  Get available positions based on positioning mode\n         */\n        this.getPositioningOptions = (inset) => {\n            if (inset) {\n                return [\"insetStart\", \"insetEnd\"];\n            }\n            return [\"start\", \"end\"];\n        };\n        /**\n         *  Get the space available for a particular relative position\n         */\n        this.getAvailableSpace = (positionOption, anchorStart, anchorEnd, anchorSpan, viewportStart, viewportEnd) => {\n            const spaceStart = anchorStart - viewportStart;\n            const spaceEnd = viewportEnd - (anchorStart + anchorSpan);\n            switch (positionOption) {\n                case \"start\":\n                    return spaceStart;\n                case \"insetStart\":\n                    return spaceStart + anchorSpan;\n                case \"insetEnd\":\n                    return spaceEnd + anchorSpan;\n                case \"end\":\n                    return spaceEnd;\n                case \"center\":\n                    return Math.min(spaceStart, spaceEnd) * 2 + anchorSpan;\n            }\n        };\n        /**\n         * Get region dimensions\n         */\n        this.getNextRegionDimension = (desiredHorizontalPosition, desiredVerticalPosition) => {\n            const newRegionDimension = {\n                height: this.regionRect !== undefined ? this.regionRect.height : 0,\n                width: this.regionRect !== undefined ? this.regionRect.width : 0,\n            };\n            if (desiredHorizontalPosition !== undefined &&\n                this.horizontalScaling === \"fill\") {\n                newRegionDimension.width = this.getAvailableSpace(desiredHorizontalPosition, this.anchorRect !== undefined ? this.anchorRect.left : 0, this.anchorRect !== undefined ? this.anchorRect.right : 0, this.anchorRect !== undefined ? this.anchorRect.width : 0, this.viewportRect !== undefined ? this.viewportRect.left : 0, this.viewportRect !== undefined ? this.viewportRect.right : 0);\n            }\n            else if (this.horizontalScaling === \"anchor\") {\n                newRegionDimension.width =\n                    this.anchorRect !== undefined ? this.anchorRect.width : 0;\n            }\n            if (desiredVerticalPosition !== undefined && this.verticalScaling === \"fill\") {\n                newRegionDimension.height = this.getAvailableSpace(desiredVerticalPosition, this.anchorRect !== undefined ? this.anchorRect.top : 0, this.anchorRect !== undefined ? this.anchorRect.bottom : 0, this.anchorRect !== undefined ? this.anchorRect.height : 0, this.viewportRect !== undefined ? this.viewportRect.top : 0, this.viewportRect !== undefined ? this.viewportRect.bottom : 0);\n            }\n            else if (this.verticalScaling === \"anchor\") {\n                newRegionDimension.height =\n                    this.anchorRect !== undefined ? this.anchorRect.height : 0;\n            }\n            return newRegionDimension;\n        };\n        /**\n         * starts event listeners that can trigger auto updating\n         */\n        this.startAutoUpdateEventListeners = () => {\n            window.addEventListener(eventResize, this.update, { passive: true });\n            window.addEventListener(eventScroll, this.update, {\n                passive: true,\n                capture: true,\n            });\n            if (this.resizeDetector !== null && this.viewportElement !== null) {\n                this.resizeDetector.observe(this.viewportElement);\n            }\n        };\n        /**\n         * stops event listeners that can trigger auto updating\n         */\n        this.stopAutoUpdateEventListeners = () => {\n            window.removeEventListener(eventResize, this.update);\n            window.removeEventListener(eventScroll, this.update);\n            if (this.resizeDetector !== null && this.viewportElement !== null) {\n                this.resizeDetector.unobserve(this.viewportElement);\n            }\n        };\n    }\n    anchorChanged() {\n        if (this.initialLayoutComplete) {\n            this.anchorElement = this.getAnchor();\n        }\n    }\n    viewportChanged() {\n        if (this.initialLayoutComplete) {\n            this.viewportElement = this.getViewport();\n        }\n    }\n    horizontalPositioningModeChanged() {\n        this.requestReset();\n    }\n    horizontalDefaultPositionChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalViewportLockChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalInsetChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalThresholdChanged() {\n        this.updateForAttributeChange();\n    }\n    horizontalScalingChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalPositioningModeChanged() {\n        this.requestReset();\n    }\n    verticalDefaultPositionChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalViewportLockChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalInsetChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalThresholdChanged() {\n        this.updateForAttributeChange();\n    }\n    verticalScalingChanged() {\n        this.updateForAttributeChange();\n    }\n    fixedPlacementChanged() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.initialize();\n        }\n    }\n    autoUpdateModeChanged(prevMode, newMode) {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            if (prevMode === \"auto\") {\n                this.stopAutoUpdateEventListeners();\n            }\n            if (newMode === \"auto\") {\n                this.startAutoUpdateEventListeners();\n            }\n        }\n    }\n    anchorElementChanged() {\n        this.requestReset();\n    }\n    viewportElementChanged() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.initialize();\n        }\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        if (this.autoUpdateMode === \"auto\") {\n            this.startAutoUpdateEventListeners();\n        }\n        this.initialize();\n    }\n    /**\n     * @internal\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        if (this.autoUpdateMode === \"auto\") {\n            this.stopAutoUpdateEventListeners();\n        }\n        this.stopObservers();\n        this.disconnectResizeDetector();\n    }\n    /**\n     * @internal\n     */\n    adoptedCallback() {\n        this.initialize();\n    }\n    /**\n     * destroys the instance's resize observer\n     */\n    disconnectResizeDetector() {\n        if (this.resizeDetector !== null) {\n            this.resizeDetector.disconnect();\n            this.resizeDetector = null;\n        }\n    }\n    /**\n     * initializes the instance's resize observer\n     */\n    initializeResizeDetector() {\n        this.disconnectResizeDetector();\n        this.resizeDetector = new window.ResizeObserver(this.handleResize);\n    }\n    /**\n     * react to attribute changes that don't require a reset\n     */\n    updateForAttributeChange() {\n        if (this.$fastController.isConnected &&\n            this.initialLayoutComplete) {\n            this.forceUpdate = true;\n            this.update();\n        }\n    }\n    /**\n     * fully initializes the component\n     */\n    initialize() {\n        this.initializeResizeDetector();\n        if (this.anchorElement === null) {\n            this.anchorElement = this.getAnchor();\n        }\n        this.requestReset();\n    }\n    /**\n     * Request a reset if there are currently no open requests\n     */\n    requestReset() {\n        if (this.$fastController.isConnected &&\n            this.pendingReset === false) {\n            this.setInitialState();\n            DOM.queueUpdate(() => this.reset());\n            this.pendingReset = true;\n        }\n    }\n    /**\n     * sets the starting configuration for component internal values\n     */\n    setInitialState() {\n        this.initialLayoutComplete = false;\n        this.regionVisible = false;\n        this.translateX = 0;\n        this.translateY = 0;\n        this.baseHorizontalOffset = 0;\n        this.baseVerticalOffset = 0;\n        this.viewportRect = undefined;\n        this.regionRect = undefined;\n        this.anchorRect = undefined;\n        this.verticalPosition = undefined;\n        this.horizontalPosition = undefined;\n        this.style.opacity = \"0\";\n        this.style.pointerEvents = \"none\";\n        this.forceUpdate = false;\n        this.style.position = this.fixedPlacement ? \"fixed\" : \"absolute\";\n        this.updatePositionClasses();\n        this.updateRegionStyle();\n    }\n}\nAnchoredRegion.intersectionService = new IntersectionService();\n__decorate([\n    attr\n], AnchoredRegion.prototype, \"anchor\", void 0);\n__decorate([\n    attr\n], AnchoredRegion.prototype, \"viewport\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-positioning-mode\" })\n], AnchoredRegion.prototype, \"horizontalPositioningMode\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-default-position\" })\n], AnchoredRegion.prototype, \"horizontalDefaultPosition\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-viewport-lock\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"horizontalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-inset\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"horizontalInset\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-threshold\" })\n], AnchoredRegion.prototype, \"horizontalThreshold\", void 0);\n__decorate([\n    attr({ attribute: \"horizontal-scaling\" })\n], AnchoredRegion.prototype, \"horizontalScaling\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-positioning-mode\" })\n], AnchoredRegion.prototype, \"verticalPositioningMode\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-default-position\" })\n], AnchoredRegion.prototype, \"verticalDefaultPosition\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-viewport-lock\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"verticalViewportLock\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-inset\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"verticalInset\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-threshold\" })\n], AnchoredRegion.prototype, \"verticalThreshold\", void 0);\n__decorate([\n    attr({ attribute: \"vertical-scaling\" })\n], AnchoredRegion.prototype, \"verticalScaling\", void 0);\n__decorate([\n    attr({ attribute: \"fixed-placement\", mode: \"boolean\" })\n], AnchoredRegion.prototype, \"fixedPlacement\", void 0);\n__decorate([\n    attr({ attribute: \"auto-update-mode\" })\n], AnchoredRegion.prototype, \"autoUpdateMode\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"anchorElement\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"viewportElement\", void 0);\n__decorate([\n    observable\n], AnchoredRegion.prototype, \"initialLayoutComplete\", void 0);\n","import { html, ref, when } from \"@microsoft/fast-element\";\nimport { AnchoredRegion } from \"../anchored-region/anchored-region.js\";\n/**\n * Creates a template for the {@link @microsoft/fast-foundation#(Tooltip:class)} component using the provided prefix.\n * @public\n */\nexport const tooltipTemplate = (context, definition) => {\n    return html `\n        ${when(x => x.tooltipVisible, html `\n            <${context.tagFor(AnchoredRegion)}\n                fixed-placement=\"true\"\n                auto-update-mode=\"${x => x.autoUpdateMode}\"\n                vertical-positioning-mode=\"${x => x.verticalPositioningMode}\"\n                vertical-default-position=\"${x => x.verticalDefaultPosition}\"\n                vertical-inset=\"${x => x.verticalInset}\"\n                vertical-scaling=\"${x => x.verticalScaling}\"\n                horizontal-positioning-mode=\"${x => x.horizontalPositioningMode}\"\n                horizontal-default-position=\"${x => x.horizontalDefaultPosition}\"\n                horizontal-scaling=\"${x => x.horizontalScaling}\"\n                horizontal-inset=\"${x => x.horizontalInset}\"\n                vertical-viewport-lock=\"${x => x.horizontalViewportLock}\"\n                horizontal-viewport-lock=\"${x => x.verticalViewportLock}\"\n                dir=\"${x => x.currentDirection}\"\n                ${ref(\"region\")}\n            >\n                <div class=\"tooltip\" part=\"tooltip\" role=\"tooltip\">\n                    <slot></slot>\n                </div>\n            </${context.tagFor(AnchoredRegion)}>\n        `)}\n    `;\n};\n","import { Tooltip as FoundationTooltip, tooltipTemplate as template } from '@microsoft/fast-foundation';\nimport { fillColor, neutralLayerFloating } from '../design-tokens';\nimport { tooltipStyles as styles } from './tooltip.styles';\n/**\n * The Fluent tooltip class\n * @internal\n */\nexport class Tooltip extends FoundationTooltip {\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        fillColor.setValueFor(this, neutralLayerFloating);\n    }\n}\n/**\n * The Fluent Tooltip Custom Element. Implements {@link @microsoft/fast-foundation#Tooltip},\n * {@link @microsoft/fast-foundation#tooltipTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-tooltip\\>\n */\nexport const fluentTooltip = Tooltip.compose({\n    baseName: 'tooltip',\n    baseClass: FoundationTooltip,\n    template,\n    styles,\n});\n","import { css } from '@microsoft/fast-element';\nimport { AnchoredRegion, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { elevationShadowTooltip } from '../styles/index';\nimport { controlCornerRadius, fillColor, neutralForegroundRest, neutralStrokeLayerRest, strokeWidth, } from '../design-tokens';\nimport { typeRampBase } from '../styles/patterns/type-ramp';\nexport const tooltipStyles = (context, definition) => css `\n    :host {\n      position: relative;\n      contain: layout;\n      overflow: visible;\n      height: 0;\n      width: 0;\n      z-index: 10000;\n    }\n\n    .tooltip {\n      box-sizing: border-box;\n      border-radius: calc(${controlCornerRadius} * 1px);\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      background: ${fillColor};\n      color: ${neutralForegroundRest};\n      padding: 4px 12px;\n      height: fit-content;\n      width: fit-content;\n      ${typeRampBase}\n      white-space: nowrap;\n      box-shadow: ${elevationShadowTooltip};\n    }\n\n    ${context.tagFor(AnchoredRegion)} {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      overflow: visible;\n      flex-direction: row;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right,\n    ${context.tagFor(AnchoredRegion)}.left {\n      flex-direction: column;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.left .tooltip::after,\n    ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n      content: '';\n      width: 12px;\n      height: 12px;\n      background: ${fillColor};\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-left: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      position: absolute;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip::after {\n      transform: translateX(-50%) rotate(225deg);\n      bottom: 5px;\n      left: 50%;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.top .tooltip {\n      margin-bottom: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after {\n      transform: translateX(-50%) rotate(45deg);\n      top: 5px;\n      left: 50%;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.bottom .tooltip {\n      margin-top: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.left .tooltip::after {\n      transform: translateY(-50%) rotate(135deg);\n      top: 50%;\n      right: 5px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.left .tooltip {\n      margin-right: 12px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n      transform: translateY(-50%) rotate(-45deg);\n      top: 50%;\n      left: 5px;\n    }\n\n    ${context.tagFor(AnchoredRegion)}.right .tooltip {\n      margin-left: 12px;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host([disabled]) {\n          opacity: 1;\n        }\n        ${context.tagFor(AnchoredRegion)}.top .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.bottom .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.left .tooltip::after,\n        ${context.tagFor(AnchoredRegion)}.right .tooltip::after {\n          content: '';\n          width: unset;\n          height: unset;\n        }\n      `));\n"],"names":["dividerClassNames","useBaseStyles","__styles","base","Bt984gj","B7ck84d","mc9l5x","Beiy3e4","Bh6795r","qhf8xq","Bahqtrf","Be2twd7","Bhrd7zp","Bg96gwp","fsow6f","Bcvre1j","Br0sdwz","Bn78ew0","li1rpt","ap17g6","B771hl4","childless","susq4k","Bicfajf","jwcpgy","B4rk6o","start","Bsft5z2","center","Ftih45","end","brand","sj55zd","Bq4z7u6","Bk5zm6e","Bqjgrrk","Bm6vgfq","B0n5ga8","s924m2","B1q35kw","Gp14am","subtle","strong","d","useHorizontalStyles","a9b677","Bdkvgpv","B0qfbqy","pbipgd","Bm2nyyq","xrcqlc","i5u598","inset","uwmqm3","z189sj","Bxwl2t9","Iy66sp","useVerticalStyles","sshi5w","m598lv","B4f6apu","zkzzav","Barhvk9","Ihftqj","Bde111x","B6of3ja","jrapky","withChildren","Bbdr6tz","gn64ia","Divider","React","props","ref","state","_props$alignContent","alignContent","_props$appearance","appearance","_props$inset","_props$vertical","vertical","wrapper","dividerId","useId","components","root","slot","getIntrinsicElementProps","_objectSpread","role","children","undefined","elementType","defaultProps","id","useDivider_unstable","baseStyles","horizontalStyles","verticalStyles","className","mergeClasses","useDividerStyles_unstable","useCustomStyleHook_unstable","assertSlots","_jsx","renderDivider_unstable","displayName","DividerRole","_FoundationElement","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","orientation","Orientation","horizontal","_createClass","FoundationElement","__decorate","attr","prototype","fluentDivider","compose","baseName","template","context","definition","html","_templateObject","_taggedTemplateLiteral","x","styles","css","display","strokeWidth","neutralStrokeDividerRest","designUnit","Skeleton","shape","mode","fluentSkeleton","pattern","shimmer","when","_templateObject2","neutralFillSecondaryRest","neutralFillSecondaryHover","controlCornerRadius","withBehaviors","forcedColorsStylesheetBehavior","SystemColors","CanvasText","TooltipPosition","Tooltip","anchor","delay","autoUpdateMode","anchorElement","viewportElement","verticalPositioningMode","horizontalPositioningMode","horizontalInset","verticalInset","horizontalScaling","verticalScaling","verticalDefaultPosition","horizontalDefaultPosition","tooltipVisible","currentDirection","Direction","ltr","showDelayTimer","hideDelayTimer","isAnchorHoveredFocused","isRegionHovered","handlePositionChange","ev","classList","toggle","region","verticalPosition","horizontalPosition","handleRegionMouseOver","handleRegionMouseOut","startHideDelayTimer","handleAnchorMouseOver","startShowDelayTimer","handleAnchorMouseOut","clearShowDelayTimer","handleAnchorFocusIn","handleAnchorFocusOut","clearHideDelayTimer","window","setTimeout","updateTooltipVisibility","clearTimeout","startHover","getAnchor","rootNode","getRootNode","ShadowRoot","getElementById","document","handleDocumentKeydown","e","defaultPrevented","key","keyEscape","$emit","visible","hideTooltip","showTooltip","getDirection","_assertThisInitialized","addEventListener","DOM","queueUpdate","setRegionProps","removeEventListener","passive","value","this","$fastController","isConnected","updateLayout","oldValue","_this2","anchorId","parentElement","querySelectorAll","forEach","element","_get","_getPrototypeOf","call","position","attribute","observable","IntersectionService","intersectionDetector","observedElements","Map","requestPosition","target","callback","_a","has","get","push","set","observe","cancelRequestPosition","callbacks","callBackIndex","indexOf","splice","initializeIntersectionDetector","$global","IntersectionObserver","handleIntersection","rootMargin","threshold","entries","pendingCallbacks","pendingCallbackParams","entry","unobserve","thisElementCallbacks","targetCallbackIndex","length","delete","index","AnchoredRegion","viewport","horizontalViewportLock","verticalViewportLock","fixedPlacement","initialLayoutComplete","resizeDetector","baseHorizontalOffset","baseVerticalOffset","pendingPositioningUpdate","pendingReset","regionVisible","forceUpdate","updateThreshold","update","requestPositionUpdates","startObservers","stopObservers","intersectionService","disconnect","getViewport","documentElement","applyIntersectionEntries","regionEntry","find","anchorEntry","viewportEntry","regionRect","anchorRect","viewportRect","isRectDifferent","boundingClientRect","DOMRectReadOnly","scrollLeft","y","scrollTop","width","height","updateRegionOffset","left","translateX","top","translateY","rectA","rectB","Math","abs","right","bottom","handleResize","reset","desiredVerticalPosition","desiredHorizontalPosition","horizontalOptions","getPositioningOptions","dirCorrectedHorizontalDefaultPosition","newDirection","initialize","horizontalThreshold","anchorLeft","anchorRight","anchorWidth","viewportLeft","viewportRight","getAvailableSpace","verticalOptions","verticalThreshold","anchorTop","anchorBottom","anchorHeight","viewportTop","viewportBottom","nextPositionerDimension","getNextRegionDimension","positionChanged","setHorizontalPosition","setVerticalPosition","updateRegionStyle","style","removeProperty","bubbles","updatePositionClasses","regionWidth","regionHeight","transform","concat","nextRegionWidth","sizeDelta","regionLeft","regionRight","nextRegionHeight","regionTop","regionBottom","positionOption","anchorStart","anchorEnd","anchorSpan","viewportStart","viewportEnd","spaceStart","spaceEnd","min","newRegionDimension","startAutoUpdateEventListeners","eventResize","eventScroll","capture","stopAutoUpdateEventListeners","requestReset","updateForAttributeChange","prevMode","newMode","disconnectResizeDetector","ResizeObserver","initializeResizeDetector","setInitialState","opacity","pointerEvents","_FoundationTooltip","fillColor","setValueFor","neutralLayerFloating","FoundationTooltip","fluentTooltip","baseClass","tagFor","neutralStrokeLayerRest","neutralForegroundRest","typeRampBase","elevationShadowTooltip"],"sourceRoot":""}